!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ATTRIBUTE_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		ATTRIBUTE_NODE                = 2,$/;"	e	enum:CL_DomNode::NodeType
BEGIN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		BEGIN  = 1,$/;"	e	enum:CL_XMLToken::TokenVariant
BOOL	/usr/include/ClanLib/GUI/component_type.h	/^		BOOL,$/;"	e	enum:CL_ComponentType::EDatatype
BORLAND	/usr/include/ClanLib/core.h	52;"	d
Behavior	/usr/include/ClanLib/GUI/filedialog.h	/^	enum Behavior$/;"	g	class:CL_FileDialog
ButtonPressed	/usr/include/ClanLib/GUI/filedialog.h	/^	enum ButtonPressed$/;"	g	class:CL_FileDialog
CDATA_SECTION_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		CDATA_SECTION_NODE            = 4,$/;"	e	enum:CL_DomNode::NodeType
CDATA_SECTION_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		CDATA_SECTION_TOKEN            = 4,$/;"	e	enum:CL_XMLToken::TokenType
CL_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_2D                           = 0x0600,$/;"	e	enum:CL_GLDefines
CL_2_BYTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_2_BYTES                        = 0x1407,$/;"	e	enum:CL_GLDefines
CL_3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_3D                           = 0x0601,$/;"	e	enum:CL_GLDefines
CL_3D_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_3D_COLOR                     = 0x0602,$/;"	e	enum:CL_GLDefines
CL_3D_COLOR_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_3D_COLOR_TEXTURE             = 0x0603,$/;"	e	enum:CL_GLDefines
CL_3_BYTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_3_BYTES                        = 0x1408,$/;"	e	enum:CL_GLDefines
CL_4D_COLOR_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_4D_COLOR_TEXTURE             = 0x0604,$/;"	e	enum:CL_GLDefines
CL_4_BYTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_4_BYTES                        = 0x1409,$/;"	e	enum:CL_GLDefines
CL_ABGR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ABGR                     = 0x8000,$/;"	e	enum:CL_GLDefines
CL_ACCUM	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM                          = 0x0100,$/;"	e	enum:CL_GLDefines
CL_ACCUM_ALPHA_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_ALPHA_BITS             = 0x0D5B,$/;"	e	enum:CL_GLDefines
CL_ACCUM_BLUE_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_BLUE_BITS              = 0x0D5A,$/;"	e	enum:CL_GLDefines
CL_ACCUM_BUFFER_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_BUFFER_BIT               = 0x00000200,$/;"	e	enum:CL_GLDefines
CL_ACCUM_CLEAR_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_CLEAR_VALUE            = 0x0B80,$/;"	e	enum:CL_GLDefines
CL_ACCUM_GREEN_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_GREEN_BITS             = 0x0D59,$/;"	e	enum:CL_GLDefines
CL_ACCUM_RED_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACCUM_RED_BITS               = 0x0D58,$/;"	e	enum:CL_GLDefines
CL_ACTIVE_ATTRIBUTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_ATTRIBUTES                   = 0x8B89,$/;"	e	enum:CL_GLDefines
CL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_ATTRIBUTE_MAX_LENGTH         = 0x8B8A,$/;"	e	enum:CL_GLDefines
CL_ACTIVE_STENCIL_FACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_STENCIL_FACE                 = 0x8911$/;"	e	enum:CL_GLDefines
CL_ACTIVE_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_TEXTURE           = 0x84E0,$/;"	e	enum:CL_GLDefines
CL_ACTIVE_UNIFORMS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_UNIFORMS                     = 0x8B86,$/;"	e	enum:CL_GLDefines
CL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ACTIVE_UNIFORM_MAX_LENGTH           = 0x8B87,$/;"	e	enum:CL_GLDefines
CL_ADD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ADD                            = 0x0104,$/;"	e	enum:CL_GLDefines
CL_ADD_SIGNED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ADD_SIGNED               = 0x8574,$/;"	e	enum:CL_GLDefines
CL_ALIASED_LINE_WIDTH_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALIASED_LINE_WIDTH_RANGE     = 0x846E,$/;"	e	enum:CL_GLDefines
CL_ALIASED_POINT_SIZE_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALIASED_POINT_SIZE_RANGE     = 0x846D,$/;"	e	enum:CL_GLDefines
CL_ALL_ATTRIB_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALL_ATTRIB_BITS                = 0x000fffff,$/;"	e	enum:CL_GLDefines
CL_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA                        = 0x1906,$/;"	e	enum:CL_GLDefines
CL_ALPHA12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA12                      = 0x803D,$/;"	e	enum:CL_GLDefines
CL_ALPHA16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA16                      = 0x803E,$/;"	e	enum:CL_GLDefines
CL_ALPHA4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA4                       = 0x803B,$/;"	e	enum:CL_GLDefines
CL_ALPHA8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA8                       = 0x803C,$/;"	e	enum:CL_GLDefines
CL_ALPHA_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_BIAS                   = 0x0D1D,$/;"	e	enum:CL_GLDefines
CL_ALPHA_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_BITS                   = 0x0D55,$/;"	e	enum:CL_GLDefines
CL_ALPHA_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_SCALE                  = 0x0D1C,$/;"	e	enum:CL_GLDefines
CL_ALPHA_TEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_TEST                   = 0x0BC0,$/;"	e	enum:CL_GLDefines
CL_ALPHA_TEST_FUNC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_TEST_FUNC              = 0x0BC1,$/;"	e	enum:CL_GLDefines
CL_ALPHA_TEST_REF	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALPHA_TEST_REF               = 0x0BC2,$/;"	e	enum:CL_GLDefines
CL_ALWAYS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ALWAYS                         = 0x0207,$/;"	e	enum:CL_GLDefines
CL_AMBIENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AMBIENT                      = 0x1200,$/;"	e	enum:CL_GLDefines
CL_AMBIENT_AND_DIFFUSE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AMBIENT_AND_DIFFUSE          = 0x1602,$/;"	e	enum:CL_GLDefines
CL_AND	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AND                          = 0x1501,$/;"	e	enum:CL_GLDefines
CL_AND_INVERTED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AND_INVERTED                 = 0x1504,$/;"	e	enum:CL_GLDefines
CL_AND_REVERSE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AND_REVERSE                  = 0x1502,$/;"	e	enum:CL_GLDefines
CL_API_CORE	/usr/include/ClanLib/Core/IOData/cl_endian.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/cl_endian.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/cl_endian.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory_scanner.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory_scanner.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/directory_scanner.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_file.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_file.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_file.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_archive.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_archive.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_archive.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/cl_vector.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/cl_vector.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/cl_vector.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/line_math.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/line_math.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/line_math.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/matrix4x4.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/matrix4x4.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/matrix4x4.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/number_pool.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/number_pool.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/number_pool.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/origin.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/origin.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/origin.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/outline_triangulator.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/outline_triangulator.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/outline_triangulator.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/pointset_math.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/pointset_math.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/pointset_math.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/quad.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/quad.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/quad.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/rect.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/rect.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/rect.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/triangle_math.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/triangle_math.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/triangle_math.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/vector2.h	37;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/vector2.h	39;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Math/vector2.h	42;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource_manager.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource_manager.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resource_manager.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcedata.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcedata.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcedata.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/call_stack.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/call_stack.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/call_stack.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_assert.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_assert.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_assert.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_library.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_library.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/cl_library.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clanstring.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clanstring.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clanstring.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clipboard.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clipboard.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/clipboard.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/command_line.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/command_line.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/command_line.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/console_window.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/console_window.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/console_window.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/crash_reporter.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/crash_reporter.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/crash_reporter.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/error.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/error.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/error.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_listener.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_listener.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_listener.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_trigger.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_trigger.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/event_trigger.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/keep_alive.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/keep_alive.h	42;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/keep_alive.h	45;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/log.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/log.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/log.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/mutex.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/mutex.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/mutex.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/setupcore.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/setupcore.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/setupcore.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/system.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/system.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/system.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/thread.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/thread.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/thread.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/timer.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/timer.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/System/timer.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_attr.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_attr.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_attr.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_cdata_section.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_cdata_section.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_cdata_section.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_character_data.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_character_data.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_character_data.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_comment.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_comment.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_comment.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_fragment.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_fragment.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_fragment.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_type.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_type.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_document_type.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_element.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_element.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_element.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity_reference.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity_reference.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_entity_reference.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_exception.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_exception.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_exception.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_implementation.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_implementation.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_implementation.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node_list.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node_list.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_node_list.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_notation.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_notation.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_notation.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_processing_instruction.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_processing_instruction.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_processing_instruction.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_text.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_text.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/dom_text.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_writer.h	38;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_writer.h	40;"	d
CL_API_CORE	/usr/include/ClanLib/Core/XML/xml_writer.h	43;"	d
CL_API_CORE	/usr/include/ClanLib/Core/core_iostream.h	35;"	d
CL_API_CORE	/usr/include/ClanLib/Core/core_iostream.h	37;"	d
CL_API_CORE	/usr/include/ClanLib/Core/core_iostream.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/collision_outline.h	41;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/collision_outline.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/collision_outline.h	46;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	39;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	41;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	44;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	39;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	41;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	44;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/bmp_provider.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/bmp_provider.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/bmp_provider.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/dc_buffer.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/dc_buffer.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/dc_buffer.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/jpeg_provider.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/jpeg_provider.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/jpeg_provider.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/pcx_provider.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/pcx_provider.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/pcx_provider.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/png_provider.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/png_provider.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/png_provider.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_factory.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_factory.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_factory.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_type.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_type.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/provider_type.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/targa_provider.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/targa_provider.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/Providers/targa_provider.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/canvas.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/canvas.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/canvas.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/color.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/color.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/color.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_mode.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_mode.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_mode.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window_description.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window_description.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/display_window_description.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/font.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/font.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/font.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/frameratecounter.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/frameratecounter.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/frameratecounter.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/glyph_buffer.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/glyph_buffer.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/glyph_buffer.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/graphic_context.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/graphic_context.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/graphic_context.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_buffer.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_buffer.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_buffer.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_button.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_button.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_button.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_context.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_context.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_context.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_device.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_device.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_device.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_event.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_event.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/input_event.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/joystick.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/joystick.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/joystick.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/key_binding.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/key_binding.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/key_binding.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/keyboard.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/keyboard.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/keyboard.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/mouse.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/mouse.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/mouse.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_buffer.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_buffer.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_buffer.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_format.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_format.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/pixel_format.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/rle_surface.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/rle_surface.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/rle_surface.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/setupdisplay.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/setupdisplay.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/setupdisplay.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_description.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_description.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_description.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_packer.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_packer.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/sprite_packer.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/surface.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/surface.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/surface.h	43;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/text_styler.h	38;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/text_styler.h	40;"	d
CL_API_DISPLAY	/usr/include/ClanLib/Display/text_styler.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/light_source.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/light_source.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/light_source.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_state.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_state.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_state.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_surface.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_surface.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_surface.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window_description.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window_description.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_window_description.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_wrap.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_wrap.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/opengl_wrap.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_attribute.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_attribute.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_attribute.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_object.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_object.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_object.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_uniform.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_uniform.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/program_uniform.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/setupgl.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/setupgl.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/setupgl.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/shader_object.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/shader_object.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/shader_object.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/texture.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/texture.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/texture.h	43;"	d
CL_API_GL	/usr/include/ClanLib/GL/viewpoint.h	38;"	d
CL_API_GL	/usr/include/ClanLib/GL/viewpoint.h	40;"	d
CL_API_GL	/usr/include/ClanLib/GL/viewpoint.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/button.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/button.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/button.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/checkbox.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/checkbox.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/checkbox.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_manager.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_manager.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_manager.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_move_handler.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_move_handler.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_move_handler.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_resize_handler.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_resize_handler.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_resize_handler.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_type.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_type.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/component_type.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/deck.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/deck.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/deck.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/filedialog.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/filedialog.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/filedialog.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/frame.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/frame.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/frame.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/gui_manager.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/gui_manager.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/gui_manager.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/image.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/image.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/image.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputbox.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputbox.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputbox.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputdialog.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputdialog.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/inputdialog.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/label.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/label.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/label.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/layout.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/layout.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/layout.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listbox.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listbox.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listbox.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listitem.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listitem.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/listitem.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_item.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_item.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_item.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_node.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_node.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/menu_node.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/messagebox.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/messagebox.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/messagebox.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/progressbar.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/progressbar.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/progressbar.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiobutton.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiobutton.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiobutton.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiogroup.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiogroup.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/radiogroup.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit_paragraph.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit_paragraph.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/richedit_paragraph.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/scrollbar.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/scrollbar.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/scrollbar.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/setupgui.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/setupgui.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/setupgui.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/stylemanager.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/stylemanager.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/stylemanager.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeitem.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeitem.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeitem.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treenode.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treenode.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treenode.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeview.h	38;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeview.h	40;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/treeview.h	43;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/window.h	39;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/window.h	41;"	d
CL_API_GUI	/usr/include/ClanLib/GUI/window.h	44;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	39;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	41;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	44;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	39;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	41;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	44;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	38;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	40;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	43;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	39;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	41;"	d
CL_API_GUISTYLESILVER	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	44;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/setupmikmod.h	38;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/setupmikmod.h	40;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/setupmikmod.h	43;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	38;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	40;"	d
CL_API_MIKMOD	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/dcc_download.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/dcc_download.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/dcc_download.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/irc_connection.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/irc_connection.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/IRC/irc_connection.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netcomputer.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netcomputer.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netcomputer.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netgroup.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netgroup.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netgroup.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netpacket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netpacket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netpacket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netsession.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netsession.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netsession.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netstream.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netstream.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/netstream.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetVariables/netvariables.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetVariables/netvariables.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/NetVariables/netvariables.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/ip_address.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/ip_address.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/ip_address.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/socket.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/socket.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/Socket/socket.h	43;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/setupnetwork.h	38;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/setupnetwork.h	40;"	d
CL_API_NETWORK	/usr/include/ClanLib/Network/setupnetwork.h	43;"	d
CL_API_SDL	/usr/include/ClanLib/SDL/setupsdl.h	38;"	d
CL_API_SDL	/usr/include/ClanLib/SDL/setupsdl.h	40;"	d
CL_API_SDL	/usr/include/ClanLib/SDL/setupsdl.h	43;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot.h	38;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot.h	40;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot.h	43;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot_generic.h	38;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot_generic.h	40;"	d
CL_API_SIGNALS	/usr/include/ClanLib/Signals/slot_generic.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/cd_drive.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/cd_drive.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/cd_drive.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/setupsound.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/setupsound.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/setupsound.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/sound.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/sound.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/sound.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer_session.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer_session.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundbuffer_session.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundfilter.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundfilter.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundfilter.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput_description.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput_description.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundoutput_description.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider.h	43;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider_session.h	38;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider_session.h	40;"	d
CL_API_SOUND	/usr/include/ClanLib/Sound/soundprovider_session.h	43;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/setupvorbis.h	38;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/setupvorbis.h	40;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/setupvorbis.h	43;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	38;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	40;"	d
CL_API_VORBIS	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	43;"	d
CL_ARRAY_BUFFER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ARRAY_BUFFER                        = 0x8892,$/;"	e	enum:CL_GLDefines
CL_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ARRAY_BUFFER_BINDING                = 0x8894,$/;"	e	enum:CL_GLDefines
CL_ATTACHED_OBJECTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ATTACHED_OBJECTS                    = 0x8B85,$/;"	e	enum:CL_GLDefines
CL_ATTRIB_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ATTRIB_STACK_DEPTH           = 0x0BB0,$/;"	e	enum:CL_GLDefines
CL_AUTO_NORMAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUTO_NORMAL                  = 0x0D80,$/;"	e	enum:CL_GLDefines
CL_AUX0	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUX0                           = 0x0409,$/;"	e	enum:CL_GLDefines
CL_AUX1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUX1                           = 0x040A,$/;"	e	enum:CL_GLDefines
CL_AUX2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUX2                           = 0x040B,$/;"	e	enum:CL_GLDefines
CL_AUX3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUX3                           = 0x040C,$/;"	e	enum:CL_GLDefines
CL_AUX_BUFFERS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_AUX_BUFFERS                  = 0x0C00,$/;"	e	enum:CL_GLDefines
CL_Assert	/usr/include/ClanLib/Core/System/cl_assert.h	/^class CL_API_CORE CL_Assert$/;"	c
CL_BACK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BACK                           = 0x0405,$/;"	e	enum:CL_GLDefines
CL_BACK_LEFT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BACK_LEFT                      = 0x0402,$/;"	e	enum:CL_GLDefines
CL_BACK_RIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BACK_RIGHT                     = 0x0403,$/;"	e	enum:CL_GLDefines
CL_BGR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BGR                          = 0x80E0,$/;"	e	enum:CL_GLDefines
CL_BGRA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BGRA                         = 0x80E1,$/;"	e	enum:CL_GLDefines
CL_BITMAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BITMAP                       = 0x1A00,$/;"	e	enum:CL_GLDefines
CL_BITMAP_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BITMAP_TOKEN                 = 0x0704,$/;"	e	enum:CL_GLDefines
CL_BLEND	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND                        = 0x0BE2,$/;"	e	enum:CL_GLDefines
CL_BLEND_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_COLOR                  = 0x8005,$/;"	e	enum:CL_GLDefines
CL_BLEND_DST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_DST                    = 0x0BE0,$/;"	e	enum:CL_GLDefines
CL_BLEND_DST_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_DST_ALPHA             = 0x80ca,$/;"	e	enum:CL_GLDefines
CL_BLEND_DST_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_DST_RGB               = 0x80c8,$/;"	e	enum:CL_GLDefines
CL_BLEND_EQUATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_EQUATION               = 0x8009,$/;"	e	enum:CL_GLDefines
CL_BLEND_SRC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_SRC                    = 0x0BE1,$/;"	e	enum:CL_GLDefines
CL_BLEND_SRC_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_SRC_ALPHA             = 0x80cb,$/;"	e	enum:CL_GLDefines
CL_BLEND_SRC_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLEND_SRC_RGB               = 0x80c9,$/;"	e	enum:CL_GLDefines
CL_BLUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLUE                         = 0x1905,$/;"	e	enum:CL_GLDefines
CL_BLUE_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLUE_BIAS                    = 0x0D1B,$/;"	e	enum:CL_GLDefines
CL_BLUE_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLUE_BITS                    = 0x0D54,$/;"	e	enum:CL_GLDefines
CL_BLUE_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BLUE_SCALE                   = 0x0D1A,$/;"	e	enum:CL_GLDefines
CL_BMPProvider	/usr/include/ClanLib/Display/Providers/bmp_provider.h	/^class CL_API_DISPLAY CL_BMPProvider : public CL_PixelBuffer$/;"	c
CL_BOOL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BOOL                                = 0x8B56,$/;"	e	enum:CL_GLDefines
CL_BOOL_VEC2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BOOL_VEC2                           = 0x8B57,$/;"	e	enum:CL_GLDefines
CL_BOOL_VEC3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BOOL_VEC3                           = 0x8B58,$/;"	e	enum:CL_GLDefines
CL_BOOL_VEC4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BOOL_VEC4                           = 0x8B59,$/;"	e	enum:CL_GLDefines
CL_BUFFER_ACCESS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BUFFER_ACCESS                       = 0x88BB,$/;"	e	enum:CL_GLDefines
CL_BUFFER_MAPPED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BUFFER_MAPPED                       = 0x88BC,$/;"	e	enum:CL_GLDefines
CL_BUFFER_MAP_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BUFFER_MAP_POINTER                  = 0x88BD,$/;"	e	enum:CL_GLDefines
CL_BUFFER_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BUFFER_SIZE                         = 0x8764,$/;"	e	enum:CL_GLDefines
CL_BUFFER_USAGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BUFFER_USAGE                        = 0x8765,$/;"	e	enum:CL_GLDefines
CL_BYTE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_BYTE                           = 0x1400,$/;"	e	enum:CL_GLDefines
CL_BlendFunc	/usr/include/ClanLib/Display/blend_func.h	/^enum CL_BlendFunc$/;"	g
CL_Boolean	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	CL_Boolean(const std::string &res_id, CL_ResourceManager *resources)$/;"	f	class:CL_Boolean
CL_Boolean	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	CL_Boolean(const std::string &res_id, CL_ResourceManager *resources, bool def_value)$/;"	f	class:CL_Boolean
CL_Boolean	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^class CL_Boolean$/;"	c
CL_Button	/usr/include/ClanLib/GUI/button.h	/^	CL_Button(const CL_Button &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Button
CL_Button	/usr/include/ClanLib/GUI/button.h	/^class CL_API_GUI CL_Button : public CL_Component$/;"	c
CL_Button_Silver	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^class CL_API_GUISTYLESILVER CL_Button_Silver : public CL_ComponentStyle$/;"	c
CL_C3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_C3F_V3F                      = 0x2A24,$/;"	e	enum:CL_GLDefines
CL_C4F_N3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_C4F_N3F_V3F                  = 0x2A26,$/;"	e	enum:CL_GLDefines
CL_C4UB_V2F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_C4UB_V2F                     = 0x2A22,$/;"	e	enum:CL_GLDefines
CL_C4UB_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_C4UB_V3F                     = 0x2A23,$/;"	e	enum:CL_GLDefines
CL_CCW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CCW                          = 0x0901,$/;"	e	enum:CL_GLDefines
CL_CDDrive	/usr/include/ClanLib/Sound/cd_drive.h	/^class CL_API_SOUND CL_CDDrive$/;"	c
CL_CLAMP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLAMP                        = 0x2900,$/;"	e	enum:CL_GLDefines
CL_CLAMP_TO_BORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLAMP_TO_BORDER              = 0x812D,$/;"	e	enum:CL_GLDefines
CL_CLAMP_TO_EDGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLAMP_TO_EDGE                = 0x812F,$/;"	e	enum:CL_GLDefines
CL_CLEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLEAR                        = 0x1500,$/;"	e	enum:CL_GLDefines
CL_CLIENT_ACTIVE_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIENT_ACTIVE_TEXTURE    = 0x84E1,$/;"	e	enum:CL_GLDefines
CL_CLIENT_ALL_ATTRIB_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIENT_ALL_ATTRIB_BITS       = 0xffffffff,$/;"	e	enum:CL_GLDefines
CL_CLIENT_ATTRIB_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIENT_ATTRIB_STACK_DEPTH    = 0x0BB1,$/;"	e	enum:CL_GLDefines
CL_CLIENT_PIXEL_STORE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIENT_PIXEL_STORE_BIT       = 0x00000001,$/;"	e	enum:CL_GLDefines
CL_CLIENT_VERTEX_ARRAY_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIENT_VERTEX_ARRAY_BIT      = 0x00000002,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE0	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE0                    = 0x3000,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE1                    = 0x3001,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE2                    = 0x3002,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE3                    = 0x3003,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE4                    = 0x3004,$/;"	e	enum:CL_GLDefines
CL_CLIP_PLANE5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CLIP_PLANE5                    = 0x3005,$/;"	e	enum:CL_GLDefines
CL_COEFF	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COEFF                        = 0x0A00,$/;"	e	enum:CL_GLDefines
CL_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR                        = 0x1800,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY                  = 0x8076,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY_BUFFER_BINDING          = 0x8898,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY_POINTER          = 0x8090,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY_SIZE             = 0x8081,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY_STRIDE           = 0x8083,$/;"	e	enum:CL_GLDefines
CL_COLOR_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_ARRAY_TYPE             = 0x8082,$/;"	e	enum:CL_GLDefines
CL_COLOR_BUFFER_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_BUFFER_BIT               = 0x00004000,$/;"	e	enum:CL_GLDefines
CL_COLOR_CLEAR_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_CLEAR_VALUE            = 0x0C22,$/;"	e	enum:CL_GLDefines
CL_COLOR_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_INDEX                  = 0x1900,$/;"	e	enum:CL_GLDefines
CL_COLOR_INDEXES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_INDEXES                = 0x1603,$/;"	e	enum:CL_GLDefines
CL_COLOR_LOGIC_OP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_LOGIC_OP               = 0x0BF2,$/;"	e	enum:CL_GLDefines
CL_COLOR_MATERIAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_MATERIAL               = 0x0B57,$/;"	e	enum:CL_GLDefines
CL_COLOR_MATERIAL_FACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_MATERIAL_FACE          = 0x0B55,$/;"	e	enum:CL_GLDefines
CL_COLOR_MATERIAL_PARAMETER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_MATERIAL_PARAMETER     = 0x0B56,$/;"	e	enum:CL_GLDefines
CL_COLOR_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_MATRIX                 = 0x80B1,$/;"	e	enum:CL_GLDefines
CL_COLOR_MATRIX_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_MATRIX_STACK_DEPTH     = 0x80B2,$/;"	e	enum:CL_GLDefines
CL_COLOR_SUM	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_SUM                   = 0x8458,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE                  = 0x80D0,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_ALPHA_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_ALPHA_SIZE       = 0x80DD,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_BIAS             = 0x80D7,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_BLUE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_BLUE_SIZE        = 0x80DC,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_FORMAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_FORMAT           = 0x80D8,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_GREEN_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_GREEN_SIZE       = 0x80DB,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_INTENSITY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_INTENSITY_SIZE   = 0x80DF,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_LUMINANCE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_LUMINANCE_SIZE   = 0x80DE,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_RED_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_RED_SIZE         = 0x80DA,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_SCALE            = 0x80D6,$/;"	e	enum:CL_GLDefines
CL_COLOR_TABLE_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_TABLE_WIDTH            = 0x80D9,$/;"	e	enum:CL_GLDefines
CL_COLOR_WRITEMASK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COLOR_WRITEMASK              = 0x0C23,$/;"	e	enum:CL_GLDefines
CL_COMBINE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMBINE                  = 0x8570,$/;"	e	enum:CL_GLDefines
CL_COMBINE_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMBINE_ALPHA            = 0x8572,$/;"	e	enum:CL_GLDefines
CL_COMBINE_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMBINE_RGB              = 0x8571,$/;"	e	enum:CL_GLDefines
CL_COMPARE_R_TO_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPARE_R_TO_TEXTURE        = 0x884e,$/;"	e	enum:CL_GLDefines
CL_COMPILE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPILE                      = 0x1300,$/;"	e	enum:CL_GLDefines
CL_COMPILE_AND_EXECUTE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPILE_AND_EXECUTE          = 0x1301,$/;"	e	enum:CL_GLDefines
CL_COMPILE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPILE_STATUS                      = 0x8B81,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_ALPHA           = 0x84e9,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_INTENSITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_INTENSITY       = 0x84ec,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_LUMINANCE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_LUMINANCE       = 0x84ea,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_LUMINANCE_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_LUMINANCE_ALPHA = 0x84eb,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_RGB             = 0x84ed,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_RGBA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_RGBA            = 0x84ee,$/;"	e	enum:CL_GLDefines
CL_COMPRESSED_TEXTURE_FORMATS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COMPRESSED_TEXTURE_FORMATS = 0x86a3,$/;"	e	enum:CL_GLDefines
CL_CONSTANT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONSTANT                 = 0x8576,$/;"	e	enum:CL_GLDefines
CL_CONSTANT_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONSTANT_ALPHA               = 0x8003,$/;"	e	enum:CL_GLDefines
CL_CONSTANT_ATTENUATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONSTANT_ATTENUATION         = 0x1207,$/;"	e	enum:CL_GLDefines
CL_CONSTANT_BORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONSTANT_BORDER              = 0x8151,$/;"	e	enum:CL_GLDefines
CL_CONSTANT_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONSTANT_COLOR               = 0x8001,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_1D               = 0x8010,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_2D               = 0x8011,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_BORDER_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_BORDER_COLOR     = 0x8154,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_BORDER_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_BORDER_MODE      = 0x8013,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_FILTER_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_FILTER_BIAS      = 0x8015,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_FILTER_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_FILTER_SCALE     = 0x8014,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_FORMAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_FORMAT           = 0x8017,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_HEIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_HEIGHT           = 0x8019,$/;"	e	enum:CL_GLDefines
CL_CONVOLUTION_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CONVOLUTION_WIDTH            = 0x8018,$/;"	e	enum:CL_GLDefines
CL_COORD_REPLACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COORD_REPLACE                       = 0x8862,$/;"	e	enum:CL_GLDefines
CL_COPY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COPY                         = 0x1503,$/;"	e	enum:CL_GLDefines
CL_COPY_INVERTED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COPY_INVERTED                = 0x150C,$/;"	e	enum:CL_GLDefines
CL_COPY_PIXEL_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_COPY_PIXEL_TOKEN             = 0x0706,$/;"	e	enum:CL_GLDefines
CL_CULL_FACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CULL_FACE                    = 0x0B44,$/;"	e	enum:CL_GLDefines
CL_CULL_FACE_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CULL_FACE_MODE               = 0x0B45,$/;"	e	enum:CL_GLDefines
CL_CURRENT_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_BIT                    = 0x00000001,$/;"	e	enum:CL_GLDefines
CL_CURRENT_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_COLOR                = 0x0B00,$/;"	e	enum:CL_GLDefines
CL_CURRENT_FOG_COORD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_FOG_COORD           = CL_CURRENT_FOG_COORDINATE,$/;"	e	enum:CL_GLDefines
CL_CURRENT_FOG_COORDINATE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_FOG_COORDINATE      = 0x8453,$/;"	e	enum:CL_GLDefines
CL_CURRENT_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_INDEX                = 0x0B01,$/;"	e	enum:CL_GLDefines
CL_CURRENT_NORMAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_NORMAL               = 0x0B02,$/;"	e	enum:CL_GLDefines
CL_CURRENT_QUERY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_QUERY                       = 0x8865,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_COLOR         = 0x0B04,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_DISTANCE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_DISTANCE      = 0x0B09,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_INDEX         = 0x0B05,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_POSITION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_POSITION      = 0x0B07,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_POSITION_VALID	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_POSITION_VALID= 0x0B08,$/;"	e	enum:CL_GLDefines
CL_CURRENT_RASTER_TEXTURE_COORDS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_RASTER_TEXTURE_COORDS= 0x0B06,$/;"	e	enum:CL_GLDefines
CL_CURRENT_SECONDARY_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_SECONDARY_COLOR     = 0x8459,$/;"	e	enum:CL_GLDefines
CL_CURRENT_TEXTURE_COORDS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_TEXTURE_COORDS       = 0x0B03,$/;"	e	enum:CL_GLDefines
CL_CURRENT_VERSION	/usr/include/ClanLib/core.h	44;"	d
CL_CURRENT_VERTEX_ATTRIB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CURRENT_VERTEX_ATTRIB               = 0x8626,$/;"	e	enum:CL_GLDefines
CL_CW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_CW                           = 0x0900,$/;"	e	enum:CL_GLDefines
CL_CallStack	/usr/include/ClanLib/Core/System/call_stack.h	/^class CL_API_CORE CL_CallStack$/;"	c
CL_Canvas	/usr/include/ClanLib/Display/canvas.h	/^class CL_API_DISPLAY CL_Canvas$/;"	c
CL_CheckBox	/usr/include/ClanLib/GUI/checkbox.h	/^	CL_CheckBox(const CL_CheckBox &copy) : CL_Button(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_CheckBox
CL_CheckBox	/usr/include/ClanLib/GUI/checkbox.h	/^class CL_API_GUI CL_CheckBox : public CL_Button$/;"	c
CL_CheckBox_Silver	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^class CL_API_GUISTYLESILVER CL_CheckBox_Silver : public CL_ComponentStyle$/;"	c
CL_Circle	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circle()$/;"	f	class:CL_Circle
CL_Circle	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circle(const CL_Point &p, int radius)$/;"	f	class:CL_Circle
CL_Circle	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circle(int x, int y, int radius)$/;"	f	class:CL_Circle
CL_Circle	/usr/include/ClanLib/Core/Math/circle.h	/^class CL_Circle$/;"	c
CL_Circle	/usr/include/ClanLib/Core/Math/circle.h	/^inline CL_Circle::CL_Circle(const CL_Circlef &other)$/;"	f	class:CL_Circle
CL_Circlef	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circlef()$/;"	f	class:CL_Circlef
CL_Circlef	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circlef(const CL_Pointf &p, double radius)$/;"	f	class:CL_Circlef
CL_Circlef	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Circlef(double x, double y, double radius)$/;"	f	class:CL_Circlef
CL_Circlef	/usr/include/ClanLib/Core/Math/circle.h	/^class CL_Circlef$/;"	c
CL_ClanApplication	/usr/include/ClanLib/Application/clanapp.h	/^class CL_ClanApplication$/;"	c
CL_Clipboard	/usr/include/ClanLib/Core/System/clipboard.h	/^class CL_API_CORE CL_Clipboard$/;"	c
CL_Clonable	/usr/include/ClanLib/Core/System/clonable.h	/^class CL_Clonable$/;"	c
CL_CollidingContours	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_CollidingContours(const CL_Contour *c1, const CL_Contour *c2, bool in=false) :$/;"	f	struct:CL_CollidingContours
CL_CollidingContours	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^struct CL_CollidingContours$/;"	s
CL_CollisionOutline	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^class CL_API_DISPLAY CL_CollisionOutline$/;"	c
CL_CollisionPoint	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^struct CL_CollisionPoint$/;"	s
CL_Color	/usr/include/ClanLib/Display/color.h	/^	CL_Color() : color(0) { return; }$/;"	f	class:CL_Color
CL_Color	/usr/include/ClanLib/Display/color.h	/^	CL_Color(unsigned int red, unsigned int green, unsigned int blue, unsigned int alpha = 255)$/;"	f	class:CL_Color
CL_Color	/usr/include/ClanLib/Display/color.h	/^class CL_API_DISPLAY CL_Color$/;"	c
CL_Colorf	/usr/include/ClanLib/Display/color.h	/^	CL_Colorf()$/;"	f	class:CL_Colorf
CL_Colorf	/usr/include/ClanLib/Display/color.h	/^	CL_Colorf(const CL_Color& color)$/;"	f	class:CL_Colorf
CL_Colorf	/usr/include/ClanLib/Display/color.h	/^	CL_Colorf(float r, float g, float b, float a = 1.0f)$/;"	f	class:CL_Colorf
CL_Colorf	/usr/include/ClanLib/Display/color.h	/^class CL_Colorf$/;"	c
CL_CommandLine	/usr/include/ClanLib/Core/System/command_line.h	/^class CL_API_CORE CL_CommandLine$/;"	c
CL_Component	/usr/include/ClanLib/GUI/component.h	/^class CL_API_GUI CL_Component$/;"	c
CL_ComponentManager	/usr/include/ClanLib/GUI/component_manager.h	/^class CL_API_GUI CL_ComponentManager$/;"	c
CL_ComponentMoveHandler	/usr/include/ClanLib/GUI/component_move_handler.h	/^class CL_API_GUI CL_ComponentMoveHandler : public CL_Component$/;"	c
CL_ComponentResizeHandler	/usr/include/ClanLib/GUI/component_resize_handler.h	/^class CL_API_GUI CL_ComponentResizeHandler : public CL_Component$/;"	c
CL_ComponentStyle	/usr/include/ClanLib/GUI/component_style.h	/^	CL_ComponentStyle(CL_Component *component) : comp(component) { return; }$/;"	f	class:CL_ComponentStyle
CL_ComponentStyle	/usr/include/ClanLib/GUI/component_style.h	/^class CL_ComponentStyle$/;"	c
CL_ComponentType	/usr/include/ClanLib/GUI/component_type.h	/^class CL_API_GUI CL_ComponentType$/;"	c
CL_ConsoleWindow	/usr/include/ClanLib/Core/System/console_window.h	/^class CL_API_CORE CL_ConsoleWindow$/;"	c
CL_Contour	/usr/include/ClanLib/Display/Collision/contour.h	/^	CL_Contour() : is_inside_contour(false) {};$/;"	f	class:CL_Contour
CL_Contour	/usr/include/ClanLib/Display/Collision/contour.h	/^class CL_Contour$/;"	c
CL_CrashReporter	/usr/include/ClanLib/Core/System/crash_reporter.h	/^class CL_API_CORE CL_CrashReporter$/;"	c
CL_DCCDownload	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^class CL_API_NETWORK CL_DCCDownload$/;"	c
CL_DECAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DECAL                        = 0x2101,$/;"	e	enum:CL_GLDefines
CL_DECR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DECR                         = 0x1E03,$/;"	e	enum:CL_GLDefines
CL_DECR_WRAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DECR_WRAP                   = 0x8508,$/;"	e	enum:CL_GLDefines
CL_DELETE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DELETE_STATUS                       = 0x8B80,$/;"	e	enum:CL_GLDefines
CL_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH                        = 0x1801,$/;"	e	enum:CL_GLDefines
CL_DEPTH_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_BIAS                   = 0x0D1F,$/;"	e	enum:CL_GLDefines
CL_DEPTH_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_BITS                   = 0x0D56,$/;"	e	enum:CL_GLDefines
CL_DEPTH_BUFFER_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_BUFFER_BIT               = 0x00000100,$/;"	e	enum:CL_GLDefines
CL_DEPTH_CLEAR_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_CLEAR_VALUE            = 0x0B73,$/;"	e	enum:CL_GLDefines
CL_DEPTH_COMPONENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_COMPONENT              = 0x1902,$/;"	e	enum:CL_GLDefines
CL_DEPTH_COMPONENT16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_COMPONENT16           = 0x81a5,$/;"	e	enum:CL_GLDefines
CL_DEPTH_COMPONENT24	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_COMPONENT24           = 0x81a6,$/;"	e	enum:CL_GLDefines
CL_DEPTH_COMPONENT32	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_COMPONENT32           = 0x81a7,$/;"	e	enum:CL_GLDefines
CL_DEPTH_FUNC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_FUNC                   = 0x0B74,$/;"	e	enum:CL_GLDefines
CL_DEPTH_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_RANGE                  = 0x0B70,$/;"	e	enum:CL_GLDefines
CL_DEPTH_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_SCALE                  = 0x0D1E,$/;"	e	enum:CL_GLDefines
CL_DEPTH_TEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_TEST                   = 0x0B71,$/;"	e	enum:CL_GLDefines
CL_DEPTH_TEXTURE_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_TEXTURE_MODE          = 0x884b,$/;"	e	enum:CL_GLDefines
CL_DEPTH_WRITEMASK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DEPTH_WRITEMASK              = 0x0B72,$/;"	e	enum:CL_GLDefines
CL_DIFFUSE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DIFFUSE                      = 0x1201,$/;"	e	enum:CL_GLDefines
CL_DITHER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DITHER                       = 0x0BD0,$/;"	e	enum:CL_GLDefines
CL_DOMAIN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DOMAIN                       = 0x0A02,$/;"	e	enum:CL_GLDefines
CL_DONT_CARE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DONT_CARE                    = 0x1100,$/;"	e	enum:CL_GLDefines
CL_DOT3_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DOT3_RGB                   = 0x86ae,$/;"	e	enum:CL_GLDefines
CL_DOT3_RGBA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DOT3_RGBA                  = 0x86af,$/;"	e	enum:CL_GLDefines
CL_DOUBLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DOUBLE                         = 0x140A,$/;"	e	enum:CL_GLDefines
CL_DOUBLEBUFFER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DOUBLEBUFFER                 = 0x0C32,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER                  = 0x0C01,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER0	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER0                        = 0x8825,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER1                        = 0x8826,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER10	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER10                       = 0x882F,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER11	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER11                       = 0x8830,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER12                       = 0x8831,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER13	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER13                       = 0x8832,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER14	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER14                       = 0x8833,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER15	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER15                       = 0x8834,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER2                        = 0x8827,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER3                        = 0x8828,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER4                        = 0x8829,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER5                        = 0x882A,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER6	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER6                        = 0x882B,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER7	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER7                        = 0x882C,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER8                        = 0x882D,$/;"	e	enum:CL_GLDefines
CL_DRAW_BUFFER9	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_BUFFER9                        = 0x882E,$/;"	e	enum:CL_GLDefines
CL_DRAW_PIXEL_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DRAW_PIXEL_TOKEN             = 0x0705,$/;"	e	enum:CL_GLDefines
CL_DST_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DST_ALPHA                      = 0x0304,$/;"	e	enum:CL_GLDefines
CL_DST_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DST_COLOR                      = 0x0306,$/;"	e	enum:CL_GLDefines
CL_DYNAMIC_COPY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DYNAMIC_COPY                        = 0x88EA,$/;"	e	enum:CL_GLDefines
CL_DYNAMIC_DRAW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DYNAMIC_DRAW                        = 0x88E8,$/;"	e	enum:CL_GLDefines
CL_DYNAMIC_READ	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_DYNAMIC_READ                        = 0x88E9,$/;"	e	enum:CL_GLDefines
CL_Deck	/usr/include/ClanLib/GUI/deck.h	/^class CL_API_GUI CL_Deck$/;"	c
CL_DelauneyTriangulator	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^class CL_DelauneyTriangulator$/;"	c
CL_DelauneyTriangulator_Triangle	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^class CL_DelauneyTriangulator_Triangle$/;"	c
CL_DelauneyTriangulator_Vertex	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^class CL_API_CORE CL_DelauneyTriangulator_Vertex$/;"	c
CL_DeviceContextBuffer	/usr/include/ClanLib/Display/Providers/dc_buffer.h	/^class CL_API_DISPLAY CL_DeviceContextBuffer : public CL_PixelBuffer$/;"	c
CL_Directory	/usr/include/ClanLib/Core/IOData/directory.h	/^class CL_API_CORE CL_Directory$/;"	c
CL_DirectoryScanner	/usr/include/ClanLib/Core/IOData/directory_scanner.h	/^class CL_API_CORE CL_DirectoryScanner$/;"	c
CL_Display	/usr/include/ClanLib/Display/display.h	/^class CL_API_DISPLAY CL_Display$/;"	c
CL_DisplayMode	/usr/include/ClanLib/Display/display_mode.h	/^class CL_API_DISPLAY CL_DisplayMode$/;"	c
CL_DisplayWindow	/usr/include/ClanLib/Display/display_window.h	/^class CL_API_DISPLAY CL_DisplayWindow$/;"	c
CL_DisplayWindowDescription	/usr/include/ClanLib/Display/display_window_description.h	/^class CL_API_DISPLAY CL_DisplayWindowDescription$/;"	c
CL_DomAttr	/usr/include/ClanLib/Core/XML/dom_attr.h	/^class CL_API_CORE CL_DomAttr : public CL_DomNode$/;"	c
CL_DomCDATASection	/usr/include/ClanLib/Core/XML/dom_cdata_section.h	/^class CL_API_CORE CL_DomCDATASection : public CL_DomText$/;"	c
CL_DomCharacterData	/usr/include/ClanLib/Core/XML/dom_character_data.h	/^class CL_API_CORE CL_DomCharacterData : public CL_DomNode$/;"	c
CL_DomComment	/usr/include/ClanLib/Core/XML/dom_comment.h	/^class CL_API_CORE CL_DomComment : public CL_DomCharacterData$/;"	c
CL_DomDocument	/usr/include/ClanLib/Core/XML/dom_document.h	/^class CL_API_CORE CL_DomDocument : public CL_DomNode$/;"	c
CL_DomDocumentFragment	/usr/include/ClanLib/Core/XML/dom_document_fragment.h	/^class CL_API_CORE CL_DomDocumentFragment : public CL_DomNode$/;"	c
CL_DomDocumentType	/usr/include/ClanLib/Core/XML/dom_document_type.h	/^class CL_API_CORE CL_DomDocumentType : public CL_DomNode$/;"	c
CL_DomElement	/usr/include/ClanLib/Core/XML/dom_element.h	/^class CL_API_CORE CL_DomElement : public CL_DomNode$/;"	c
CL_DomEntity	/usr/include/ClanLib/Core/XML/dom_entity.h	/^class CL_API_CORE CL_DomEntity : public CL_DomNode$/;"	c
CL_DomEntityReference	/usr/include/ClanLib/Core/XML/dom_entity_reference.h	/^class CL_API_CORE CL_DomEntityReference : public CL_DomNode$/;"	c
CL_DomException	/usr/include/ClanLib/Core/XML/dom_exception.h	/^class CL_API_CORE CL_DomException : public CL_Error$/;"	c
CL_DomImplementation	/usr/include/ClanLib/Core/XML/dom_implementation.h	/^class CL_API_CORE CL_DomImplementation$/;"	c
CL_DomNamedNodeMap	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	/^class CL_API_CORE CL_DomNamedNodeMap$/;"	c
CL_DomNode	/usr/include/ClanLib/Core/XML/dom_node.h	/^class CL_API_CORE CL_DomNode$/;"	c
CL_DomNodeList	/usr/include/ClanLib/Core/XML/dom_node_list.h	/^class CL_API_CORE CL_DomNodeList$/;"	c
CL_DomNotation	/usr/include/ClanLib/Core/XML/dom_notation.h	/^class CL_API_CORE CL_DomNotation : public CL_DomNode$/;"	c
CL_DomProcessingInstruction	/usr/include/ClanLib/Core/XML/dom_processing_instruction.h	/^class CL_API_CORE CL_DomProcessingInstruction : public CL_DomNode$/;"	c
CL_DomText	/usr/include/ClanLib/Core/XML/dom_text.h	/^class CL_API_CORE CL_DomText : public CL_DomCharacterData$/;"	c
CL_EDGE_FLAG	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EDGE_FLAG                    = 0x0B43,$/;"	e	enum:CL_GLDefines
CL_EDGE_FLAG_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EDGE_FLAG_ARRAY              = 0x8079,$/;"	e	enum:CL_GLDefines
CL_EDGE_FLAG_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EDGE_FLAG_ARRAY_BUFFER_BINDING      = 0x889B,$/;"	e	enum:CL_GLDefines
CL_EDGE_FLAG_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EDGE_FLAG_ARRAY_POINTER      = 0x8093,$/;"	e	enum:CL_GLDefines
CL_EDGE_FLAG_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EDGE_FLAG_ARRAY_STRIDE       = 0x808C,$/;"	e	enum:CL_GLDefines
CL_ELEMENT_ARRAY_BUFFER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ELEMENT_ARRAY_BUFFER                = 0x8893,$/;"	e	enum:CL_GLDefines
CL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ELEMENT_ARRAY_BUFFER_BINDING        = 0x8895,$/;"	e	enum:CL_GLDefines
CL_EMISSION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EMISSION                     = 0x1600,$/;"	e	enum:CL_GLDefines
CL_ENABLE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ENABLE_BIT                     = 0x00002000,$/;"	e	enum:CL_GLDefines
CL_EQUAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EQUAL                          = 0x0202,$/;"	e	enum:CL_GLDefines
CL_EQUIV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EQUIV                        = 0x1509,$/;"	e	enum:CL_GLDefines
CL_EVAL_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EVAL_BIT                       = 0x00010000,$/;"	e	enum:CL_GLDefines
CL_EXP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EXP                          = 0x0800,$/;"	e	enum:CL_GLDefines
CL_EXP2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EXP2                         = 0x0801,$/;"	e	enum:CL_GLDefines
CL_EXTENSIONS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EXTENSIONS                   = 0x1F03,$/;"	e	enum:CL_GLDefines
CL_EYE_LINEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EYE_LINEAR                   = 0x2400,$/;"	e	enum:CL_GLDefines
CL_EYE_PLANE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_EYE_PLANE                    = 0x2502,$/;"	e	enum:CL_GLDefines
CL_EchoFilter	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	/^	CL_EchoFilter(const CL_EchoFilter &copy) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_EchoFilter
CL_EchoFilter	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	/^class CL_API_SOUND CL_EchoFilter : public CL_SoundFilter$/;"	c
CL_Endian	/usr/include/ClanLib/Core/IOData/cl_endian.h	/^class CL_API_CORE CL_Endian$/;"	c
CL_Error	/usr/include/ClanLib/Core/System/error.h	/^	CL_Error(const char *message) { this->message = message; }$/;"	f	class:CL_Error
CL_Error	/usr/include/ClanLib/Core/System/error.h	/^	CL_Error(const std::string &message) { this->message = message; }$/;"	f	class:CL_Error
CL_Error	/usr/include/ClanLib/Core/System/error.h	/^class CL_API_CORE CL_Error$/;"	c
CL_EventListener	/usr/include/ClanLib/Core/System/event_listener.h	/^class CL_API_CORE CL_EventListener$/;"	c
CL_EventTrigger	/usr/include/ClanLib/Core/System/event_trigger.h	/^class CL_API_CORE CL_EventTrigger$/;"	c
CL_FALSE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FALSE                          = 0,$/;"	e	enum:CL_GLDefines
CL_FASTEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FASTEST                      = 0x1101,$/;"	e	enum:CL_GLDefines
CL_FEEDBACK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FEEDBACK                     = 0x1C01,$/;"	e	enum:CL_GLDefines
CL_FEEDBACK_BUFFER_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FEEDBACK_BUFFER_POINTER      = 0x0DF0,$/;"	e	enum:CL_GLDefines
CL_FEEDBACK_BUFFER_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FEEDBACK_BUFFER_SIZE         = 0x0DF1,$/;"	e	enum:CL_GLDefines
CL_FEEDBACK_BUFFER_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FEEDBACK_BUFFER_TYPE         = 0x0DF2,$/;"	e	enum:CL_GLDefines
CL_FILL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FILL                         = 0x1B02,$/;"	e	enum:CL_GLDefines
CL_FLAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLAT                         = 0x1D00,$/;"	e	enum:CL_GLDefines
CL_FLOAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT                          = 0x1406,$/;"	e	enum:CL_GLDefines
CL_FLOAT_MAT2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_MAT2                          = 0x8B5A,$/;"	e	enum:CL_GLDefines
CL_FLOAT_MAT3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_MAT3                          = 0x8B5B,$/;"	e	enum:CL_GLDefines
CL_FLOAT_MAT4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_MAT4                          = 0x8B5C,$/;"	e	enum:CL_GLDefines
CL_FLOAT_VEC2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_VEC2                          = 0x8B50,$/;"	e	enum:CL_GLDefines
CL_FLOAT_VEC3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_VEC3                          = 0x8B51,$/;"	e	enum:CL_GLDefines
CL_FLOAT_VEC4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FLOAT_VEC4                          = 0x8B52,$/;"	e	enum:CL_GLDefines
CL_FOG	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG                          = 0x0B60,$/;"	e	enum:CL_GLDefines
CL_FOG_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_BIT                        = 0x00000080,$/;"	e	enum:CL_GLDefines
CL_FOG_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COLOR                    = 0x0B66,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD                   = CL_FOG_COORDINATE,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE              = 0x8451,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_ARRAY        = 0x8457,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_ARRAY_POINTER = 0x8456,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_ARRAY_TYPE   = 0x8454,$/;"	e	enum:CL_GLDefines
CL_FOG_COORDINATE_SOURCE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORDINATE_SOURCE       = 0x8450,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_ARRAY             = CL_FOG_COORDINATE_ARRAY,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_ARRAY_BUFFER_BINDING      = CL_FOG_COORDINATE_ARRAY_BUFFER_BINDING,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_ARRAY_POINTER     = CL_FOG_COORDINATE_ARRAY_POINTER,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_ARRAY_STRIDE      = CL_FOG_COORDINATE_ARRAY_STRIDE,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_ARRAY_TYPE        = CL_FOG_COORDINATE_ARRAY_TYPE,$/;"	e	enum:CL_GLDefines
CL_FOG_COORD_SRC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_COORD_SRC               = CL_FOG_COORDINATE_SOURCE,$/;"	e	enum:CL_GLDefines
CL_FOG_DENSITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_DENSITY                  = 0x0B62,$/;"	e	enum:CL_GLDefines
CL_FOG_END	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_END                      = 0x0B64,$/;"	e	enum:CL_GLDefines
CL_FOG_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_HINT                     = 0x0C54,$/;"	e	enum:CL_GLDefines
CL_FOG_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_INDEX                    = 0x0B61,$/;"	e	enum:CL_GLDefines
CL_FOG_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_MODE                     = 0x0B65,$/;"	e	enum:CL_GLDefines
CL_FOG_START	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FOG_START                    = 0x0B63,$/;"	e	enum:CL_GLDefines
CL_FRAGMENT_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRAGMENT_DEPTH              = 0x8452,$/;"	e	enum:CL_GLDefines
CL_FRAGMENT_SHADER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRAGMENT_SHADER                     = 0x8B30,$/;"	e	enum:CL_GLDefines
CL_FRAGMENT_SHADER_DERIVATIVE_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRAGMENT_SHADER_DERIVATIVE_HINT     = 0x8B8B,$/;"	e	enum:CL_GLDefines
CL_FRONT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRONT                          = 0x0404,$/;"	e	enum:CL_GLDefines
CL_FRONT_AND_BACK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRONT_AND_BACK                 = 0x0408,$/;"	e	enum:CL_GLDefines
CL_FRONT_FACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRONT_FACE                   = 0x0B46,$/;"	e	enum:CL_GLDefines
CL_FRONT_LEFT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRONT_LEFT                     = 0x0400,$/;"	e	enum:CL_GLDefines
CL_FRONT_RIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FRONT_RIGHT                    = 0x0401,$/;"	e	enum:CL_GLDefines
CL_FUNC_ADD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FUNC_ADD                     = 0x8006,$/;"	e	enum:CL_GLDefines
CL_FUNC_REVERSE_SUBTRACT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FUNC_REVERSE_SUBTRACT        = 0x800B,$/;"	e	enum:CL_GLDefines
CL_FUNC_SUBTRACT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_FUNC_SUBTRACT                = 0x800A,$/;"	e	enum:CL_GLDefines
CL_FadeFilter	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	/^	CL_FadeFilter(const CL_FadeFilter &copy) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_FadeFilter
CL_FadeFilter	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	/^class CL_API_SOUND CL_FadeFilter : public CL_SoundFilter$/;"	c
CL_FileDialog	/usr/include/ClanLib/GUI/filedialog.h	/^class CL_API_GUI CL_FileDialog : public CL_Window$/;"	c
CL_Float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^	CL_Float(const std::string &res_id, CL_ResourceManager *resources)$/;"	f	class:CL_Float
CL_Float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^	CL_Float(const std::string &res_id, CL_ResourceManager *resources, float def_value)$/;"	f	class:CL_Float
CL_Float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^class CL_Float$/;"	c
CL_Font	/usr/include/ClanLib/Display/font.h	/^class CL_API_DISPLAY CL_Font$/;"	c
CL_Frame	/usr/include/ClanLib/GUI/frame.h	/^	CL_Frame(const CL_Frame &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Frame
CL_Frame	/usr/include/ClanLib/GUI/frame.h	/^class CL_API_GUI CL_Frame : public CL_Component$/;"	c
CL_Frame_Silver	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^class CL_API_GUISTYLESILVER CL_Frame_Silver : public CL_ComponentStyle$/;"	c
CL_FramerateCounter	/usr/include/ClanLib/Display/frameratecounter.h	/^class CL_API_DISPLAY CL_FramerateCounter : public CL_KeepAlive$/;"	c
CL_FunctionSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_FunctionSlot_v0(Callback callback, VirtualCallback virtual_callback)$/;"	f	class:CL_FunctionSlot_v0
CL_FunctionSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_FunctionSlot_v0 : public CL_Slot_v0$/;"	c
CL_FunctionSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^	CL_FunctionSlot_v1(Callback callback) : callback(callback) { return; }$/;"	f	class:CL_FunctionSlot_v1
CL_FunctionSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_FunctionSlot_v1 : public CL_Slot_v1<PARAM1>$/;"	c
CL_FunctionSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^	CL_FunctionSlot_v2(Callback callback) : callback(callback) { return; }$/;"	f	class:CL_FunctionSlot_v2
CL_FunctionSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^class CL_FunctionSlot_v2 : public CL_Slot_v2<PARAM1, PARAM2>$/;"	c
CL_FunctionSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^	CL_FunctionSlot_v3(Callback callback) : callback(callback) { return; }$/;"	f	class:CL_FunctionSlot_v3
CL_FunctionSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^class CL_FunctionSlot_v3 : public CL_Slot_v3<PARAM1, PARAM2, PARAM3>$/;"	c
CL_FunctionSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^	CL_FunctionSlot_v4(Callback callback) : callback(callback) { return; }$/;"	f	class:CL_FunctionSlot_v4
CL_FunctionSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^class CL_FunctionSlot_v4 : public CL_Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>$/;"	c
CL_FunctionSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^	CL_FunctionSlot_v5(Callback callback) : callback(callback) { return; }$/;"	f	class:CL_FunctionSlot_v5
CL_FunctionSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^class CL_FunctionSlot_v5 : public CL_Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>$/;"	c
CL_FunctorSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_FunctorSlot_v0(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v0
CL_FunctorSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_FunctorSlot_v0 : public CL_Slot_v0$/;"	c
CL_FunctorSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^	CL_FunctorSlot_v1(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v1
CL_FunctorSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_FunctorSlot_v1 : public CL_Slot_v1<PARAM1>$/;"	c
CL_FunctorSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^	CL_FunctorSlot_v2(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v2
CL_FunctorSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^class CL_FunctorSlot_v2 : public CL_Slot_v2<PARAM1, PARAM2>$/;"	c
CL_FunctorSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^	CL_FunctorSlot_v3(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v3
CL_FunctorSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^class CL_FunctorSlot_v3 : public CL_Slot_v3<PARAM1, PARAM2, PARAM3>$/;"	c
CL_FunctorSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^	CL_FunctorSlot_v4(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v4
CL_FunctorSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^class CL_FunctorSlot_v4 : public CL_Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>$/;"	c
CL_FunctorSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^	CL_FunctorSlot_v5(const Functor &functor)$/;"	f	class:CL_FunctorSlot_v5
CL_FunctorSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^class CL_FunctorSlot_v5 : public CL_Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>$/;"	c
CL_FunctorVirtualSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_FunctorVirtualSlot_v0(const Functor &functor)$/;"	f	class:CL_FunctorVirtualSlot_v0
CL_FunctorVirtualSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_FunctorVirtualSlot_v0 : public CL_Slot_v0$/;"	c
CL_GENERATE_MIPMAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GENERATE_MIPMAP             = 0x8191,$/;"	e	enum:CL_GLDefines
CL_GENERATE_MIPMAP_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GENERATE_MIPMAP_HINT        = 0x8192,$/;"	e	enum:CL_GLDefines
CL_GEQUAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GEQUAL                         = 0x0206,$/;"	e	enum:CL_GLDefines
CL_GLDefines	/usr/include/ClanLib/GL/opengl_wrap.h	/^enum CL_GLDefines$/;"	g
CL_GLFUNC	/usr/include/ClanLib/GL/opengl_wrap.h	53;"	d
CL_GLFUNC	/usr/include/ClanLib/GL/opengl_wrap.h	55;"	d
CL_GLFunctions	/usr/include/ClanLib/GL/opengl_wrap.h	/^class CL_API_GL CL_GLFunctions$/;"	c
CL_GREATER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GREATER                        = 0x0204,$/;"	e	enum:CL_GLDefines
CL_GREEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GREEN                        = 0x1904,$/;"	e	enum:CL_GLDefines
CL_GREEN_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GREEN_BIAS                   = 0x0D19,$/;"	e	enum:CL_GLDefines
CL_GREEN_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GREEN_BITS                   = 0x0D53,$/;"	e	enum:CL_GLDefines
CL_GREEN_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_GREEN_SCALE                  = 0x0D18,$/;"	e	enum:CL_GLDefines
CL_GUIManager	/usr/include/ClanLib/GUI/gui_manager.h	/^class CL_API_GUI CL_GUIManager : public CL_Component$/;"	c
CL_GlyphBuffer	/usr/include/ClanLib/Display/glyph_buffer.h	/^class CL_API_DISPLAY CL_GlyphBuffer$/;"	c
CL_Gradient	/usr/include/ClanLib/Display/gradient.h	/^	CL_Gradient() { return; }$/;"	f	class:CL_Gradient
CL_Gradient	/usr/include/ClanLib/Display/gradient.h	/^	CL_Gradient(const CL_Color &top_left, const CL_Color &top_right, const CL_Color &bottom_left, const CL_Color &bottom_right)$/;"	f	class:CL_Gradient
CL_Gradient	/usr/include/ClanLib/Display/gradient.h	/^class CL_Gradient$/;"	c
CL_GraphicContext	/usr/include/ClanLib/Display/graphic_context.h	/^class CL_API_DISPLAY CL_GraphicContext$/;"	c
CL_HINT_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HINT_BIT                       = 0x00008000,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM                    = 0x8024,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_ALPHA_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_ALPHA_SIZE         = 0x802B,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_BLUE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_BLUE_SIZE          = 0x802A,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_FORMAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_FORMAT             = 0x8027,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_GREEN_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_GREEN_SIZE         = 0x8029,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_LUMINANCE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_LUMINANCE_SIZE     = 0x802C,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_RED_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_RED_SIZE           = 0x8028,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_SINK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_SINK               = 0x802D,$/;"	e	enum:CL_GLDefines
CL_HISTOGRAM_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_HISTOGRAM_WIDTH              = 0x8026,$/;"	e	enum:CL_GLDefines
CL_INCR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INCR                         = 0x1E02,$/;"	e	enum:CL_GLDefines
CL_INCR_WRAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INCR_WRAP                   = 0x8507,$/;"	e	enum:CL_GLDefines
CL_INDEX_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_ARRAY                  = 0x8077,$/;"	e	enum:CL_GLDefines
CL_INDEX_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_ARRAY_BUFFER_BINDING          = 0x8899,$/;"	e	enum:CL_GLDefines
CL_INDEX_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_ARRAY_POINTER          = 0x8091,$/;"	e	enum:CL_GLDefines
CL_INDEX_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_ARRAY_STRIDE           = 0x8086,$/;"	e	enum:CL_GLDefines
CL_INDEX_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_ARRAY_TYPE             = 0x8085,$/;"	e	enum:CL_GLDefines
CL_INDEX_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_BITS                   = 0x0D51,$/;"	e	enum:CL_GLDefines
CL_INDEX_CLEAR_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_CLEAR_VALUE            = 0x0C20,$/;"	e	enum:CL_GLDefines
CL_INDEX_LOGIC_OP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_LOGIC_OP               = 0x0BF1,$/;"	e	enum:CL_GLDefines
CL_INDEX_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_MODE                   = 0x0C30,$/;"	e	enum:CL_GLDefines
CL_INDEX_OFFSET	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_OFFSET                 = 0x0D13,$/;"	e	enum:CL_GLDefines
CL_INDEX_SHIFT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_SHIFT                  = 0x0D12,$/;"	e	enum:CL_GLDefines
CL_INDEX_WRITEMASK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INDEX_WRITEMASK              = 0x0C21,$/;"	e	enum:CL_GLDefines
CL_INFO_LOG_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INFO_LOG_LENGTH                     = 0x8B84,$/;"	e	enum:CL_GLDefines
CL_INT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INT                            = 0x1404,$/;"	e	enum:CL_GLDefines
CL_INTENSITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTENSITY                    = 0x8049,$/;"	e	enum:CL_GLDefines
CL_INTENSITY12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTENSITY12                  = 0x804C,$/;"	e	enum:CL_GLDefines
CL_INTENSITY16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTENSITY16                  = 0x804D,$/;"	e	enum:CL_GLDefines
CL_INTENSITY4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTENSITY4                   = 0x804A,$/;"	e	enum:CL_GLDefines
CL_INTENSITY8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTENSITY8                   = 0x804B,$/;"	e	enum:CL_GLDefines
CL_INTERPOLATE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INTERPOLATE              = 0x8575,$/;"	e	enum:CL_GLDefines
CL_INT_VEC2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INT_VEC2                            = 0x8B53,$/;"	e	enum:CL_GLDefines
CL_INT_VEC3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INT_VEC3                            = 0x8B54,$/;"	e	enum:CL_GLDefines
CL_INT_VEC4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INT_VEC4                            = 0x8B55,$/;"	e	enum:CL_GLDefines
CL_INVALID_ENUM	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INVALID_ENUM                 = 0x0500,$/;"	e	enum:CL_GLDefines
CL_INVALID_OPERATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INVALID_OPERATION            = 0x0502,$/;"	e	enum:CL_GLDefines
CL_INVALID_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INVALID_VALUE                = 0x0501,$/;"	e	enum:CL_GLDefines
CL_INVERT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_INVERT                       = 0x150A,$/;"	e	enum:CL_GLDefines
CL_IPAddress	/usr/include/ClanLib/Network/Socket/ip_address.h	/^class CL_API_NETWORK CL_IPAddress$/;"	c
CL_IRCConnection	/usr/include/ClanLib/Network/IRC/irc_connection.h	/^class CL_API_NETWORK CL_IRCConnection$/;"	c
CL_IRCNumerics	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^enum CL_IRCNumerics$/;"	g
CL_Image	/usr/include/ClanLib/GUI/image.h	/^	CL_Image(const CL_Image &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Image
CL_Image	/usr/include/ClanLib/GUI/image.h	/^class CL_API_GUI CL_Image : public CL_Component$/;"	c
CL_Image_Silver	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^class CL_API_GUISTYLESILVER CL_Image_Silver : public CL_ComponentStyle$/;"	c
CL_InputBox	/usr/include/ClanLib/GUI/inputbox.h	/^	CL_InputBox(const CL_InputBox &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_InputBox
CL_InputBox	/usr/include/ClanLib/GUI/inputbox.h	/^class CL_API_GUI CL_InputBox : public CL_Component$/;"	c
CL_InputBox_Silver	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	/^class CL_API_GUISTYLESILVER CL_InputBox_Silver $/;"	c
CL_InputBox_StyleBase	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^class CL_InputBox_StyleBase$/;"	c
CL_InputBuffer	/usr/include/ClanLib/Display/input_buffer.h	/^class CL_API_DISPLAY CL_InputBuffer$/;"	c
CL_InputButton	/usr/include/ClanLib/Display/input_button.h	/^class CL_API_DISPLAY CL_InputButton$/;"	c
CL_InputContext	/usr/include/ClanLib/Display/input_context.h	/^class CL_API_DISPLAY CL_InputContext$/;"	c
CL_InputDevice	/usr/include/ClanLib/Display/input_device.h	/^class CL_API_DISPLAY CL_InputDevice$/;"	c
CL_InputDialog	/usr/include/ClanLib/GUI/inputdialog.h	/^	CL_InputDialog(const CL_InputDialog &copy) : CL_Window((CL_Component*)NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_InputDialog
CL_InputDialog	/usr/include/ClanLib/GUI/inputdialog.h	/^class CL_API_GUI CL_InputDialog : public CL_Window$/;"	c
CL_InputEvent	/usr/include/ClanLib/Display/input_event.h	/^class CL_API_DISPLAY CL_InputEvent$/;"	c
CL_InputSource	/usr/include/ClanLib/Core/IOData/inputsource.h	/^	CL_InputSource() { set_system_mode(); }$/;"	f	class:CL_InputSource
CL_InputSource	/usr/include/ClanLib/Core/IOData/inputsource.h	/^class CL_API_CORE CL_InputSource$/;"	c
CL_InputSourceProvider	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	/^class CL_API_CORE CL_InputSourceProvider$/;"	c
CL_InputSourceProvider_File	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	/^class CL_API_CORE CL_InputSourceProvider_File : public CL_InputSourceProvider$/;"	c
CL_InputSource_File	/usr/include/ClanLib/Core/IOData/inputsource_file.h	/^class CL_InputSource_File : public CL_InputSource$/;"	c
CL_InputSource_Memory	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	/^class CL_API_CORE CL_InputSource_Memory : public CL_InputSource$/;"	c
CL_InputSource_NetPacket	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	/^class CL_API_NETWORK CL_InputSource_NetPacket : public CL_InputSource$/;"	c
CL_InputSource_NetStream	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	/^	CL_InputSource_NetStream() { netstream = 0; ref_count_netstream = false; }$/;"	f	class:CL_InputSource_NetStream
CL_InputSource_NetStream	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	/^class CL_API_NETWORK CL_InputSource_NetStream : public CL_InputSource$/;"	c
CL_InputSource_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	CL_InputSource_Raw(const std::string &res_id, CL_ResourceManager *resources)$/;"	f	class:CL_InputSource_Raw
CL_InputSource_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^class CL_InputSource_Raw : public CL_Raw, public CL_InputSource_Memory$/;"	c
CL_InputSource_Socket	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	/^	CL_InputSource_Socket() { socket = 0; ref_count_socket = false; }$/;"	f	class:CL_InputSource_Socket
CL_InputSource_Socket	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	/^class CL_API_NETWORK CL_InputSource_Socket : public CL_InputSource$/;"	c
CL_InputSource_Zipped	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	/^class CL_API_CORE CL_InputSource_Zipped : public CL_InputSource$/;"	c
CL_Integer	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	CL_Integer(const std::string &res_id, CL_ResourceManager *resources)$/;"	f	class:CL_Integer
CL_Integer	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	CL_Integer(const std::string &res_id, CL_ResourceManager *resources, int def_value)$/;"	f	class:CL_Integer
CL_Integer	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^class CL_Integer$/;"	c
CL_InverseEchoFilter	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	/^	CL_InverseEchoFilter(const CL_InverseEchoFilter &copy) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_InverseEchoFilter
CL_InverseEchoFilter	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	/^class CL_API_SOUND CL_InverseEchoFilter : public CL_SoundFilter$/;"	c
CL_JPEGProvider	/usr/include/ClanLib/Display/Providers/jpeg_provider.h	/^class CL_JPEGProvider : public CL_PixelBuffer$/;"	c
CL_Joystick	/usr/include/ClanLib/Display/joystick.h	/^class CL_API_DISPLAY CL_Joystick$/;"	c
CL_KEEP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_KEEP                         = 0x1E00,$/;"	e	enum:CL_GLDefines
CL_KEY_0	/usr/include/ClanLib/Display/keys.h	101;"	d
CL_KEY_0	/usr/include/ClanLib/Display/keys.h	266;"	d
CL_KEY_0	/usr/include/ClanLib/Display/keys.h	426;"	d
CL_KEY_1	/usr/include/ClanLib/Display/keys.h	102;"	d
CL_KEY_1	/usr/include/ClanLib/Display/keys.h	267;"	d
CL_KEY_1	/usr/include/ClanLib/Display/keys.h	427;"	d
CL_KEY_2	/usr/include/ClanLib/Display/keys.h	103;"	d
CL_KEY_2	/usr/include/ClanLib/Display/keys.h	268;"	d
CL_KEY_2	/usr/include/ClanLib/Display/keys.h	428;"	d
CL_KEY_3	/usr/include/ClanLib/Display/keys.h	104;"	d
CL_KEY_3	/usr/include/ClanLib/Display/keys.h	269;"	d
CL_KEY_3	/usr/include/ClanLib/Display/keys.h	429;"	d
CL_KEY_4	/usr/include/ClanLib/Display/keys.h	105;"	d
CL_KEY_4	/usr/include/ClanLib/Display/keys.h	270;"	d
CL_KEY_4	/usr/include/ClanLib/Display/keys.h	430;"	d
CL_KEY_5	/usr/include/ClanLib/Display/keys.h	106;"	d
CL_KEY_5	/usr/include/ClanLib/Display/keys.h	271;"	d
CL_KEY_5	/usr/include/ClanLib/Display/keys.h	431;"	d
CL_KEY_6	/usr/include/ClanLib/Display/keys.h	107;"	d
CL_KEY_6	/usr/include/ClanLib/Display/keys.h	272;"	d
CL_KEY_6	/usr/include/ClanLib/Display/keys.h	432;"	d
CL_KEY_7	/usr/include/ClanLib/Display/keys.h	108;"	d
CL_KEY_7	/usr/include/ClanLib/Display/keys.h	273;"	d
CL_KEY_7	/usr/include/ClanLib/Display/keys.h	433;"	d
CL_KEY_8	/usr/include/ClanLib/Display/keys.h	109;"	d
CL_KEY_8	/usr/include/ClanLib/Display/keys.h	274;"	d
CL_KEY_8	/usr/include/ClanLib/Display/keys.h	434;"	d
CL_KEY_9	/usr/include/ClanLib/Display/keys.h	110;"	d
CL_KEY_9	/usr/include/ClanLib/Display/keys.h	275;"	d
CL_KEY_9	/usr/include/ClanLib/Display/keys.h	435;"	d
CL_KEY_A	/usr/include/ClanLib/Display/keys.h	111;"	d
CL_KEY_A	/usr/include/ClanLib/Display/keys.h	276;"	d
CL_KEY_A	/usr/include/ClanLib/Display/keys.h	436;"	d
CL_KEY_ADD	/usr/include/ClanLib/Display/keys.h	316;"	d
CL_KEY_ALT	/usr/include/ClanLib/Display/keys.h	383;"	d
CL_KEY_APPS	/usr/include/ClanLib/Display/keys.h	141;"	d
CL_KEY_APPS	/usr/include/ClanLib/Display/keys.h	304;"	d
CL_KEY_APPS	/usr/include/ClanLib/Display/keys.h	464;"	d
CL_KEY_B	/usr/include/ClanLib/Display/keys.h	112;"	d
CL_KEY_B	/usr/include/ClanLib/Display/keys.h	277;"	d
CL_KEY_B	/usr/include/ClanLib/Display/keys.h	437;"	d
CL_KEY_BACKSPACE	/usr/include/ClanLib/Display/keys.h	239;"	d
CL_KEY_BACKSPACE	/usr/include/ClanLib/Display/keys.h	399;"	d
CL_KEY_BACKSPACE	/usr/include/ClanLib/Display/keys.h	54;"	d
CL_KEY_C	/usr/include/ClanLib/Display/keys.h	113;"	d
CL_KEY_C	/usr/include/ClanLib/Display/keys.h	278;"	d
CL_KEY_C	/usr/include/ClanLib/Display/keys.h	438;"	d
CL_KEY_CAPSLOCK	/usr/include/ClanLib/Display/keys.h	366;"	d
CL_KEY_CLEAR	/usr/include/ClanLib/Display/keys.h	241;"	d
CL_KEY_CLEAR	/usr/include/ClanLib/Display/keys.h	401;"	d
CL_KEY_CLEAR	/usr/include/ClanLib/Display/keys.h	56;"	d
CL_KEY_COMMA	/usr/include/ClanLib/Display/keys.h	145;"	d
CL_KEY_COMMA	/usr/include/ClanLib/Display/keys.h	361;"	d
CL_KEY_COMMA	/usr/include/ClanLib/Display/keys.h	518;"	d
CL_KEY_COMMAND	/usr/include/ClanLib/Display/keys.h	367;"	d
CL_KEY_CONTROL	/usr/include/ClanLib/Display/keys.h	244;"	d
CL_KEY_CONTROL	/usr/include/ClanLib/Display/keys.h	404;"	d
CL_KEY_CONTROL	/usr/include/ClanLib/Display/keys.h	59;"	d
CL_KEY_CONVERT	/usr/include/ClanLib/Display/keys.h	249;"	d
CL_KEY_CONVERT	/usr/include/ClanLib/Display/keys.h	409;"	d
CL_KEY_CONVERT	/usr/include/ClanLib/Display/keys.h	66;"	d
CL_KEY_D	/usr/include/ClanLib/Display/keys.h	114;"	d
CL_KEY_D	/usr/include/ClanLib/Display/keys.h	279;"	d
CL_KEY_D	/usr/include/ClanLib/Display/keys.h	439;"	d
CL_KEY_DECIMAL	/usr/include/ClanLib/Display/keys.h	385;"	d
CL_KEY_DELETE	/usr/include/ClanLib/Display/keys.h	264;"	d
CL_KEY_DELETE	/usr/include/ClanLib/Display/keys.h	424;"	d
CL_KEY_DELETE	/usr/include/ClanLib/Display/keys.h	99;"	d
CL_KEY_DIVIDE	/usr/include/ClanLib/Display/keys.h	146;"	d
CL_KEY_DIVIDE	/usr/include/ClanLib/Display/keys.h	319;"	d
CL_KEY_DIVIDE	/usr/include/ClanLib/Display/keys.h	520;"	d
CL_KEY_DOWN	/usr/include/ClanLib/Display/keys.h	259;"	d
CL_KEY_DOWN	/usr/include/ClanLib/Display/keys.h	419;"	d
CL_KEY_DOWN	/usr/include/ClanLib/Display/keys.h	94;"	d
CL_KEY_E	/usr/include/ClanLib/Display/keys.h	115;"	d
CL_KEY_E	/usr/include/ClanLib/Display/keys.h	280;"	d
CL_KEY_E	/usr/include/ClanLib/Display/keys.h	440;"	d
CL_KEY_END	/usr/include/ClanLib/Display/keys.h	254;"	d
CL_KEY_END	/usr/include/ClanLib/Display/keys.h	414;"	d
CL_KEY_END	/usr/include/ClanLib/Display/keys.h	89;"	d
CL_KEY_ENTER	/usr/include/ClanLib/Display/keys.h	529;"	d
CL_KEY_EQUALS	/usr/include/ClanLib/Display/keys.h	138;"	d
CL_KEY_EQUALS	/usr/include/ClanLib/Display/keys.h	365;"	d
CL_KEY_EQUALS	/usr/include/ClanLib/Display/keys.h	515;"	d
CL_KEY_ESCAPE	/usr/include/ClanLib/Display/keys.h	248;"	d
CL_KEY_ESCAPE	/usr/include/ClanLib/Display/keys.h	408;"	d
CL_KEY_ESCAPE	/usr/include/ClanLib/Display/keys.h	62;"	d
CL_KEY_EXECUTE	/usr/include/ClanLib/Display/keys.h	262;"	d
CL_KEY_EXECUTE	/usr/include/ClanLib/Display/keys.h	422;"	d
CL_KEY_EXECUTE	/usr/include/ClanLib/Display/keys.h	97;"	d
CL_KEY_F	/usr/include/ClanLib/Display/keys.h	116;"	d
CL_KEY_F	/usr/include/ClanLib/Display/keys.h	281;"	d
CL_KEY_F	/usr/include/ClanLib/Display/keys.h	441;"	d
CL_KEY_F1	/usr/include/ClanLib/Display/keys.h	167;"	d
CL_KEY_F1	/usr/include/ClanLib/Display/keys.h	320;"	d
CL_KEY_F1	/usr/include/ClanLib/Display/keys.h	481;"	d
CL_KEY_F10	/usr/include/ClanLib/Display/keys.h	176;"	d
CL_KEY_F10	/usr/include/ClanLib/Display/keys.h	329;"	d
CL_KEY_F10	/usr/include/ClanLib/Display/keys.h	490;"	d
CL_KEY_F11	/usr/include/ClanLib/Display/keys.h	177;"	d
CL_KEY_F11	/usr/include/ClanLib/Display/keys.h	330;"	d
CL_KEY_F11	/usr/include/ClanLib/Display/keys.h	491;"	d
CL_KEY_F12	/usr/include/ClanLib/Display/keys.h	178;"	d
CL_KEY_F12	/usr/include/ClanLib/Display/keys.h	331;"	d
CL_KEY_F12	/usr/include/ClanLib/Display/keys.h	492;"	d
CL_KEY_F13	/usr/include/ClanLib/Display/keys.h	179;"	d
CL_KEY_F13	/usr/include/ClanLib/Display/keys.h	332;"	d
CL_KEY_F13	/usr/include/ClanLib/Display/keys.h	493;"	d
CL_KEY_F14	/usr/include/ClanLib/Display/keys.h	180;"	d
CL_KEY_F14	/usr/include/ClanLib/Display/keys.h	333;"	d
CL_KEY_F14	/usr/include/ClanLib/Display/keys.h	494;"	d
CL_KEY_F15	/usr/include/ClanLib/Display/keys.h	181;"	d
CL_KEY_F15	/usr/include/ClanLib/Display/keys.h	334;"	d
CL_KEY_F15	/usr/include/ClanLib/Display/keys.h	495;"	d
CL_KEY_F16	/usr/include/ClanLib/Display/keys.h	182;"	d
CL_KEY_F16	/usr/include/ClanLib/Display/keys.h	335;"	d
CL_KEY_F16	/usr/include/ClanLib/Display/keys.h	496;"	d
CL_KEY_F17	/usr/include/ClanLib/Display/keys.h	183;"	d
CL_KEY_F17	/usr/include/ClanLib/Display/keys.h	336;"	d
CL_KEY_F17	/usr/include/ClanLib/Display/keys.h	497;"	d
CL_KEY_F18	/usr/include/ClanLib/Display/keys.h	184;"	d
CL_KEY_F18	/usr/include/ClanLib/Display/keys.h	337;"	d
CL_KEY_F18	/usr/include/ClanLib/Display/keys.h	498;"	d
CL_KEY_F19	/usr/include/ClanLib/Display/keys.h	185;"	d
CL_KEY_F19	/usr/include/ClanLib/Display/keys.h	338;"	d
CL_KEY_F19	/usr/include/ClanLib/Display/keys.h	499;"	d
CL_KEY_F2	/usr/include/ClanLib/Display/keys.h	168;"	d
CL_KEY_F2	/usr/include/ClanLib/Display/keys.h	321;"	d
CL_KEY_F2	/usr/include/ClanLib/Display/keys.h	482;"	d
CL_KEY_F20	/usr/include/ClanLib/Display/keys.h	186;"	d
CL_KEY_F20	/usr/include/ClanLib/Display/keys.h	339;"	d
CL_KEY_F20	/usr/include/ClanLib/Display/keys.h	500;"	d
CL_KEY_F21	/usr/include/ClanLib/Display/keys.h	187;"	d
CL_KEY_F21	/usr/include/ClanLib/Display/keys.h	340;"	d
CL_KEY_F21	/usr/include/ClanLib/Display/keys.h	501;"	d
CL_KEY_F22	/usr/include/ClanLib/Display/keys.h	188;"	d
CL_KEY_F22	/usr/include/ClanLib/Display/keys.h	341;"	d
CL_KEY_F22	/usr/include/ClanLib/Display/keys.h	502;"	d
CL_KEY_F23	/usr/include/ClanLib/Display/keys.h	189;"	d
CL_KEY_F23	/usr/include/ClanLib/Display/keys.h	342;"	d
CL_KEY_F23	/usr/include/ClanLib/Display/keys.h	503;"	d
CL_KEY_F24	/usr/include/ClanLib/Display/keys.h	190;"	d
CL_KEY_F24	/usr/include/ClanLib/Display/keys.h	343;"	d
CL_KEY_F24	/usr/include/ClanLib/Display/keys.h	504;"	d
CL_KEY_F3	/usr/include/ClanLib/Display/keys.h	169;"	d
CL_KEY_F3	/usr/include/ClanLib/Display/keys.h	322;"	d
CL_KEY_F3	/usr/include/ClanLib/Display/keys.h	483;"	d
CL_KEY_F4	/usr/include/ClanLib/Display/keys.h	170;"	d
CL_KEY_F4	/usr/include/ClanLib/Display/keys.h	323;"	d
CL_KEY_F4	/usr/include/ClanLib/Display/keys.h	484;"	d
CL_KEY_F5	/usr/include/ClanLib/Display/keys.h	171;"	d
CL_KEY_F5	/usr/include/ClanLib/Display/keys.h	324;"	d
CL_KEY_F5	/usr/include/ClanLib/Display/keys.h	485;"	d
CL_KEY_F6	/usr/include/ClanLib/Display/keys.h	172;"	d
CL_KEY_F6	/usr/include/ClanLib/Display/keys.h	325;"	d
CL_KEY_F6	/usr/include/ClanLib/Display/keys.h	486;"	d
CL_KEY_F7	/usr/include/ClanLib/Display/keys.h	173;"	d
CL_KEY_F7	/usr/include/ClanLib/Display/keys.h	326;"	d
CL_KEY_F7	/usr/include/ClanLib/Display/keys.h	487;"	d
CL_KEY_F8	/usr/include/ClanLib/Display/keys.h	174;"	d
CL_KEY_F8	/usr/include/ClanLib/Display/keys.h	327;"	d
CL_KEY_F8	/usr/include/ClanLib/Display/keys.h	488;"	d
CL_KEY_F9	/usr/include/ClanLib/Display/keys.h	175;"	d
CL_KEY_F9	/usr/include/ClanLib/Display/keys.h	328;"	d
CL_KEY_F9	/usr/include/ClanLib/Display/keys.h	489;"	d
CL_KEY_G	/usr/include/ClanLib/Display/keys.h	117;"	d
CL_KEY_G	/usr/include/ClanLib/Display/keys.h	282;"	d
CL_KEY_G	/usr/include/ClanLib/Display/keys.h	442;"	d
CL_KEY_GRAVE	/usr/include/ClanLib/Display/keys.h	147;"	d
CL_KEY_GRAVE	/usr/include/ClanLib/Display/keys.h	362;"	d
CL_KEY_GRAVE	/usr/include/ClanLib/Display/keys.h	513;"	d
CL_KEY_H	/usr/include/ClanLib/Display/keys.h	118;"	d
CL_KEY_H	/usr/include/ClanLib/Display/keys.h	283;"	d
CL_KEY_H	/usr/include/ClanLib/Display/keys.h	443;"	d
CL_KEY_HELP	/usr/include/ClanLib/Display/keys.h	100;"	d
CL_KEY_HELP	/usr/include/ClanLib/Display/keys.h	265;"	d
CL_KEY_HELP	/usr/include/ClanLib/Display/keys.h	425;"	d
CL_KEY_HOME	/usr/include/ClanLib/Display/keys.h	255;"	d
CL_KEY_HOME	/usr/include/ClanLib/Display/keys.h	415;"	d
CL_KEY_HOME	/usr/include/ClanLib/Display/keys.h	90;"	d
CL_KEY_I	/usr/include/ClanLib/Display/keys.h	119;"	d
CL_KEY_I	/usr/include/ClanLib/Display/keys.h	284;"	d
CL_KEY_I	/usr/include/ClanLib/Display/keys.h	444;"	d
CL_KEY_INSERT	/usr/include/ClanLib/Display/keys.h	263;"	d
CL_KEY_INSERT	/usr/include/ClanLib/Display/keys.h	423;"	d
CL_KEY_INSERT	/usr/include/ClanLib/Display/keys.h	98;"	d
CL_KEY_J	/usr/include/ClanLib/Display/keys.h	120;"	d
CL_KEY_J	/usr/include/ClanLib/Display/keys.h	285;"	d
CL_KEY_J	/usr/include/ClanLib/Display/keys.h	445;"	d
CL_KEY_K	/usr/include/ClanLib/Display/keys.h	121;"	d
CL_KEY_K	/usr/include/ClanLib/Display/keys.h	286;"	d
CL_KEY_K	/usr/include/ClanLib/Display/keys.h	446;"	d
CL_KEY_KANJI	/usr/include/ClanLib/Display/keys.h	247;"	d
CL_KEY_KANJI	/usr/include/ClanLib/Display/keys.h	407;"	d
CL_KEY_KANJI	/usr/include/ClanLib/Display/keys.h	65;"	d
CL_KEY_L	/usr/include/ClanLib/Display/keys.h	122;"	d
CL_KEY_L	/usr/include/ClanLib/Display/keys.h	287;"	d
CL_KEY_L	/usr/include/ClanLib/Display/keys.h	447;"	d
CL_KEY_LAPPLE	/usr/include/ClanLib/Display/keys.h	530;"	d
CL_KEY_LCONTROL	/usr/include/ClanLib/Display/keys.h	195;"	d
CL_KEY_LCONTROL	/usr/include/ClanLib/Display/keys.h	348;"	d
CL_KEY_LCONTROL	/usr/include/ClanLib/Display/keys.h	509;"	d
CL_KEY_LEFT	/usr/include/ClanLib/Display/keys.h	256;"	d
CL_KEY_LEFT	/usr/include/ClanLib/Display/keys.h	416;"	d
CL_KEY_LEFT	/usr/include/ClanLib/Display/keys.h	91;"	d
CL_KEY_LEFT_BRACKET	/usr/include/ClanLib/Display/keys.h	206;"	d
CL_KEY_LEFT_BRACKET	/usr/include/ClanLib/Display/keys.h	368;"	d
CL_KEY_LEFT_BRACKET	/usr/include/ClanLib/Display/keys.h	522;"	d
CL_KEY_LMENU	/usr/include/ClanLib/Display/keys.h	197;"	d
CL_KEY_LMENU	/usr/include/ClanLib/Display/keys.h	350;"	d
CL_KEY_LMENU	/usr/include/ClanLib/Display/keys.h	511;"	d
CL_KEY_LSHIFT	/usr/include/ClanLib/Display/keys.h	193;"	d
CL_KEY_LSHIFT	/usr/include/ClanLib/Display/keys.h	346;"	d
CL_KEY_LSHIFT	/usr/include/ClanLib/Display/keys.h	507;"	d
CL_KEY_LWIN	/usr/include/ClanLib/Display/keys.h	139;"	d
CL_KEY_LWIN	/usr/include/ClanLib/Display/keys.h	302;"	d
CL_KEY_LWIN	/usr/include/ClanLib/Display/keys.h	462;"	d
CL_KEY_M	/usr/include/ClanLib/Display/keys.h	123;"	d
CL_KEY_M	/usr/include/ClanLib/Display/keys.h	288;"	d
CL_KEY_M	/usr/include/ClanLib/Display/keys.h	448;"	d
CL_KEY_MENU	/usr/include/ClanLib/Display/keys.h	382;"	d
CL_KEY_MENU	/usr/include/ClanLib/Display/keys.h	405;"	d
CL_KEY_MENU	/usr/include/ClanLib/Display/keys.h	60;"	d
CL_KEY_MULTIPLY	/usr/include/ClanLib/Display/keys.h	315;"	d
CL_KEY_N	/usr/include/ClanLib/Display/keys.h	124;"	d
CL_KEY_N	/usr/include/ClanLib/Display/keys.h	289;"	d
CL_KEY_N	/usr/include/ClanLib/Display/keys.h	449;"	d
CL_KEY_NEXT	/usr/include/ClanLib/Display/keys.h	253;"	d
CL_KEY_NEXT	/usr/include/ClanLib/Display/keys.h	413;"	d
CL_KEY_NEXT	/usr/include/ClanLib/Display/keys.h	88;"	d
CL_KEY_NONCONVERT	/usr/include/ClanLib/Display/keys.h	250;"	d
CL_KEY_NONCONVERT	/usr/include/ClanLib/Display/keys.h	410;"	d
CL_KEY_NONCONVERT	/usr/include/ClanLib/Display/keys.h	67;"	d
CL_KEY_NUMLOCK	/usr/include/ClanLib/Display/keys.h	191;"	d
CL_KEY_NUMLOCK	/usr/include/ClanLib/Display/keys.h	344;"	d
CL_KEY_NUMLOCK	/usr/include/ClanLib/Display/keys.h	505;"	d
CL_KEY_NUMPAD0	/usr/include/ClanLib/Display/keys.h	149;"	d
CL_KEY_NUMPAD0	/usr/include/ClanLib/Display/keys.h	305;"	d
CL_KEY_NUMPAD0	/usr/include/ClanLib/Display/keys.h	465;"	d
CL_KEY_NUMPAD1	/usr/include/ClanLib/Display/keys.h	150;"	d
CL_KEY_NUMPAD1	/usr/include/ClanLib/Display/keys.h	306;"	d
CL_KEY_NUMPAD1	/usr/include/ClanLib/Display/keys.h	466;"	d
CL_KEY_NUMPAD2	/usr/include/ClanLib/Display/keys.h	151;"	d
CL_KEY_NUMPAD2	/usr/include/ClanLib/Display/keys.h	307;"	d
CL_KEY_NUMPAD2	/usr/include/ClanLib/Display/keys.h	467;"	d
CL_KEY_NUMPAD3	/usr/include/ClanLib/Display/keys.h	152;"	d
CL_KEY_NUMPAD3	/usr/include/ClanLib/Display/keys.h	308;"	d
CL_KEY_NUMPAD3	/usr/include/ClanLib/Display/keys.h	468;"	d
CL_KEY_NUMPAD4	/usr/include/ClanLib/Display/keys.h	153;"	d
CL_KEY_NUMPAD4	/usr/include/ClanLib/Display/keys.h	309;"	d
CL_KEY_NUMPAD4	/usr/include/ClanLib/Display/keys.h	469;"	d
CL_KEY_NUMPAD5	/usr/include/ClanLib/Display/keys.h	154;"	d
CL_KEY_NUMPAD5	/usr/include/ClanLib/Display/keys.h	310;"	d
CL_KEY_NUMPAD5	/usr/include/ClanLib/Display/keys.h	470;"	d
CL_KEY_NUMPAD6	/usr/include/ClanLib/Display/keys.h	155;"	d
CL_KEY_NUMPAD6	/usr/include/ClanLib/Display/keys.h	311;"	d
CL_KEY_NUMPAD6	/usr/include/ClanLib/Display/keys.h	471;"	d
CL_KEY_NUMPAD7	/usr/include/ClanLib/Display/keys.h	156;"	d
CL_KEY_NUMPAD7	/usr/include/ClanLib/Display/keys.h	312;"	d
CL_KEY_NUMPAD7	/usr/include/ClanLib/Display/keys.h	472;"	d
CL_KEY_NUMPAD8	/usr/include/ClanLib/Display/keys.h	157;"	d
CL_KEY_NUMPAD8	/usr/include/ClanLib/Display/keys.h	313;"	d
CL_KEY_NUMPAD8	/usr/include/ClanLib/Display/keys.h	473;"	d
CL_KEY_NUMPAD9	/usr/include/ClanLib/Display/keys.h	158;"	d
CL_KEY_NUMPAD9	/usr/include/ClanLib/Display/keys.h	314;"	d
CL_KEY_NUMPAD9	/usr/include/ClanLib/Display/keys.h	474;"	d
CL_KEY_NUMPAD_0	/usr/include/ClanLib/Display/keys.h	372;"	d
CL_KEY_NUMPAD_1	/usr/include/ClanLib/Display/keys.h	373;"	d
CL_KEY_NUMPAD_2	/usr/include/ClanLib/Display/keys.h	374;"	d
CL_KEY_NUMPAD_3	/usr/include/ClanLib/Display/keys.h	375;"	d
CL_KEY_NUMPAD_4	/usr/include/ClanLib/Display/keys.h	376;"	d
CL_KEY_NUMPAD_5	/usr/include/ClanLib/Display/keys.h	377;"	d
CL_KEY_NUMPAD_6	/usr/include/ClanLib/Display/keys.h	378;"	d
CL_KEY_NUMPAD_7	/usr/include/ClanLib/Display/keys.h	379;"	d
CL_KEY_NUMPAD_8	/usr/include/ClanLib/Display/keys.h	380;"	d
CL_KEY_NUMPAD_9	/usr/include/ClanLib/Display/keys.h	381;"	d
CL_KEY_NUMPAD_ADD	/usr/include/ClanLib/Display/keys.h	160;"	d
CL_KEY_NUMPAD_ADD	/usr/include/ClanLib/Display/keys.h	354;"	d
CL_KEY_NUMPAD_ADD	/usr/include/ClanLib/Display/keys.h	476;"	d
CL_KEY_NUMPAD_DECIMAL	/usr/include/ClanLib/Display/keys.h	163;"	d
CL_KEY_NUMPAD_DECIMAL	/usr/include/ClanLib/Display/keys.h	352;"	d
CL_KEY_NUMPAD_DECIMAL	/usr/include/ClanLib/Display/keys.h	479;"	d
CL_KEY_NUMPAD_DIVIDE	/usr/include/ClanLib/Display/keys.h	164;"	d
CL_KEY_NUMPAD_DIVIDE	/usr/include/ClanLib/Display/keys.h	355;"	d
CL_KEY_NUMPAD_DIVIDE	/usr/include/ClanLib/Display/keys.h	480;"	d
CL_KEY_NUMPAD_ENTER	/usr/include/ClanLib/Display/keys.h	161;"	d
CL_KEY_NUMPAD_ENTER	/usr/include/ClanLib/Display/keys.h	356;"	d
CL_KEY_NUMPAD_EQUALS	/usr/include/ClanLib/Display/keys.h	165;"	d
CL_KEY_NUMPAD_EQUALS	/usr/include/ClanLib/Display/keys.h	358;"	d
CL_KEY_NUMPAD_MULTIPLY	/usr/include/ClanLib/Display/keys.h	159;"	d
CL_KEY_NUMPAD_MULTIPLY	/usr/include/ClanLib/Display/keys.h	353;"	d
CL_KEY_NUMPAD_MULTIPLY	/usr/include/ClanLib/Display/keys.h	475;"	d
CL_KEY_NUMPAD_SEPARATOR	/usr/include/ClanLib/Display/keys.h	477;"	d
CL_KEY_NUMPAD_SUBTRACT	/usr/include/ClanLib/Display/keys.h	162;"	d
CL_KEY_NUMPAD_SUBTRACT	/usr/include/ClanLib/Display/keys.h	357;"	d
CL_KEY_NUMPAD_SUBTRACT	/usr/include/ClanLib/Display/keys.h	478;"	d
CL_KEY_O	/usr/include/ClanLib/Display/keys.h	125;"	d
CL_KEY_O	/usr/include/ClanLib/Display/keys.h	290;"	d
CL_KEY_O	/usr/include/ClanLib/Display/keys.h	450;"	d
CL_KEY_OPTION	/usr/include/ClanLib/Display/keys.h	245;"	d
CL_KEY_P	/usr/include/ClanLib/Display/keys.h	126;"	d
CL_KEY_P	/usr/include/ClanLib/Display/keys.h	291;"	d
CL_KEY_P	/usr/include/ClanLib/Display/keys.h	451;"	d
CL_KEY_PAGE_DOWN	/usr/include/ClanLib/Display/keys.h	364;"	d
CL_KEY_PAGE_UP	/usr/include/ClanLib/Display/keys.h	363;"	d
CL_KEY_PAUSE	/usr/include/ClanLib/Display/keys.h	246;"	d
CL_KEY_PAUSE	/usr/include/ClanLib/Display/keys.h	406;"	d
CL_KEY_PAUSE	/usr/include/ClanLib/Display/keys.h	61;"	d
CL_KEY_PERIOD	/usr/include/ClanLib/Display/keys.h	142;"	d
CL_KEY_PERIOD	/usr/include/ClanLib/Display/keys.h	318;"	d
CL_KEY_PERIOD	/usr/include/ClanLib/Display/keys.h	519;"	d
CL_KEY_PRINT	/usr/include/ClanLib/Display/keys.h	261;"	d
CL_KEY_PRINT	/usr/include/ClanLib/Display/keys.h	421;"	d
CL_KEY_PRINT	/usr/include/ClanLib/Display/keys.h	96;"	d
CL_KEY_PRIOR	/usr/include/ClanLib/Display/keys.h	252;"	d
CL_KEY_PRIOR	/usr/include/ClanLib/Display/keys.h	412;"	d
CL_KEY_PRIOR	/usr/include/ClanLib/Display/keys.h	87;"	d
CL_KEY_Q	/usr/include/ClanLib/Display/keys.h	127;"	d
CL_KEY_Q	/usr/include/ClanLib/Display/keys.h	292;"	d
CL_KEY_Q	/usr/include/ClanLib/Display/keys.h	452;"	d
CL_KEY_QUOTE	/usr/include/ClanLib/Display/keys.h	143;"	d
CL_KEY_QUOTE	/usr/include/ClanLib/Display/keys.h	359;"	d
CL_KEY_QUOTE	/usr/include/ClanLib/Display/keys.h	517;"	d
CL_KEY_R	/usr/include/ClanLib/Display/keys.h	128;"	d
CL_KEY_R	/usr/include/ClanLib/Display/keys.h	293;"	d
CL_KEY_R	/usr/include/ClanLib/Display/keys.h	453;"	d
CL_KEY_RAPPLE	/usr/include/ClanLib/Display/keys.h	531;"	d
CL_KEY_RCONTROL	/usr/include/ClanLib/Display/keys.h	196;"	d
CL_KEY_RCONTROL	/usr/include/ClanLib/Display/keys.h	349;"	d
CL_KEY_RCONTROL	/usr/include/ClanLib/Display/keys.h	510;"	d
CL_KEY_RETURN	/usr/include/ClanLib/Display/keys.h	242;"	d
CL_KEY_RETURN	/usr/include/ClanLib/Display/keys.h	402;"	d
CL_KEY_RETURN	/usr/include/ClanLib/Display/keys.h	57;"	d
CL_KEY_RIGHT	/usr/include/ClanLib/Display/keys.h	258;"	d
CL_KEY_RIGHT	/usr/include/ClanLib/Display/keys.h	418;"	d
CL_KEY_RIGHT	/usr/include/ClanLib/Display/keys.h	93;"	d
CL_KEY_RIGHT_BRACKET	/usr/include/ClanLib/Display/keys.h	207;"	d
CL_KEY_RIGHT_BRACKET	/usr/include/ClanLib/Display/keys.h	369;"	d
CL_KEY_RIGHT_BRACKET	/usr/include/ClanLib/Display/keys.h	523;"	d
CL_KEY_RMENU	/usr/include/ClanLib/Display/keys.h	198;"	d
CL_KEY_RMENU	/usr/include/ClanLib/Display/keys.h	351;"	d
CL_KEY_RMENU	/usr/include/ClanLib/Display/keys.h	512;"	d
CL_KEY_RSHIFT	/usr/include/ClanLib/Display/keys.h	194;"	d
CL_KEY_RSHIFT	/usr/include/ClanLib/Display/keys.h	347;"	d
CL_KEY_RSHIFT	/usr/include/ClanLib/Display/keys.h	508;"	d
CL_KEY_RWIN	/usr/include/ClanLib/Display/keys.h	140;"	d
CL_KEY_RWIN	/usr/include/ClanLib/Display/keys.h	303;"	d
CL_KEY_RWIN	/usr/include/ClanLib/Display/keys.h	463;"	d
CL_KEY_S	/usr/include/ClanLib/Display/keys.h	129;"	d
CL_KEY_S	/usr/include/ClanLib/Display/keys.h	294;"	d
CL_KEY_S	/usr/include/ClanLib/Display/keys.h	454;"	d
CL_KEY_SCROLL	/usr/include/ClanLib/Display/keys.h	192;"	d
CL_KEY_SCROLL	/usr/include/ClanLib/Display/keys.h	345;"	d
CL_KEY_SCROLL	/usr/include/ClanLib/Display/keys.h	506;"	d
CL_KEY_SELECT	/usr/include/ClanLib/Display/keys.h	260;"	d
CL_KEY_SELECT	/usr/include/ClanLib/Display/keys.h	420;"	d
CL_KEY_SELECT	/usr/include/ClanLib/Display/keys.h	95;"	d
CL_KEY_SEMICOLON	/usr/include/ClanLib/Display/keys.h	144;"	d
CL_KEY_SEMICOLON	/usr/include/ClanLib/Display/keys.h	360;"	d
CL_KEY_SEMICOLON	/usr/include/ClanLib/Display/keys.h	516;"	d
CL_KEY_SEPARATOR	/usr/include/ClanLib/Display/keys.h	384;"	d
CL_KEY_SHIFT	/usr/include/ClanLib/Display/keys.h	243;"	d
CL_KEY_SHIFT	/usr/include/ClanLib/Display/keys.h	403;"	d
CL_KEY_SHIFT	/usr/include/ClanLib/Display/keys.h	58;"	d
CL_KEY_SPACE	/usr/include/ClanLib/Display/keys.h	251;"	d
CL_KEY_SPACE	/usr/include/ClanLib/Display/keys.h	411;"	d
CL_KEY_SPACE	/usr/include/ClanLib/Display/keys.h	86;"	d
CL_KEY_SUBTRACT	/usr/include/ClanLib/Display/keys.h	137;"	d
CL_KEY_SUBTRACT	/usr/include/ClanLib/Display/keys.h	317;"	d
CL_KEY_SUBTRACT	/usr/include/ClanLib/Display/keys.h	514;"	d
CL_KEY_T	/usr/include/ClanLib/Display/keys.h	130;"	d
CL_KEY_T	/usr/include/ClanLib/Display/keys.h	295;"	d
CL_KEY_T	/usr/include/ClanLib/Display/keys.h	455;"	d
CL_KEY_TAB	/usr/include/ClanLib/Display/keys.h	240;"	d
CL_KEY_TAB	/usr/include/ClanLib/Display/keys.h	400;"	d
CL_KEY_TAB	/usr/include/ClanLib/Display/keys.h	55;"	d
CL_KEY_TILDE	/usr/include/ClanLib/Display/keys.h	532;"	d
CL_KEY_U	/usr/include/ClanLib/Display/keys.h	131;"	d
CL_KEY_U	/usr/include/ClanLib/Display/keys.h	296;"	d
CL_KEY_U	/usr/include/ClanLib/Display/keys.h	456;"	d
CL_KEY_UP	/usr/include/ClanLib/Display/keys.h	257;"	d
CL_KEY_UP	/usr/include/ClanLib/Display/keys.h	417;"	d
CL_KEY_UP	/usr/include/ClanLib/Display/keys.h	92;"	d
CL_KEY_V	/usr/include/ClanLib/Display/keys.h	132;"	d
CL_KEY_V	/usr/include/ClanLib/Display/keys.h	297;"	d
CL_KEY_V	/usr/include/ClanLib/Display/keys.h	457;"	d
CL_KEY_W	/usr/include/ClanLib/Display/keys.h	133;"	d
CL_KEY_W	/usr/include/ClanLib/Display/keys.h	298;"	d
CL_KEY_W	/usr/include/ClanLib/Display/keys.h	458;"	d
CL_KEY_X	/usr/include/ClanLib/Display/keys.h	134;"	d
CL_KEY_X	/usr/include/ClanLib/Display/keys.h	299;"	d
CL_KEY_X	/usr/include/ClanLib/Display/keys.h	459;"	d
CL_KEY_Y	/usr/include/ClanLib/Display/keys.h	135;"	d
CL_KEY_Y	/usr/include/ClanLib/Display/keys.h	300;"	d
CL_KEY_Y	/usr/include/ClanLib/Display/keys.h	460;"	d
CL_KEY_Z	/usr/include/ClanLib/Display/keys.h	136;"	d
CL_KEY_Z	/usr/include/ClanLib/Display/keys.h	301;"	d
CL_KEY_Z	/usr/include/ClanLib/Display/keys.h	461;"	d
CL_KeepAlive	/usr/include/ClanLib/Core/System/keep_alive.h	/^class CL_API_CORE CL_KeepAlive$/;"	c
CL_KeyBinding	/usr/include/ClanLib/Display/key_binding.h	/^class CL_API_DISPLAY CL_KeyBinding$/;"	c
CL_Keyboard	/usr/include/ClanLib/Display/keyboard.h	/^class CL_API_DISPLAY CL_Keyboard$/;"	c
CL_LEFT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LEFT                           = 0x0406,$/;"	e	enum:CL_GLDefines
CL_LEQUAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LEQUAL                         = 0x0203,$/;"	e	enum:CL_GLDefines
CL_LESS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LESS                           = 0x0201,$/;"	e	enum:CL_GLDefines
CL_LIGHT0	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT0                       = 0x4000,$/;"	e	enum:CL_GLDefines
CL_LIGHT1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT1                       = 0x4001,$/;"	e	enum:CL_GLDefines
CL_LIGHT2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT2                       = 0x4002,$/;"	e	enum:CL_GLDefines
CL_LIGHT3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT3                       = 0x4003,$/;"	e	enum:CL_GLDefines
CL_LIGHT4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT4                       = 0x4004,$/;"	e	enum:CL_GLDefines
CL_LIGHT5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT5                       = 0x4005,$/;"	e	enum:CL_GLDefines
CL_LIGHT6	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT6                       = 0x4006,$/;"	e	enum:CL_GLDefines
CL_LIGHT7	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT7                       = 0x4007,$/;"	e	enum:CL_GLDefines
CL_LIGHTING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHTING                     = 0x0B50,$/;"	e	enum:CL_GLDefines
CL_LIGHTING_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHTING_BIT                   = 0x00000040,$/;"	e	enum:CL_GLDefines
CL_LIGHT_MODEL_AMBIENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT_MODEL_AMBIENT          = 0x0B53,$/;"	e	enum:CL_GLDefines
CL_LIGHT_MODEL_COLOR_CONTROL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT_MODEL_COLOR_CONTROL    = 0x81F8,$/;"	e	enum:CL_GLDefines
CL_LIGHT_MODEL_LOCAL_VIEWER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT_MODEL_LOCAL_VIEWER     = 0x0B51,$/;"	e	enum:CL_GLDefines
CL_LIGHT_MODEL_TWO_SIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIGHT_MODEL_TWO_SIDE         = 0x0B52,$/;"	e	enum:CL_GLDefines
CL_LINE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE                         = 0x1B01,$/;"	e	enum:CL_GLDefines
CL_LINEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINEAR                       = 0x2601,$/;"	e	enum:CL_GLDefines
CL_LINEAR_ATTENUATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINEAR_ATTENUATION           = 0x1208,$/;"	e	enum:CL_GLDefines
CL_LINEAR_MIPMAP_LINEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINEAR_MIPMAP_LINEAR         = 0x2703,$/;"	e	enum:CL_GLDefines
CL_LINEAR_MIPMAP_NEAREST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINEAR_MIPMAP_NEAREST        = 0x2701,$/;"	e	enum:CL_GLDefines
CL_LINES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINES                          = 0x0001,$/;"	e	enum:CL_GLDefines
CL_LINE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_BIT                       = 0x00000004,$/;"	e	enum:CL_GLDefines
CL_LINE_LOOP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_LOOP                      = 0x0002,$/;"	e	enum:CL_GLDefines
CL_LINE_RESET_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_RESET_TOKEN             = 0x0707,$/;"	e	enum:CL_GLDefines
CL_LINE_SMOOTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_SMOOTH                  = 0x0B20,$/;"	e	enum:CL_GLDefines
CL_LINE_SMOOTH_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_SMOOTH_HINT             = 0x0C52,$/;"	e	enum:CL_GLDefines
CL_LINE_STIPPLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_STIPPLE                 = 0x0B24,$/;"	e	enum:CL_GLDefines
CL_LINE_STIPPLE_PATTERN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_STIPPLE_PATTERN         = 0x0B25,$/;"	e	enum:CL_GLDefines
CL_LINE_STIPPLE_REPEAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_STIPPLE_REPEAT          = 0x0B26,$/;"	e	enum:CL_GLDefines
CL_LINE_STRIP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_STRIP                     = 0x0003,$/;"	e	enum:CL_GLDefines
CL_LINE_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_TOKEN                   = 0x0702,$/;"	e	enum:CL_GLDefines
CL_LINE_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_WIDTH                   = 0x0B21,$/;"	e	enum:CL_GLDefines
CL_LINE_WIDTH_GRANULARITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_WIDTH_GRANULARITY       = 0x0B23,$/;"	e	enum:CL_GLDefines
CL_LINE_WIDTH_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINE_WIDTH_RANGE             = 0x0B22,$/;"	e	enum:CL_GLDefines
CL_LINK_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LINK_STATUS                         = 0x8B82,$/;"	e	enum:CL_GLDefines
CL_LIST_BASE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIST_BASE                    = 0x0B32,$/;"	e	enum:CL_GLDefines
CL_LIST_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIST_BIT                       = 0x00020000,$/;"	e	enum:CL_GLDefines
CL_LIST_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIST_INDEX                   = 0x0B33,$/;"	e	enum:CL_GLDefines
CL_LIST_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LIST_MODE                    = 0x0B30,$/;"	e	enum:CL_GLDefines
CL_LOAD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LOAD                           = 0x0101,$/;"	e	enum:CL_GLDefines
CL_LOGIC_OP_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LOGIC_OP_MODE                = 0x0BF0,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE                    = 0x1909,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE12                  = 0x8041,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE12_ALPHA12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE12_ALPHA12          = 0x8047,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE12_ALPHA4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE12_ALPHA4           = 0x8046,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE16                  = 0x8042,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE16_ALPHA16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE16_ALPHA16          = 0x8048,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE4                   = 0x803F,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE4_ALPHA4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE4_ALPHA4            = 0x8043,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE6_ALPHA2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE6_ALPHA2            = 0x8044,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE8                   = 0x8040,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE8_ALPHA8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE8_ALPHA8            = 0x8045,$/;"	e	enum:CL_GLDefines
CL_LUMINANCE_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_LUMINANCE_ALPHA              = 0x190A,$/;"	e	enum:CL_GLDefines
CL_Label	/usr/include/ClanLib/GUI/label.h	/^	CL_Label(const CL_Label &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Label
CL_Label	/usr/include/ClanLib/GUI/label.h	/^class CL_API_GUI CL_Label : public CL_Component$/;"	c
CL_Label_Silver	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^class CL_API_GUISTYLESILVER CL_Label_Silver : public CL_ComponentStyle$/;"	c
CL_Layout	/usr/include/ClanLib/GUI/layout.h	/^class CL_API_GUI CL_Layout$/;"	c
CL_LayoutPolicy	/usr/include/ClanLib/GUI/component.h	/^enum CL_LayoutPolicy$/;"	g
CL_LayoutType	/usr/include/ClanLib/GUI/layout.h	/^enum CL_LayoutType$/;"	g
CL_LazyCopyPtr	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	CL_LazyCopyPtr() {}$/;"	f	class:CL_LazyCopyPtr
CL_LazyCopyPtr	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	CL_LazyCopyPtr(T* t) : ptr(t) {}$/;"	f	class:CL_LazyCopyPtr
CL_LazyCopyPtr	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^template <typename T, typename U = T> class CL_LazyCopyPtr$/;"	c
CL_LibraryFactory	/usr/include/ClanLib/Core/System/cl_library.h	/^class CL_API_CORE CL_LibraryFactory$/;"	c
CL_LibraryFactoryMaker	/usr/include/ClanLib/Core/System/cl_library.h	/^typedef CL_LibraryFactory *CL_LibraryFactoryMaker();$/;"	t
CL_LibraryFactoryMaker_t	/usr/include/ClanLib/Core/System/cl_library.h	/^typedef CL_LibraryFactory *(*CL_LibraryFactoryMaker_t)();$/;"	t
CL_LibraryLoader	/usr/include/ClanLib/Core/System/cl_library.h	/^class CL_API_CORE CL_LibraryLoader$/;"	c
CL_LibraryManager	/usr/include/ClanLib/Core/System/cl_library.h	/^class CL_API_CORE CL_LibraryManager$/;"	c
CL_LightSource	/usr/include/ClanLib/GL/light_source.h	/^class CL_API_GL CL_LightSource$/;"	c
CL_LineMath	/usr/include/ClanLib/Core/Math/line_math.h	/^class CL_API_CORE CL_LineMath$/;"	c
CL_ListBox	/usr/include/ClanLib/GUI/listbox.h	/^	CL_ListBox(const CL_ListBox &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_ListBox
CL_ListBox	/usr/include/ClanLib/GUI/listbox.h	/^class CL_API_GUI CL_ListBox : public CL_Component$/;"	c
CL_ListBox_Silver	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^class CL_API_GUISTYLESILVER CL_ListBox_Silver : public CL_ComponentStyle$/;"	c
CL_ListItem	/usr/include/ClanLib/GUI/listitem.h	/^	CL_ListItem() : selected(false), delete_item(false) {}$/;"	f	class:CL_ListItem
CL_ListItem	/usr/include/ClanLib/GUI/listitem.h	/^class CL_API_GUI CL_ListItem$/;"	c
CL_Log	/usr/include/ClanLib/Core/System/log.h	/^class CL_API_CORE CL_Log$/;"	c
CL_MAP1_COLOR_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_COLOR_4                 = 0x0D90,$/;"	e	enum:CL_GLDefines
CL_MAP1_GRID_DOMAIN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_GRID_DOMAIN             = 0x0DD0,$/;"	e	enum:CL_GLDefines
CL_MAP1_GRID_SEGMENTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_GRID_SEGMENTS           = 0x0DD1,$/;"	e	enum:CL_GLDefines
CL_MAP1_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_INDEX                   = 0x0D91,$/;"	e	enum:CL_GLDefines
CL_MAP1_NORMAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_NORMAL                  = 0x0D92,$/;"	e	enum:CL_GLDefines
CL_MAP1_TEXTURE_COORD_1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_TEXTURE_COORD_1         = 0x0D93,$/;"	e	enum:CL_GLDefines
CL_MAP1_TEXTURE_COORD_2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_TEXTURE_COORD_2         = 0x0D94,$/;"	e	enum:CL_GLDefines
CL_MAP1_TEXTURE_COORD_3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_TEXTURE_COORD_3         = 0x0D95,$/;"	e	enum:CL_GLDefines
CL_MAP1_TEXTURE_COORD_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_TEXTURE_COORD_4         = 0x0D96,$/;"	e	enum:CL_GLDefines
CL_MAP1_VERTEX_3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_VERTEX_3                = 0x0D97,$/;"	e	enum:CL_GLDefines
CL_MAP1_VERTEX_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP1_VERTEX_4                = 0x0D98,$/;"	e	enum:CL_GLDefines
CL_MAP2_COLOR_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_COLOR_4                 = 0x0DB0,$/;"	e	enum:CL_GLDefines
CL_MAP2_GRID_DOMAIN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_GRID_DOMAIN             = 0x0DD2,$/;"	e	enum:CL_GLDefines
CL_MAP2_GRID_SEGMENTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_GRID_SEGMENTS           = 0x0DD3,$/;"	e	enum:CL_GLDefines
CL_MAP2_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_INDEX                   = 0x0DB1,$/;"	e	enum:CL_GLDefines
CL_MAP2_NORMAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_NORMAL                  = 0x0DB2,$/;"	e	enum:CL_GLDefines
CL_MAP2_TEXTURE_COORD_1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_TEXTURE_COORD_1         = 0x0DB3,$/;"	e	enum:CL_GLDefines
CL_MAP2_TEXTURE_COORD_2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_TEXTURE_COORD_2         = 0x0DB4,$/;"	e	enum:CL_GLDefines
CL_MAP2_TEXTURE_COORD_3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_TEXTURE_COORD_3         = 0x0DB5,$/;"	e	enum:CL_GLDefines
CL_MAP2_TEXTURE_COORD_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_TEXTURE_COORD_4         = 0x0DB6,$/;"	e	enum:CL_GLDefines
CL_MAP2_VERTEX_3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_VERTEX_3                = 0x0DB7,$/;"	e	enum:CL_GLDefines
CL_MAP2_VERTEX_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP2_VERTEX_4                = 0x0DB8,$/;"	e	enum:CL_GLDefines
CL_MAP_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP_COLOR                    = 0x0D10,$/;"	e	enum:CL_GLDefines
CL_MAP_STENCIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAP_STENCIL                  = 0x0D11,$/;"	e	enum:CL_GLDefines
CL_MATRIX_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MATRIX_MODE                  = 0x0BA0,$/;"	e	enum:CL_GLDefines
CL_MAX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX                          = 0x8008,$/;"	e	enum:CL_GLDefines
CL_MAX_3D_TEXTURE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_3D_TEXTURE_SIZE          = 0x8073,$/;"	e	enum:CL_GLDefines
CL_MAX_ATTRIB_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_ATTRIB_STACK_DEPTH       = 0x0D35,$/;"	e	enum:CL_GLDefines
CL_MAX_CLIENT_ATTRIB_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_CLIENT_ATTRIB_STACK_DEPTH= 0x0D3B,$/;"	e	enum:CL_GLDefines
CL_MAX_CLIP_PLANES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_CLIP_PLANES              = 0x0D32,$/;"	e	enum:CL_GLDefines
CL_MAX_COLOR_MATRIX_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3,$/;"	e	enum:CL_GLDefines
CL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_COMBINED_TEXTURE_IMAGE_UNITS    = 0x8B4D,$/;"	e	enum:CL_GLDefines
CL_MAX_CONVOLUTION_HEIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_CONVOLUTION_HEIGHT       = 0x801B,$/;"	e	enum:CL_GLDefines
CL_MAX_CONVOLUTION_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_CONVOLUTION_WIDTH        = 0x801A,$/;"	e	enum:CL_GLDefines
CL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_CUBE_MAP_TEXTURE_SIZE  = 0x851c,$/;"	e	enum:CL_GLDefines
CL_MAX_DRAW_BUFFERS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_DRAW_BUFFERS                    = 0x8824,$/;"	e	enum:CL_GLDefines
CL_MAX_ELEMENTS_INDICES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_ELEMENTS_INDICES         = 0x80E9,$/;"	e	enum:CL_GLDefines
CL_MAX_ELEMENTS_VERTICES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_ELEMENTS_VERTICES        = 0x80E8,$/;"	e	enum:CL_GLDefines
CL_MAX_EVAL_ORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_EVAL_ORDER               = 0x0D30,$/;"	e	enum:CL_GLDefines
CL_MAX_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_FRAGMENT_UNIFORM_COMPONENTS     = 0x8B49,$/;"	e	enum:CL_GLDefines
CL_MAX_LIGHTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_LIGHTS                   = 0x0D31,$/;"	e	enum:CL_GLDefines
CL_MAX_LIST_NESTING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_LIST_NESTING             = 0x0B31,$/;"	e	enum:CL_GLDefines
CL_MAX_MODELVIEW_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_MODELVIEW_STACK_DEPTH    = 0x0D36,$/;"	e	enum:CL_GLDefines
CL_MAX_NAME_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_NAME_STACK_DEPTH         = 0x0D37,$/;"	e	enum:CL_GLDefines
CL_MAX_PIXEL_MAP_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_PIXEL_MAP_TABLE          = 0x0D34,$/;"	e	enum:CL_GLDefines
CL_MAX_PROJECTION_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_PROJECTION_STACK_DEPTH   = 0x0D38,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_COORDS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_COORDS                  = 0x8871,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_IMAGE_UNITS             = 0x8872,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_LOD_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_LOD_BIAS        = 0x84fd,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_SIZE             = 0x0D33,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_STACK_DEPTH      = 0x0D39,$/;"	e	enum:CL_GLDefines
CL_MAX_TEXTURE_UNITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_TEXTURE_UNITS        = 0x84E2,$/;"	e	enum:CL_GLDefines
CL_MAX_VARYING_FLOATS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_VARYING_FLOATS                  = 0x8B4B,$/;"	e	enum:CL_GLDefines
CL_MAX_VERTEX_ATTRIBS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_VERTEX_ATTRIBS                  = 0x8869,$/;"	e	enum:CL_GLDefines
CL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_VERTEX_TEXTURE_IMAGE_UNITS      = 0x8B4C,$/;"	e	enum:CL_GLDefines
CL_MAX_VERTEX_UNIFORM_COMPONENTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_VERTEX_UNIFORM_COMPONENTS       = 0x8B4A,$/;"	e	enum:CL_GLDefines
CL_MAX_VIEWPORT_DIMS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MAX_VIEWPORT_DIMS            = 0x0D3A,$/;"	e	enum:CL_GLDefines
CL_MIN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MIN                          = 0x8007,$/;"	e	enum:CL_GLDefines
CL_MINMAX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MINMAX                       = 0x802E,$/;"	e	enum:CL_GLDefines
CL_MINMAX_FORMAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MINMAX_FORMAT                = 0x802F,$/;"	e	enum:CL_GLDefines
CL_MINMAX_SINK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MINMAX_SINK                  = 0x8030,$/;"	e	enum:CL_GLDefines
CL_MIRRORED_REPEAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MIRRORED_REPEAT              = 0x8370,$/;"	e	enum:CL_GLDefines
CL_MODELVIEW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MODELVIEW                    = 0x1700,$/;"	e	enum:CL_GLDefines
CL_MODELVIEW_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MODELVIEW_MATRIX             = 0x0BA6,$/;"	e	enum:CL_GLDefines
CL_MODELVIEW_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MODELVIEW_STACK_DEPTH        = 0x0BA3,$/;"	e	enum:CL_GLDefines
CL_MODULATE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MODULATE                     = 0x2100,$/;"	e	enum:CL_GLDefines
CL_MOUSE_LEFT	/usr/include/ClanLib/Display/keys.h	231;"	d
CL_MOUSE_LEFT	/usr/include/ClanLib/Display/keys.h	391;"	d
CL_MOUSE_LEFT	/usr/include/ClanLib/Display/keys.h	46;"	d
CL_MOUSE_MIDDLE	/usr/include/ClanLib/Display/keys.h	233;"	d
CL_MOUSE_MIDDLE	/usr/include/ClanLib/Display/keys.h	393;"	d
CL_MOUSE_MIDDLE	/usr/include/ClanLib/Display/keys.h	48;"	d
CL_MOUSE_RIGHT	/usr/include/ClanLib/Display/keys.h	232;"	d
CL_MOUSE_RIGHT	/usr/include/ClanLib/Display/keys.h	392;"	d
CL_MOUSE_RIGHT	/usr/include/ClanLib/Display/keys.h	47;"	d
CL_MOUSE_WHEEL_DOWN	/usr/include/ClanLib/Display/keys.h	235;"	d
CL_MOUSE_WHEEL_DOWN	/usr/include/ClanLib/Display/keys.h	395;"	d
CL_MOUSE_WHEEL_DOWN	/usr/include/ClanLib/Display/keys.h	50;"	d
CL_MOUSE_WHEEL_UP	/usr/include/ClanLib/Display/keys.h	234;"	d
CL_MOUSE_WHEEL_UP	/usr/include/ClanLib/Display/keys.h	394;"	d
CL_MOUSE_WHEEL_UP	/usr/include/ClanLib/Display/keys.h	49;"	d
CL_MOUSE_XBUTTON1	/usr/include/ClanLib/Display/keys.h	236;"	d
CL_MOUSE_XBUTTON1	/usr/include/ClanLib/Display/keys.h	396;"	d
CL_MOUSE_XBUTTON1	/usr/include/ClanLib/Display/keys.h	51;"	d
CL_MOUSE_XBUTTON2	/usr/include/ClanLib/Display/keys.h	237;"	d
CL_MOUSE_XBUTTON2	/usr/include/ClanLib/Display/keys.h	397;"	d
CL_MOUSE_XBUTTON2	/usr/include/ClanLib/Display/keys.h	52;"	d
CL_MULT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MULT                           = 0x0103,$/;"	e	enum:CL_GLDefines
CL_MULTISAMPLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MULTISAMPLE                = 0x809d,$/;"	e	enum:CL_GLDefines
CL_MULTISAMPLE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_MULTISAMPLE_BIT            = 0x20000000,$/;"	e	enum:CL_GLDefines
CL_Matrix4x4	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^class CL_API_CORE CL_Matrix4x4$/;"	c
CL_Menu	/usr/include/ClanLib/GUI/menu.h	/^	CL_Menu(const CL_Menu &copy) : CL_Component(0,0) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Menu
CL_Menu	/usr/include/ClanLib/GUI/menu.h	/^class CL_API_GUI CL_Menu : public CL_Component$/;"	c
CL_MenuItem	/usr/include/ClanLib/GUI/menu_item.h	/^	CL_MenuItem(const CL_MenuItem &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_MenuItem
CL_MenuItem	/usr/include/ClanLib/GUI/menu_item.h	/^class CL_API_GUI CL_MenuItem : public CL_Component$/;"	c
CL_MenuItem_Silver	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^class CL_API_GUISTYLESILVER CL_MenuItem_Silver : public CL_ComponentStyle$/;"	c
CL_MenuNode	/usr/include/ClanLib/GUI/menu_node.h	/^	CL_MenuNode(const CL_MenuNode &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_MenuNode
CL_MenuNode	/usr/include/ClanLib/GUI/menu_node.h	/^class CL_API_GUI CL_MenuNode : public CL_Component$/;"	c
CL_MenuNode_Silver	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^class CL_API_GUISTYLESILVER CL_MenuNode_Silver : public CL_ComponentStyle$/;"	c
CL_Menu_Silver	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	/^class CL_API_GUISTYLESILVER CL_Menu_Silver : public CL_ComponentStyle$/;"	c
CL_MessageBox	/usr/include/ClanLib/GUI/messagebox.h	/^	CL_MessageBox(const CL_MessageBox &copy) : CL_Window((CL_Component*)NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_MessageBox
CL_MessageBox	/usr/include/ClanLib/GUI/messagebox.h	/^class CL_API_GUI CL_MessageBox : public CL_Window$/;"	c
CL_MethodSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_MethodSlot_v0(CallbackClass *cb_class, Callback callback, VirtualCallback virtual_callback)$/;"	f	class:CL_MethodSlot_v0
CL_MethodSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_MethodSlot_v0 : public CL_Slot_v0$/;"	c
CL_MethodSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^	CL_MethodSlot_v1(CallbackClass *cb_class, Callback callback)$/;"	f	class:CL_MethodSlot_v1
CL_MethodSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_MethodSlot_v1 : public CL_Slot_v1<PARAM1>$/;"	c
CL_MethodSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^	CL_MethodSlot_v2(CallbackClass *cb_class, Callback callback)$/;"	f	class:CL_MethodSlot_v2
CL_MethodSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^class CL_MethodSlot_v2 : public CL_Slot_v2<PARAM1, PARAM2>$/;"	c
CL_MethodSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^	CL_MethodSlot_v3(CallbackClass *cb_class, Callback callback)$/;"	f	class:CL_MethodSlot_v3
CL_MethodSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^class CL_MethodSlot_v3 : public CL_Slot_v3<PARAM1, PARAM2, PARAM3>$/;"	c
CL_MethodSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^	CL_MethodSlot_v4(CallbackClass *cb_class, Callback callback)$/;"	f	class:CL_MethodSlot_v4
CL_MethodSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^class CL_MethodSlot_v4 : public CL_Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>$/;"	c
CL_MethodSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^	CL_MethodSlot_v5(CallbackClass *cb_class, Callback callback)$/;"	f	class:CL_MethodSlot_v5
CL_MethodSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^class CL_MethodSlot_v5 : public CL_Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>$/;"	c
CL_Mouse	/usr/include/ClanLib/Display/mouse.h	/^class CL_API_DISPLAY CL_Mouse$/;"	c
CL_Mutex	/usr/include/ClanLib/Core/System/mutex.h	/^class CL_API_CORE CL_Mutex$/;"	c
CL_MutexSection	/usr/include/ClanLib/Core/System/mutex.h	/^	CL_MutexSection(CL_Mutex *mutex, bool lock_at_construct = true)$/;"	f	class:CL_MutexSection
CL_MutexSection	/usr/include/ClanLib/Core/System/mutex.h	/^class CL_MutexSection$/;"	c
CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr() : impl(0) { return; }$/;"	f	class:CL_MutexSharedPtr
CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr(const CL_MutexSharedPtr<T, U>& other) : impl(other.impl) { increment(); }$/;"	f	class:CL_MutexSharedPtr
CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	explicit CL_MutexSharedPtr(CL_MutexSharedPtr_Generic<T> *impl) : impl(impl) { increment(); }$/;"	f	class:CL_MutexSharedPtr
CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	explicit CL_MutexSharedPtr(D* ptr) : impl(new CL_MutexSharedPtr_Deleter<T, D>(ptr)) { return; }$/;"	f	class:CL_MutexSharedPtr
CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^class CL_MutexSharedPtr$/;"	c
CL_MutexSharedPtr_Deleter	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr_Deleter(TEvil *e) { this->ptr = e; }$/;"	f	class:CL_MutexSharedPtr_Deleter
CL_MutexSharedPtr_Deleter	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^class CL_MutexSharedPtr_Deleter : public CL_MutexSharedPtr_Generic<T>$/;"	c
CL_MutexSharedPtr_Generic	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr_Generic() : ptr(0), ref_count(1) { return; }$/;"	f	class:CL_MutexSharedPtr_Generic
CL_MutexSharedPtr_Generic	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^class CL_MutexSharedPtr_Generic$/;"	c
CL_MutexWeakPtr	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	CL_MutexWeakPtr() : impl(0) { return; }$/;"	f	class:CL_MutexWeakPtr
CL_MutexWeakPtr	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	CL_MutexWeakPtr(CL_MutexSharedPtr<T, U> &other) : impl(other.get_impl()) { return; }$/;"	f	class:CL_MutexWeakPtr
CL_MutexWeakPtr	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^class CL_MutexWeakPtr$/;"	c
CL_N3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_N3F_V3F                      = 0x2A25,$/;"	e	enum:CL_GLDefines
CL_NAME_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NAME_STACK_DEPTH             = 0x0D70,$/;"	e	enum:CL_GLDefines
CL_NAND	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NAND                         = 0x150E,$/;"	e	enum:CL_GLDefines
CL_NEAREST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NEAREST                      = 0x2600,$/;"	e	enum:CL_GLDefines
CL_NEAREST_MIPMAP_LINEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NEAREST_MIPMAP_LINEAR        = 0x2702,$/;"	e	enum:CL_GLDefines
CL_NEAREST_MIPMAP_NEAREST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NEAREST_MIPMAP_NEAREST       = 0x2700,$/;"	e	enum:CL_GLDefines
CL_NEVER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NEVER                          = 0x0200,$/;"	e	enum:CL_GLDefines
CL_NICEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NICEST                       = 0x1102,$/;"	e	enum:CL_GLDefines
CL_NONE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NONE                           = 0,$/;"	e	enum:CL_GLDefines
CL_NOOP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NOOP                         = 0x1505,$/;"	e	enum:CL_GLDefines
CL_NOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NOR                          = 0x1508,$/;"	e	enum:CL_GLDefines
CL_NORMALIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMALIZE                    = 0x0BA1,$/;"	e	enum:CL_GLDefines
CL_NORMAL_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_ARRAY                 = 0x8075,$/;"	e	enum:CL_GLDefines
CL_NORMAL_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_ARRAY_BUFFER_BINDING         = 0x8897,$/;"	e	enum:CL_GLDefines
CL_NORMAL_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_ARRAY_POINTER         = 0x808F,$/;"	e	enum:CL_GLDefines
CL_NORMAL_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_ARRAY_STRIDE          = 0x807F,$/;"	e	enum:CL_GLDefines
CL_NORMAL_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_ARRAY_TYPE            = 0x807E,$/;"	e	enum:CL_GLDefines
CL_NORMAL_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NORMAL_MAP                 = 0x8511,$/;"	e	enum:CL_GLDefines
CL_NOTEQUAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NOTEQUAL                       = 0x0205,$/;"	e	enum:CL_GLDefines
CL_NO_ERROR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NO_ERROR                     = 0,$/;"	e	enum:CL_GLDefines
CL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86a2,$/;"	e	enum:CL_GLDefines
CL_NetComputer	/usr/include/ClanLib/Network/NetSession/netcomputer.h	/^class CL_API_NETWORK CL_NetComputer$/;"	c
CL_NetGroup	/usr/include/ClanLib/Network/NetSession/netgroup.h	/^class CL_API_NETWORK CL_NetGroup : public std::list<CL_NetComputer>$/;"	c
CL_NetObject_Client	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	/^class CL_API_NETWORK CL_NetObject_Client$/;"	c
CL_NetObject_Controller	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	/^class CL_API_NETWORK CL_NetObject_Controller$/;"	c
CL_NetObject_Server	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	/^class CL_API_NETWORK CL_NetObject_Server$/;"	c
CL_NetPacket	/usr/include/ClanLib/Network/NetSession/netpacket.h	/^class CL_API_NETWORK CL_NetPacket$/;"	c
CL_NetSession	/usr/include/ClanLib/Network/NetSession/netsession.h	/^class CL_API_NETWORK CL_NetSession$/;"	c
CL_NetStream	/usr/include/ClanLib/Network/NetSession/netstream.h	/^class CL_API_NETWORK CL_NetStream$/;"	c
CL_NetVariables	/usr/include/ClanLib/Network/NetVariables/netvariables.h	/^class CL_API_NETWORK CL_NetVariables$/;"	c
CL_NumberPool	/usr/include/ClanLib/Core/Math/number_pool.h	/^class CL_API_CORE CL_NumberPool$/;"	c
CL_OBJECT_ACTIVE_ATTRIBUTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_ACTIVE_ATTRIBUTES            = CL_ACTIVE_ATTRIBUTES,$/;"	e	enum:CL_GLDefines
CL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH  = CL_ACTIVE_ATTRIBUTE_MAX_LENGTH,$/;"	e	enum:CL_GLDefines
CL_OBJECT_ACTIVE_UNIFORMS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_ACTIVE_UNIFORMS              = CL_ACTIVE_UNIFORMS,$/;"	e	enum:CL_GLDefines
CL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH    = CL_ACTIVE_UNIFORM_MAX_LENGTH,$/;"	e	enum:CL_GLDefines
CL_OBJECT_ATTACHED_OBJECTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_ATTACHED_OBJECTS             = CL_ATTACHED_OBJECTS,$/;"	e	enum:CL_GLDefines
CL_OBJECT_COMPILE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_COMPILE_STATUS               = CL_COMPILE_STATUS,$/;"	e	enum:CL_GLDefines
CL_OBJECT_DELETE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_DELETE_STATUS                = CL_DELETE_STATUS,$/;"	e	enum:CL_GLDefines
CL_OBJECT_INFO_LOG_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_INFO_LOG_LENGTH              = CL_INFO_LOG_LENGTH,$/;"	e	enum:CL_GLDefines
CL_OBJECT_LINEAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_LINEAR                = 0x2401,$/;"	e	enum:CL_GLDefines
CL_OBJECT_LINK_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_LINK_STATUS                  = CL_LINK_STATUS,$/;"	e	enum:CL_GLDefines
CL_OBJECT_PLANE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_PLANE                 = 0x2501,$/;"	e	enum:CL_GLDefines
CL_OBJECT_SHADER_SOURCE_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_SHADER_SOURCE_LENGTH         = CL_SHADER_SOURCE_LENGTH,$/;"	e	enum:CL_GLDefines
CL_OBJECT_SUBTYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_SUBTYPE                      = CL_SUBTYPE,$/;"	e	enum:CL_GLDefines
CL_OBJECT_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_TYPE                         = CL_TYPE,$/;"	e	enum:CL_GLDefines
CL_OBJECT_VALIDATE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OBJECT_VALIDATE_STATUS              = CL_VALIDATE_STATUS,$/;"	e	enum:CL_GLDefines
CL_ONE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE                            = 1,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_CONSTANT_ALPHA     = 0x8004,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_CONSTANT_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_CONSTANT_COLOR     = 0x8002,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_DST_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_DST_ALPHA            = 0x0305,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_DST_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_DST_COLOR            = 0x0307,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_SRC_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_SRC_ALPHA            = 0x0303,$/;"	e	enum:CL_GLDefines
CL_ONE_MINUS_SRC_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ONE_MINUS_SRC_COLOR            = 0x0301,$/;"	e	enum:CL_GLDefines
CL_OPERAND0_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND0_ALPHA           = 0x8598,$/;"	e	enum:CL_GLDefines
CL_OPERAND0_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND0_RGB             = 0x8590,$/;"	e	enum:CL_GLDefines
CL_OPERAND1_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND1_ALPHA           = 0x8599,$/;"	e	enum:CL_GLDefines
CL_OPERAND1_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND1_RGB             = 0x8591,$/;"	e	enum:CL_GLDefines
CL_OPERAND2_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND2_ALPHA           = 0x859A,$/;"	e	enum:CL_GLDefines
CL_OPERAND2_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OPERAND2_RGB             = 0x8592,$/;"	e	enum:CL_GLDefines
CL_OR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OR                           = 0x1507,$/;"	e	enum:CL_GLDefines
CL_ORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ORDER                        = 0x0A01,$/;"	e	enum:CL_GLDefines
CL_OR_INVERTED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OR_INVERTED                  = 0x150D,$/;"	e	enum:CL_GLDefines
CL_OR_REVERSE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OR_REVERSE                   = 0x150B,$/;"	e	enum:CL_GLDefines
CL_OUT_OF_MEMORY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_OUT_OF_MEMORY                = 0x0505,$/;"	e	enum:CL_GLDefines
CL_OpenGL	/usr/include/ClanLib/GL/opengl.h	/^class CL_API_GL CL_OpenGL$/;"	c
CL_OpenGLState	/usr/include/ClanLib/GL/opengl_state.h	/^class CL_API_GL CL_OpenGLState$/;"	c
CL_OpenGLStateData	/usr/include/ClanLib/GL/opengl_state_data.h	/^class CL_OpenGLStateData$/;"	c
CL_OpenGLSurface	/usr/include/ClanLib/GL/opengl_surface.h	/^class CL_API_GL CL_OpenGLSurface : public CL_Surface$/;"	c
CL_OpenGLWindow	/usr/include/ClanLib/GL/opengl_window.h	/^class CL_API_GL CL_OpenGLWindow : public CL_DisplayWindow$/;"	c
CL_OpenGLWindowDescription	/usr/include/ClanLib/GL/opengl_window_description.h	/^class CL_API_GL CL_OpenGLWindowDescription : public CL_DisplayWindowDescription$/;"	c
CL_Origin	/usr/include/ClanLib/Core/Math/origin.h	/^enum CL_Origin$/;"	g
CL_OutlineAccuracy	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^enum CL_OutlineAccuracy$/;"	g
CL_OutlineCircle	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	CL_OutlineCircle() :$/;"	f	class:CL_OutlineCircle
CL_OutlineCircle	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^class CL_OutlineCircle$/;"	c
CL_OutlineMath	/usr/include/ClanLib/Display/Collision/outline_math.h	/^class CL_OutlineMath$/;"	c
CL_OutlineProvider	/usr/include/ClanLib/Display/Collision/outline_provider.h	/^	CL_OutlineProvider() {};$/;"	f	class:CL_OutlineProvider
CL_OutlineProvider	/usr/include/ClanLib/Display/Collision/outline_provider.h	/^class CL_OutlineProvider$/;"	c
CL_OutlineProviderBitmap	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	/^class CL_API_DISPLAY CL_OutlineProviderBitmap : public CL_OutlineProvider$/;"	c
CL_OutlineProviderFile	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	/^class CL_API_DISPLAY CL_OutlineProviderFile : public CL_OutlineProvider$/;"	c
CL_OutlineTriangulator	/usr/include/ClanLib/Core/Math/outline_triangulator.h	/^class CL_API_CORE CL_OutlineTriangulator$/;"	c
CL_OutputSource	/usr/include/ClanLib/Core/IOData/outputsource.h	/^	CL_OutputSource() { set_system_mode(); }$/;"	f	class:CL_OutputSource
CL_OutputSource	/usr/include/ClanLib/Core/IOData/outputsource.h	/^class CL_API_CORE CL_OutputSource$/;"	c
CL_OutputSourceProvider	/usr/include/ClanLib/Core/IOData/outputsource_provider.h	/^class CL_OutputSourceProvider$/;"	c
CL_OutputSource_File	/usr/include/ClanLib/Core/IOData/outputsource_file.h	/^class CL_API_CORE CL_OutputSource_File : public CL_OutputSource$/;"	c
CL_OutputSource_Memory	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	/^class CL_API_CORE CL_OutputSource_Memory : public CL_OutputSource$/;"	c
CL_OutputSource_NetPacket	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	/^class CL_API_NETWORK CL_OutputSource_NetPacket : public CL_OutputSource$/;"	c
CL_OutputSource_NetStream	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	/^	CL_OutputSource_NetStream() { netstream = 0; ref_count_netstream = false; }$/;"	f	class:CL_OutputSource_NetStream
CL_OutputSource_NetStream	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	/^class CL_API_NETWORK CL_OutputSource_NetStream : public CL_OutputSource$/;"	c
CL_OutputSource_Socket	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	/^	CL_OutputSource_Socket() { socket = 0; ref_count_socket = false; }$/;"	f	class:CL_OutputSource_Socket
CL_OutputSource_Socket	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	/^class CL_API_NETWORK CL_OutputSource_Socket : public CL_OutputSource$/;"	c
CL_OutputSource_Zipped	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	/^class CL_API_CORE CL_OutputSource_Zipped : public CL_OutputSource$/;"	c
CL_OwningPtr	/usr/include/ClanLib/Core/System/owningptr.h	/^		CL_OwningPtr() : ptr(0) {}$/;"	f	class:CL_OwningPtr
CL_OwningPtr	/usr/include/ClanLib/Core/System/owningptr.h	/^		CL_OwningPtr(T* t) : ptr(t) {}$/;"	f	class:CL_OwningPtr
CL_OwningPtr	/usr/include/ClanLib/Core/System/owningptr.h	/^		CL_OwningPtr(const CL_OwningPtr<T, U>& other) : ptr((T*)(other.ptr->clone())) {}$/;"	f	class:CL_OwningPtr
CL_OwningPtr	/usr/include/ClanLib/Core/System/owningptr.h	/^template <typename T, typename U = T> class CL_OwningPtr$/;"	c
CL_PACK_ALIGNMENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_ALIGNMENT               = 0x0D05,$/;"	e	enum:CL_GLDefines
CL_PACK_IMAGE_HEIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_IMAGE_HEIGHT            = 0x806C,$/;"	e	enum:CL_GLDefines
CL_PACK_LSB_FIRST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_LSB_FIRST               = 0x0D01,$/;"	e	enum:CL_GLDefines
CL_PACK_ROW_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_ROW_LENGTH              = 0x0D02,$/;"	e	enum:CL_GLDefines
CL_PACK_SKIP_IMAGES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_SKIP_IMAGES             = 0x806B,$/;"	e	enum:CL_GLDefines
CL_PACK_SKIP_PIXELS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_SKIP_PIXELS             = 0x0D04,$/;"	e	enum:CL_GLDefines
CL_PACK_SKIP_ROWS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_SKIP_ROWS               = 0x0D03,$/;"	e	enum:CL_GLDefines
CL_PACK_SWAP_BYTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PACK_SWAP_BYTES              = 0x0D00,$/;"	e	enum:CL_GLDefines
CL_PASS_THROUGH_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PASS_THROUGH_TOKEN           = 0x0700,$/;"	e	enum:CL_GLDefines
CL_PCXProvider	/usr/include/ClanLib/Display/Providers/pcx_provider.h	/^class CL_API_DISPLAY CL_PCXProvider : public CL_PixelBuffer$/;"	c
CL_PERSPECTIVE_CORRECTION_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PERSPECTIVE_CORRECTION_HINT  = 0x0C50,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_A_TO_A	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_A_TO_A             = 0x0C79,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_A_TO_A_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_A_TO_A_SIZE        = 0x0CB9,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_B_TO_B	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_B_TO_B             = 0x0C78,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_B_TO_B_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_B_TO_B_SIZE        = 0x0CB8,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_G_TO_G	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_G_TO_G             = 0x0C77,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_G_TO_G_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_G_TO_G_SIZE        = 0x0CB7,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_A	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_A             = 0x0C75,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_A_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_A_SIZE        = 0x0CB5,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_B	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_B             = 0x0C74,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_B_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_B_SIZE        = 0x0CB4,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_G	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_G             = 0x0C73,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_G_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_G_SIZE        = 0x0CB3,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_I	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_I             = 0x0C70,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_I_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_I_SIZE        = 0x0CB0,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_R	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_R             = 0x0C72,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_I_TO_R_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_I_TO_R_SIZE        = 0x0CB2,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_R_TO_R	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_R_TO_R             = 0x0C76,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_R_TO_R_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_R_TO_R_SIZE        = 0x0CB6,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_S_TO_S	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_S_TO_S             = 0x0C71,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MAP_S_TO_S_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MAP_S_TO_S_SIZE        = 0x0CB1,$/;"	e	enum:CL_GLDefines
CL_PIXEL_MODE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PIXEL_MODE_BIT                 = 0x00000020,$/;"	e	enum:CL_GLDefines
CL_PNGProvider	/usr/include/ClanLib/Display/Providers/png_provider.h	/^class CL_API_DISPLAY CL_PNGProvider : public CL_PixelBuffer$/;"	c
CL_POINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT                        = 0x1B00,$/;"	e	enum:CL_GLDefines
CL_POINTS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINTS                         = 0x0000,$/;"	e	enum:CL_GLDefines
CL_POINT_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_BIT                      = 0x00000002,$/;"	e	enum:CL_GLDefines
CL_POINT_DISTANCE_ATTENUATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_DISTANCE_ATTENUATION  = 0x8129,$/;"	e	enum:CL_GLDefines
CL_POINT_FADE_THRESHOLD_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_FADE_THRESHOLD_SIZE   = 0x8128,$/;"	e	enum:CL_GLDefines
CL_POINT_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SIZE                   = 0x0B11,$/;"	e	enum:CL_GLDefines
CL_POINT_SIZE_GRANULARITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SIZE_GRANULARITY       = 0x0B13,$/;"	e	enum:CL_GLDefines
CL_POINT_SIZE_MAX_ARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SIZE_MAX_ARB          = 0x8127,$/;"	e	enum:CL_GLDefines
CL_POINT_SIZE_MIN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SIZE_MIN              = 0x8126,$/;"	e	enum:CL_GLDefines
CL_POINT_SIZE_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SIZE_RANGE             = 0x0B12,$/;"	e	enum:CL_GLDefines
CL_POINT_SMOOTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SMOOTH                 = 0x0B10,$/;"	e	enum:CL_GLDefines
CL_POINT_SMOOTH_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SMOOTH_HINT            = 0x0C51,$/;"	e	enum:CL_GLDefines
CL_POINT_SPRITE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_SPRITE                        = 0x8861,$/;"	e	enum:CL_GLDefines
CL_POINT_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POINT_TOKEN                  = 0x0701,$/;"	e	enum:CL_GLDefines
CL_POLYGON	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON                        = 0x0009,$/;"	e	enum:CL_GLDefines
CL_POLYGON_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_BIT                    = 0x00000008,$/;"	e	enum:CL_GLDefines
CL_POLYGON_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_MODE                 = 0x0B40,$/;"	e	enum:CL_GLDefines
CL_POLYGON_OFFSET_FACTOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_OFFSET_FACTOR        = 0x8038,$/;"	e	enum:CL_GLDefines
CL_POLYGON_OFFSET_FILL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_OFFSET_FILL          = 0x8037,$/;"	e	enum:CL_GLDefines
CL_POLYGON_OFFSET_LINE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_OFFSET_LINE          = 0x2A02,$/;"	e	enum:CL_GLDefines
CL_POLYGON_OFFSET_POINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_OFFSET_POINT         = 0x2A01,$/;"	e	enum:CL_GLDefines
CL_POLYGON_OFFSET_UNITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_OFFSET_UNITS         = 0x2A00,$/;"	e	enum:CL_GLDefines
CL_POLYGON_SMOOTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_SMOOTH               = 0x0B41,$/;"	e	enum:CL_GLDefines
CL_POLYGON_SMOOTH_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_SMOOTH_HINT          = 0x0C53,$/;"	e	enum:CL_GLDefines
CL_POLYGON_STIPPLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_STIPPLE              = 0x0B42,$/;"	e	enum:CL_GLDefines
CL_POLYGON_STIPPLE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_STIPPLE_BIT            = 0x00000010,$/;"	e	enum:CL_GLDefines
CL_POLYGON_TOKEN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POLYGON_TOKEN                = 0x0703,$/;"	e	enum:CL_GLDefines
CL_POSITION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POSITION                     = 0x1203,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_ALPHA_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_ALPHA_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_ALPHA_SCALE= 0x80B7,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_BLUE_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_BLUE_BIAS  = 0x80BA,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_BLUE_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_COLOR_TABLE= 0x80D2,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_GREEN_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_GREEN_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_GREEN_SCALE= 0x80B5,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_RED_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_RED_BIAS   = 0x80B8,$/;"	e	enum:CL_GLDefines
CL_POST_COLOR_MATRIX_RED_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_COLOR_MATRIX_RED_SCALE  = 0x80B4,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_ALPHA_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_ALPHA_BIAS  = 0x8023,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_ALPHA_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_BLUE_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_BLUE_BIAS   = 0x8022,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_BLUE_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_BLUE_SCALE  = 0x801E,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_GREEN_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_GREEN_BIAS  = 0x8021,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_GREEN_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_GREEN_SCALE = 0x801D,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_RED_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_RED_BIAS    = 0x8020,$/;"	e	enum:CL_GLDefines
CL_POST_CONVOLUTION_RED_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_POST_CONVOLUTION_RED_SCALE   = 0x801C,$/;"	e	enum:CL_GLDefines
CL_PREVIOUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PREVIOUS                 = 0x8578,$/;"	e	enum:CL_GLDefines
CL_PRIMARY_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PRIMARY_COLOR            = 0x8577,$/;"	e	enum:CL_GLDefines
CL_PROGRAM_OBJECT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROGRAM_OBJECT                      = 0x8B40,$/;"	e	enum:CL_GLDefines
CL_PROJECTION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROJECTION                   = 0x1701,$/;"	e	enum:CL_GLDefines
CL_PROJECTION_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROJECTION_MATRIX            = 0x0BA7,$/;"	e	enum:CL_GLDefines
CL_PROJECTION_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROJECTION_STACK_DEPTH       = 0x0BA4,$/;"	e	enum:CL_GLDefines
CL_PROXY_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_COLOR_TABLE            = 0x80D3,$/;"	e	enum:CL_GLDefines
CL_PROXY_HISTOGRAM	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_HISTOGRAM              = 0x8025,$/;"	e	enum:CL_GLDefines
CL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,$/;"	e	enum:CL_GLDefines
CL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,$/;"	e	enum:CL_GLDefines
CL_PROXY_TEXTURE_1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_TEXTURE_1D             = 0x8063,$/;"	e	enum:CL_GLDefines
CL_PROXY_TEXTURE_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_TEXTURE_2D             = 0x8064,$/;"	e	enum:CL_GLDefines
CL_PROXY_TEXTURE_3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_TEXTURE_3D             = 0x8070,$/;"	e	enum:CL_GLDefines
CL_PROXY_TEXTURE_CUBE_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_PROXY_TEXTURE_CUBE_MAP     = 0x851b,$/;"	e	enum:CL_GLDefines
CL_Palette	/usr/include/ClanLib/Display/palette.h	/^	CL_Palette() { return; }$/;"	f	class:CL_Palette
CL_Palette	/usr/include/ClanLib/Display/palette.h	/^	CL_Palette(const unsigned int *copy) { memcpy(colors, copy, sizeof(int)*256); }$/;"	f	class:CL_Palette
CL_Palette	/usr/include/ClanLib/Display/palette.h	/^class CL_Palette$/;"	c
CL_PixelBuffer	/usr/include/ClanLib/Display/pixel_buffer.h	/^class CL_API_DISPLAY CL_PixelBuffer$/;"	c
CL_PixelFormat	/usr/include/ClanLib/Display/pixel_format.h	/^class CL_API_DISPLAY CL_PixelFormat$/;"	c
CL_PixelFormatType	/usr/include/ClanLib/Display/pixel_format_type.h	/^enum CL_PixelFormatType$/;"	g
CL_Point	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point()$/;"	f	class:CL_Point
CL_Point	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point(const CL_Point &p)$/;"	f	class:CL_Point
CL_Point	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point(int x, int y)$/;"	f	class:CL_Point
CL_Point	/usr/include/ClanLib/Core/Math/point.h	/^class CL_Point$/;"	c
CL_Point	/usr/include/ClanLib/Core/Math/point.h	/^inline CL_Point::CL_Point(const CL_Pointf& p)$/;"	f	class:CL_Point
CL_PointSetMath	/usr/include/ClanLib/Core/Math/pointset_math.h	/^class CL_API_CORE CL_PointSetMath$/;"	c
CL_Pointf	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf()$/;"	f	class:CL_Pointf
CL_Pointf	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf(const CL_Point& p) $/;"	f	class:CL_Pointf
CL_Pointf	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf(const CL_Pointf &p)$/;"	f	class:CL_Pointf
CL_Pointf	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf(float x, float y)$/;"	f	class:CL_Pointf
CL_Pointf	/usr/include/ClanLib/Core/Math/point.h	/^class CL_Pointf$/;"	c
CL_ProcAddress	/usr/include/ClanLib/GL/opengl.h	/^typedef void (CL_ProcAddress)();$/;"	t
CL_ProgramAttribute	/usr/include/ClanLib/GL/program_attribute.h	/^class CL_API_GL CL_ProgramAttribute$/;"	c
CL_ProgramObject	/usr/include/ClanLib/GL/program_object.h	/^class CL_API_GL CL_ProgramObject$/;"	c
CL_ProgramUniform	/usr/include/ClanLib/GL/program_uniform.h	/^class CL_API_GL CL_ProgramUniform$/;"	c
CL_ProgressBar	/usr/include/ClanLib/GUI/progressbar.h	/^	CL_ProgressBar(const CL_ProgressBar &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_ProgressBar
CL_ProgressBar	/usr/include/ClanLib/GUI/progressbar.h	/^class CL_API_GUI CL_ProgressBar : public CL_Component$/;"	c
CL_ProgressBar_Silver	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^class CL_API_GUISTYLESILVER CL_ProgressBar_Silver : public CL_ComponentStyle$/;"	c
CL_ProviderFactory	/usr/include/ClanLib/Display/Providers/provider_factory.h	/^class CL_API_DISPLAY CL_ProviderFactory$/;"	c
CL_ProviderType	/usr/include/ClanLib/Display/Providers/provider_type.h	/^class CL_API_DISPLAY CL_ProviderType$/;"	c
CL_ProviderType_Register	/usr/include/ClanLib/Display/Providers/provider_type_register.h	/^	CL_ProviderType_Register(const std::string &type) : CL_ProviderType(type)$/;"	f	class:CL_ProviderType_Register
CL_ProviderType_Register	/usr/include/ClanLib/Display/Providers/provider_type_register.h	/^class CL_ProviderType_Register : public CL_ProviderType$/;"	c
CL_Q	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_Q                            = 0x2003,$/;"	e	enum:CL_GLDefines
CL_QUADRATIC_ATTENUATION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUADRATIC_ATTENUATION        = 0x1209,$/;"	e	enum:CL_GLDefines
CL_QUADS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUADS                          = 0x0007,$/;"	e	enum:CL_GLDefines
CL_QUAD_STRIP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUAD_STRIP                     = 0x0008,$/;"	e	enum:CL_GLDefines
CL_QUERY_COUNTER_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUERY_COUNTER_BITS                  = 0x8864,$/;"	e	enum:CL_GLDefines
CL_QUERY_RESULT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUERY_RESULT                        = 0x8866,$/;"	e	enum:CL_GLDefines
CL_QUERY_RESULT_AVAILABLE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_QUERY_RESULT_AVAILABLE              = 0x8867,$/;"	e	enum:CL_GLDefines
CL_Quad	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad() { return; }$/;"	f	class:CL_Quad
CL_Quad	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad(const CL_Quad &q)$/;"	f	class:CL_Quad
CL_Quad	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad(const CL_Rect &rect)$/;"	f	class:CL_Quad
CL_Quad	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad(int new_x1, int new_y1, int new_x2, int new_y2,$/;"	f	class:CL_Quad
CL_Quad	/usr/include/ClanLib/Core/Math/quad.h	/^class CL_API_CORE CL_Quad$/;"	c
CL_R	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_R                            = 0x2002,$/;"	e	enum:CL_GLDefines
CL_R3_G3_B2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_R3_G3_B2                     = 0x2A10,$/;"	e	enum:CL_GLDefines
CL_READ_BUFFER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_READ_BUFFER                  = 0x0C02,$/;"	e	enum:CL_GLDefines
CL_READ_ONLY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_READ_ONLY                           = 0x88B8,$/;"	e	enum:CL_GLDefines
CL_READ_WRITE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_READ_WRITE                          = 0x88BA,$/;"	e	enum:CL_GLDefines
CL_RED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RED                          = 0x1903,$/;"	e	enum:CL_GLDefines
CL_REDUCE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_REDUCE                       = 0x8016,$/;"	e	enum:CL_GLDefines
CL_RED_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RED_BIAS                     = 0x0D15,$/;"	e	enum:CL_GLDefines
CL_RED_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RED_BITS                     = 0x0D52,$/;"	e	enum:CL_GLDefines
CL_RED_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RED_SCALE                    = 0x0D14,$/;"	e	enum:CL_GLDefines
CL_REFLECTION_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_REFLECTION_MAP             = 0x8512,$/;"	e	enum:CL_GLDefines
CL_RENDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RENDER                       = 0x1C00,$/;"	e	enum:CL_GLDefines
CL_RENDERER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RENDERER                     = 0x1F01,$/;"	e	enum:CL_GLDefines
CL_RENDER_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RENDER_MODE                  = 0x0C40,$/;"	e	enum:CL_GLDefines
CL_REPEAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_REPEAT                       = 0x2901,$/;"	e	enum:CL_GLDefines
CL_REPLACE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_REPLACE                      = 0x1E01,$/;"	e	enum:CL_GLDefines
CL_REPLICATE_BORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_REPLICATE_BORDER             = 0x8153,$/;"	e	enum:CL_GLDefines
CL_RESCALE_NORMAL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RESCALE_NORMAL               = 0x803A,$/;"	e	enum:CL_GLDefines
CL_RETURN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RETURN                         = 0x0102,$/;"	e	enum:CL_GLDefines
CL_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB                          = 0x1907,$/;"	e	enum:CL_GLDefines
CL_RGB10	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB10                        = 0x8052,$/;"	e	enum:CL_GLDefines
CL_RGB10_A2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB10_A2                     = 0x8059,$/;"	e	enum:CL_GLDefines
CL_RGB12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB12                        = 0x8053,$/;"	e	enum:CL_GLDefines
CL_RGB16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB16                        = 0x8054,$/;"	e	enum:CL_GLDefines
CL_RGB4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB4                         = 0x804F,$/;"	e	enum:CL_GLDefines
CL_RGB5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB5                         = 0x8050,$/;"	e	enum:CL_GLDefines
CL_RGB5_A1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB5_A1                      = 0x8057,$/;"	e	enum:CL_GLDefines
CL_RGB8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB8                         = 0x8051,$/;"	e	enum:CL_GLDefines
CL_RGBA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA                         = 0x1908,$/;"	e	enum:CL_GLDefines
CL_RGBA12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA12                       = 0x805A,$/;"	e	enum:CL_GLDefines
CL_RGBA16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA16                       = 0x805B,$/;"	e	enum:CL_GLDefines
CL_RGBA2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA2                        = 0x8055,$/;"	e	enum:CL_GLDefines
CL_RGBA4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA4                        = 0x8056,$/;"	e	enum:CL_GLDefines
CL_RGBA8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA8                        = 0x8058,$/;"	e	enum:CL_GLDefines
CL_RGBA_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGBA_MODE                    = 0x0C31,$/;"	e	enum:CL_GLDefines
CL_RGB_SCALE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RGB_SCALE                = 0x8573,$/;"	e	enum:CL_GLDefines
CL_RIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_RIGHT                          = 0x0407,$/;"	e	enum:CL_GLDefines
CL_RLESurface	/usr/include/ClanLib/Display/rle_surface.h	/^class CL_API_DISPLAY CL_RLESurface$/;"	c
CL_RadioButton	/usr/include/ClanLib/GUI/radiobutton.h	/^	CL_RadioButton(const CL_RadioButton &copy) : CL_Button(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_RadioButton
CL_RadioButton	/usr/include/ClanLib/GUI/radiobutton.h	/^class CL_API_GUI CL_RadioButton : public CL_Button$/;"	c
CL_RadioButton_Silver	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^class CL_API_GUISTYLESILVER CL_RadioButton_Silver : public CL_ComponentStyle$/;"	c
CL_RadioGroup	/usr/include/ClanLib/GUI/radiogroup.h	/^	CL_RadioGroup(const CL_RadioGroup &copy) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_RadioGroup
CL_RadioGroup	/usr/include/ClanLib/GUI/radiogroup.h	/^class CL_API_GUI CL_RadioGroup$/;"	c
CL_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	CL_Raw(const std::string &res_id, CL_ResourceManager *resources)$/;"	f	class:CL_Raw
CL_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^class CL_Raw$/;"	c
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect() { left = right = top = bottom = 0; }$/;"	f	class:CL_Rect
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect(const CL_Point &p, const CL_Size &size)$/;"	f	class:CL_Rect
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect(const CL_Rect &rect)$/;"	f	class:CL_Rect
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect(int new_left, int new_top, int new_right, int new_bottom)$/;"	f	class:CL_Rect
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^class CL_API_CORE CL_Rect$/;"	c
CL_Rect	/usr/include/ClanLib/Core/Math/rect.h	/^inline CL_Rect::CL_Rect(const CL_Rectf& rect)$/;"	f	class:CL_Rect
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf() { left = right = top = bottom = 0.0f; }$/;"	f	class:CL_Rectf
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf(const CL_Pointf &p, const CL_Sizef &size)$/;"	f	class:CL_Rectf
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf(const CL_Rect& rect)$/;"	f	class:CL_Rectf
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf(const CL_Rectf &rect)$/;"	f	class:CL_Rectf
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf(float new_left, float new_top, float new_right, float new_bottom)$/;"	f	class:CL_Rectf
CL_Rectf	/usr/include/ClanLib/Core/Math/rect.h	/^class CL_Rectf$/;"	c
CL_Resource	/usr/include/ClanLib/Core/Resources/resource.h	/^class CL_API_CORE CL_Resource$/;"	c
CL_ResourceData	/usr/include/ClanLib/Core/Resources/resourcedata.h	/^class CL_API_CORE CL_ResourceData$/;"	c
CL_ResourceData_Boolean	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^class CL_API_CORE CL_ResourceData_Boolean : public CL_ResourceData$/;"	c
CL_ResourceData_Float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^class CL_API_CORE CL_ResourceData_Float : public CL_ResourceData$/;"	c
CL_ResourceData_Integer	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^class CL_API_CORE CL_ResourceData_Integer : public CL_ResourceData$/;"	c
CL_ResourceData_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^class CL_API_CORE CL_ResourceData_Raw : public CL_ResourceData$/;"	c
CL_ResourceData_String	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	/^class CL_API_CORE CL_ResourceData_String : public CL_ResourceData$/;"	c
CL_ResourceManager	/usr/include/ClanLib/Core/Resources/resource_manager.h	/^class CL_API_CORE CL_ResourceManager$/;"	c
CL_RichEdit	/usr/include/ClanLib/GUI/richedit.h	/^	CL_RichEdit(const CL_RichEdit &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_RichEdit
CL_RichEdit	/usr/include/ClanLib/GUI/richedit.h	/^class CL_API_GUI CL_RichEdit : public CL_Component$/;"	c
CL_RichEdit_Paragraph	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^class CL_API_GUI CL_RichEdit_Paragraph$/;"	c
CL_RichEdit_Silver	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^class CL_API_GUISTYLESILVER CL_RichEdit_Silver : public CL_ComponentStyle$/;"	c
CL_Runnable	/usr/include/ClanLib/Core/System/thread.h	/^class CL_Runnable$/;"	c
CL_S	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_S                            = 0x2000,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_1D                          = 0x8B5D,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_1D_SHADOW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_1D_SHADOW                   = 0x8B61,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_2D                          = 0x8B5E,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_2D_RECT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_2D_RECT                     = 0x8B63,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_2D_RECT_SHADOW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_2D_RECT_SHADOW              = 0x8B64,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_2D_SHADOW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_2D_SHADOW                   = 0x8B62,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_3D                          = 0x8B5F,$/;"	e	enum:CL_GLDefines
CL_SAMPLER_CUBE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLER_CUBE                        = 0x8B60,$/;"	e	enum:CL_GLDefines
CL_SAMPLES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLES                    = 0x80a9,$/;"	e	enum:CL_GLDefines
CL_SAMPLES_PASSED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLES_PASSED                      = 0x8914,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_ALPHA_TO_COVERAGE   = 0x809e,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_ALPHA_TO_ONE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_ALPHA_TO_ONE        = 0x809f,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_BUFFERS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_BUFFERS             = 0x80a8,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_COVERAGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_COVERAGE            = 0x80a0,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_COVERAGE_INVERT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_COVERAGE_INVERT     = 0x80ab,$/;"	e	enum:CL_GLDefines
CL_SAMPLE_COVERAGE_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SAMPLE_COVERAGE_VALUE      = 0x80aa,$/;"	e	enum:CL_GLDefines
CL_SCISSOR_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SCISSOR_BIT                    = 0x00080000,$/;"	e	enum:CL_GLDefines
CL_SCISSOR_BOX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SCISSOR_BOX                  = 0x0C10,$/;"	e	enum:CL_GLDefines
CL_SCISSOR_TEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SCISSOR_TEST                 = 0x0C11,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY       = 0x845e,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY_POINTER = 0x845d,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY_SIZE  = 0x845a,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845c,$/;"	e	enum:CL_GLDefines
CL_SECONDARY_COLOR_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SECONDARY_COLOR_ARRAY_TYPE  = 0x845b,$/;"	e	enum:CL_GLDefines
CL_SELECT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SELECT                       = 0x1C02,$/;"	e	enum:CL_GLDefines
CL_SELECTION_BUFFER_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SELECTION_BUFFER_POINTER     = 0x0DF3,$/;"	e	enum:CL_GLDefines
CL_SELECTION_BUFFER_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SELECTION_BUFFER_SIZE        = 0x0DF4,$/;"	e	enum:CL_GLDefines
CL_SEPARABLE_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SEPARABLE_2D                 = 0x8012,$/;"	e	enum:CL_GLDefines
CL_SEPARATE_SPECULAR_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SEPARATE_SPECULAR_COLOR      = 0x81FA,$/;"	e	enum:CL_GLDefines
CL_SET	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SET                          = 0x150F,$/;"	e	enum:CL_GLDefines
CL_SHADER_OBJECT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SHADER_OBJECT                       = 0x8B48,$/;"	e	enum:CL_GLDefines
CL_SHADER_SOURCE_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SHADER_SOURCE_LENGTH                = 0x8B88,$/;"	e	enum:CL_GLDefines
CL_SHADE_MODEL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SHADE_MODEL                  = 0x0B54,$/;"	e	enum:CL_GLDefines
CL_SHININESS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SHININESS                    = 0x1601,$/;"	e	enum:CL_GLDefines
CL_SHORT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SHORT                          = 0x1402,$/;"	e	enum:CL_GLDefines
CL_SINGLE_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SINGLE_COLOR                 = 0x81F9,$/;"	e	enum:CL_GLDefines
CL_SMOOTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SMOOTH                       = 0x1D01,$/;"	e	enum:CL_GLDefines
CL_SMOOTH_LINE_WIDTH_GRANULARITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SMOOTH_LINE_WIDTH_GRANULARITY= 0x0B23,$/;"	e	enum:CL_GLDefines
CL_SMOOTH_LINE_WIDTH_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SMOOTH_LINE_WIDTH_RANGE      = 0x0B22,$/;"	e	enum:CL_GLDefines
CL_SMOOTH_POINT_SIZE_GRANULARITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SMOOTH_POINT_SIZE_GRANULARITY= 0x0B13,$/;"	e	enum:CL_GLDefines
CL_SMOOTH_POINT_SIZE_RANGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SMOOTH_POINT_SIZE_RANGE      = 0x0B12,$/;"	e	enum:CL_GLDefines
CL_SOURCE0_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE0_ALPHA            = 0x8588,$/;"	e	enum:CL_GLDefines
CL_SOURCE0_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE0_RGB              = 0x8580,$/;"	e	enum:CL_GLDefines
CL_SOURCE1_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE1_ALPHA            = 0x8589,$/;"	e	enum:CL_GLDefines
CL_SOURCE1_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE1_RGB              = 0x8581,$/;"	e	enum:CL_GLDefines
CL_SOURCE2_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE2_ALPHA            = 0x858A,$/;"	e	enum:CL_GLDefines
CL_SOURCE2_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SOURCE2_RGB              = 0x8582,$/;"	e	enum:CL_GLDefines
CL_SPECULAR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SPECULAR                     = 0x1202,$/;"	e	enum:CL_GLDefines
CL_SPHERE_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SPHERE_MAP                   = 0x2402,$/;"	e	enum:CL_GLDefines
CL_SPOT_CUTOFF	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SPOT_CUTOFF                  = 0x1206,$/;"	e	enum:CL_GLDefines
CL_SPOT_DIRECTION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SPOT_DIRECTION               = 0x1204,$/;"	e	enum:CL_GLDefines
CL_SPOT_EXPONENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SPOT_EXPONENT                = 0x1205,$/;"	e	enum:CL_GLDefines
CL_SRC0_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC0_ALPHA               = CL_SOURCE0_ALPHA,$/;"	e	enum:CL_GLDefines
CL_SRC0_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC0_RGB                 = CL_SOURCE0_RGB,$/;"	e	enum:CL_GLDefines
CL_SRC1_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC1_ALPHA               = CL_SOURCE1_ALPHA,$/;"	e	enum:CL_GLDefines
CL_SRC1_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC1_RGB                 = CL_SOURCE1_RGB,$/;"	e	enum:CL_GLDefines
CL_SRC2_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC2_ALPHA               = CL_SOURCE2_ALPHA,$/;"	e	enum:CL_GLDefines
CL_SRC2_RGB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC2_RGB                 = CL_SOURCE2_RGB,$/;"	e	enum:CL_GLDefines
CL_SRC_ALPHA	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC_ALPHA                      = 0x0302,$/;"	e	enum:CL_GLDefines
CL_SRC_ALPHA_SATURATE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC_ALPHA_SATURATE             = 0x0308,$/;"	e	enum:CL_GLDefines
CL_SRC_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SRC_COLOR                      = 0x0300,$/;"	e	enum:CL_GLDefines
CL_STACK_OVERFLOW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STACK_OVERFLOW               = 0x0503,$/;"	e	enum:CL_GLDefines
CL_STACK_UNDERFLOW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STACK_UNDERFLOW              = 0x0504,$/;"	e	enum:CL_GLDefines
CL_STATIC_COPY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STATIC_COPY                         = 0x88E6,$/;"	e	enum:CL_GLDefines
CL_STATIC_DRAW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STATIC_DRAW                         = 0x88E4,$/;"	e	enum:CL_GLDefines
CL_STATIC_READ	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STATIC_READ                         = 0x88E5,$/;"	e	enum:CL_GLDefines
CL_STENCIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL                      = 0x1802,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BACK_FAIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BACK_FAIL                   = 0x8801,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BACK_FUNC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BACK_FUNC                   = 0x8800,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BACK_PASS_DEPTH_FAIL        = 0x8802,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BACK_PASS_DEPTH_PASS        = 0x8803,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BITS                 = 0x0D57,$/;"	e	enum:CL_GLDefines
CL_STENCIL_BUFFER_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_BUFFER_BIT             = 0x00000400,$/;"	e	enum:CL_GLDefines
CL_STENCIL_CLEAR_VALUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_CLEAR_VALUE          = 0x0B91,$/;"	e	enum:CL_GLDefines
CL_STENCIL_FAIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_FAIL                 = 0x0B94,$/;"	e	enum:CL_GLDefines
CL_STENCIL_FUNC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_FUNC                 = 0x0B92,$/;"	e	enum:CL_GLDefines
CL_STENCIL_INDEX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_INDEX                = 0x1901,$/;"	e	enum:CL_GLDefines
CL_STENCIL_PASS_DEPTH_FAIL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_PASS_DEPTH_FAIL      = 0x0B95,$/;"	e	enum:CL_GLDefines
CL_STENCIL_PASS_DEPTH_PASS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_PASS_DEPTH_PASS      = 0x0B96,$/;"	e	enum:CL_GLDefines
CL_STENCIL_REF	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_REF                  = 0x0B97,$/;"	e	enum:CL_GLDefines
CL_STENCIL_TEST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_TEST                 = 0x0B90,$/;"	e	enum:CL_GLDefines
CL_STENCIL_TEST_TWO_SIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_TEST_TWO_SIDE               = 0x8910,$/;"	e	enum:CL_GLDefines
CL_STENCIL_VALUE_MASK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_VALUE_MASK           = 0x0B93,$/;"	e	enum:CL_GLDefines
CL_STENCIL_WRITEMASK	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STENCIL_WRITEMASK            = 0x0B98,$/;"	e	enum:CL_GLDefines
CL_STEREO	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STEREO                       = 0x0C33,$/;"	e	enum:CL_GLDefines
CL_STREAM_COPY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STREAM_COPY                         = 0x88E2,$/;"	e	enum:CL_GLDefines
CL_STREAM_DRAW	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STREAM_DRAW                         = 0x88E0,$/;"	e	enum:CL_GLDefines
CL_STREAM_READ	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_STREAM_READ                         = 0x88E1,$/;"	e	enum:CL_GLDefines
CL_SUBPIXEL_BITS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SUBPIXEL_BITS                = 0x0D50,$/;"	e	enum:CL_GLDefines
CL_SUBTRACT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SUBTRACT                   = 0x84e7,$/;"	e	enum:CL_GLDefines
CL_SUBTYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_SUBTYPE                             = 0x8B4F,$/;"	e	enum:CL_GLDefines
CL_ScrollBar	/usr/include/ClanLib/GUI/scrollbar.h	/^	CL_ScrollBar(const CL_ScrollBar &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_ScrollBar
CL_ScrollBar	/usr/include/ClanLib/GUI/scrollbar.h	/^class CL_API_GUI CL_ScrollBar : public CL_Component$/;"	c
CL_ScrollBar_Silver	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^class CL_API_GUISTYLESILVER CL_ScrollBar_Silver : public CL_ComponentStyle$/;"	c
CL_SetupCore	/usr/include/ClanLib/Core/System/setupcore.h	/^class CL_API_CORE CL_SetupCore$/;"	c
CL_SetupDisplay	/usr/include/ClanLib/Display/setupdisplay.h	/^class CL_API_DISPLAY CL_SetupDisplay$/;"	c
CL_SetupGL	/usr/include/ClanLib/GL/setupgl.h	/^class CL_API_GL CL_SetupGL$/;"	c
CL_SetupGUI	/usr/include/ClanLib/GUI/setupgui.h	/^class CL_API_GUI CL_SetupGUI$/;"	c
CL_SetupMikMod	/usr/include/ClanLib/MikMod/setupmikmod.h	/^class CL_API_MIKMOD CL_SetupMikMod$/;"	c
CL_SetupNetwork	/usr/include/ClanLib/Network/setupnetwork.h	/^class CL_API_NETWORK CL_SetupNetwork$/;"	c
CL_SetupSDL	/usr/include/ClanLib/SDL/setupsdl.h	/^class CL_API_SDL CL_SetupSDL$/;"	c
CL_SetupSound	/usr/include/ClanLib/Sound/setupsound.h	/^class CL_API_SOUND CL_SetupSound$/;"	c
CL_SetupVorbis	/usr/include/ClanLib/Vorbis/setupvorbis.h	/^class CL_API_VORBIS CL_SetupVorbis$/;"	c
CL_ShaderObject	/usr/include/ClanLib/GL/shader_object.h	/^class CL_API_GL CL_ShaderObject$/;"	c
CL_ShaderType	/usr/include/ClanLib/GL/shader_object.h	/^enum CL_ShaderType$/;"	g
CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr() : impl(0) { return; }$/;"	f	class:CL_SharedPtr
CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr(const CL_SharedPtr<T, U>& other) : impl(other.impl) { increment(); }$/;"	f	class:CL_SharedPtr
CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	explicit CL_SharedPtr(CL_SharedPtr_Generic<T> *impl) : impl(impl) { increment(); }$/;"	f	class:CL_SharedPtr
CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	explicit CL_SharedPtr(D* ptr) : impl(new CL_SharedPtr_Deleter<T, D>(ptr)) { return; }$/;"	f	class:CL_SharedPtr
CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^class CL_SharedPtr$/;"	c
CL_SharedPtr_Deleter	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr_Deleter(TEvil *e) { this->ptr = e; }$/;"	f	class:CL_SharedPtr_Deleter
CL_SharedPtr_Deleter	/usr/include/ClanLib/Core/System/sharedptr.h	/^class CL_SharedPtr_Deleter : public CL_SharedPtr_Generic<T>$/;"	c
CL_SharedPtr_Generic	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr_Generic() : ptr(0), ref_count(1) { return; }$/;"	f	class:CL_SharedPtr_Generic
CL_SharedPtr_Generic	/usr/include/ClanLib/Core/System/sharedptr.h	/^class CL_SharedPtr_Generic$/;"	c
CL_Signal	/usr/include/ClanLib/Signals/signal.h	/^class CL_Signal$/;"	c
CL_Signal_v0	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Signal_v0() : impl(new CL_Signal_v0_Generic(this))$/;"	f	class:CL_Signal_v0
CL_Signal_v0	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Signal_v0(const CL_Signal_v0 &copy) : CL_Signal(copy), impl(new CL_Signal_v0_Generic(this))$/;"	f	class:CL_Signal_v0
CL_Signal_v0	/usr/include/ClanLib/Signals/signal_v0.h	/^class CL_Signal_v0 : public CL_Signal$/;"	c
CL_Signal_v0_Generic	/usr/include/ClanLib/Signals/signal_v0.h	/^		CL_Signal_v0_Generic(CL_Signal_v0 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v0::CL_Signal_v0_Generic
CL_Signal_v0_Generic	/usr/include/ClanLib/Signals/signal_v0.h	/^	class CL_Signal_v0_Generic$/;"	c	class:CL_Signal_v0
CL_Signal_v1	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Signal_v1() : impl(new CL_Signal_v1_Generic(this))$/;"	f	class:CL_Signal_v1
CL_Signal_v1	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Signal_v1(const CL_Signal_v1 &copy) : CL_Signal(copy), impl(new CL_Signal_v1_Generic(this))$/;"	f	class:CL_Signal_v1
CL_Signal_v1	/usr/include/ClanLib/Signals/signal_v1.h	/^class CL_Signal_v1 : public CL_Signal$/;"	c
CL_Signal_v1_Generic	/usr/include/ClanLib/Signals/signal_v1.h	/^		CL_Signal_v1_Generic(CL_Signal_v1 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v1::CL_Signal_v1_Generic
CL_Signal_v1_Generic	/usr/include/ClanLib/Signals/signal_v1.h	/^	class CL_Signal_v1_Generic$/;"	c	class:CL_Signal_v1
CL_Signal_v2	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Signal_v2() : impl(new CL_Signal_v2_Generic(this))$/;"	f	class:CL_Signal_v2
CL_Signal_v2	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Signal_v2(const CL_Signal_v2 &copy) : CL_Signal(copy), impl(new CL_Signal_v2_Generic(this))$/;"	f	class:CL_Signal_v2
CL_Signal_v2	/usr/include/ClanLib/Signals/signal_v2.h	/^class CL_Signal_v2 : public CL_Signal$/;"	c
CL_Signal_v2_Generic	/usr/include/ClanLib/Signals/signal_v2.h	/^		CL_Signal_v2_Generic(CL_Signal_v2 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v2::CL_Signal_v2_Generic
CL_Signal_v2_Generic	/usr/include/ClanLib/Signals/signal_v2.h	/^	class CL_Signal_v2_Generic$/;"	c	class:CL_Signal_v2
CL_Signal_v3	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Signal_v3() : impl(new CL_Signal_v3_Generic(this))$/;"	f	class:CL_Signal_v3
CL_Signal_v3	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Signal_v3(const CL_Signal_v3 &copy) : CL_Signal(copy), impl(new CL_Signal_v3_Generic(this))$/;"	f	class:CL_Signal_v3
CL_Signal_v3	/usr/include/ClanLib/Signals/signal_v3.h	/^class CL_Signal_v3 : public CL_Signal$/;"	c
CL_Signal_v3_Generic	/usr/include/ClanLib/Signals/signal_v3.h	/^		CL_Signal_v3_Generic(CL_Signal_v3 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v3::CL_Signal_v3_Generic
CL_Signal_v3_Generic	/usr/include/ClanLib/Signals/signal_v3.h	/^	class CL_Signal_v3_Generic$/;"	c	class:CL_Signal_v3
CL_Signal_v4	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Signal_v4() : impl(new CL_Signal_v4_Generic(this))$/;"	f	class:CL_Signal_v4
CL_Signal_v4	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Signal_v4(const CL_Signal_v4 &copy) : CL_Signal(copy), impl(new CL_Signal_v4_Generic(this))$/;"	f	class:CL_Signal_v4
CL_Signal_v4	/usr/include/ClanLib/Signals/signal_v4.h	/^class CL_Signal_v4 : public CL_Signal$/;"	c
CL_Signal_v4_Generic	/usr/include/ClanLib/Signals/signal_v4.h	/^		CL_Signal_v4_Generic(CL_Signal_v4 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v4::CL_Signal_v4_Generic
CL_Signal_v4_Generic	/usr/include/ClanLib/Signals/signal_v4.h	/^	class CL_Signal_v4_Generic$/;"	c	class:CL_Signal_v4
CL_Signal_v5	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Signal_v5() : impl(new CL_Signal_v5_Generic(this))$/;"	f	class:CL_Signal_v5
CL_Signal_v5	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Signal_v5(const CL_Signal_v5 &copy) : CL_Signal(copy), impl(new CL_Signal_v5_Generic(this))$/;"	f	class:CL_Signal_v5
CL_Signal_v5	/usr/include/ClanLib/Signals/signal_v5.h	/^class CL_Signal_v5 : public CL_Signal$/;"	c
CL_Signal_v5_Generic	/usr/include/ClanLib/Signals/signal_v5.h	/^		CL_Signal_v5_Generic(CL_Signal_v5 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }$/;"	f	class:CL_Signal_v5::CL_Signal_v5_Generic
CL_Signal_v5_Generic	/usr/include/ClanLib/Signals/signal_v5.h	/^	class CL_Signal_v5_Generic$/;"	c	class:CL_Signal_v5
CL_Size	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size() { return; }$/;"	f	class:CL_Size
CL_Size	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size(const CL_Size &s)$/;"	f	class:CL_Size
CL_Size	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size(int width, int height)$/;"	f	class:CL_Size
CL_Size	/usr/include/ClanLib/Core/Math/size.h	/^class CL_Size$/;"	c
CL_Size	/usr/include/ClanLib/Core/Math/size.h	/^inline CL_Size::CL_Size(const CL_Sizef& s)$/;"	f	class:CL_Size
CL_Sizef	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef() { return; }$/;"	f	class:CL_Sizef
CL_Sizef	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef(const CL_Size& s) $/;"	f	class:CL_Sizef
CL_Sizef	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef(const CL_Sizef &s)$/;"	f	class:CL_Sizef
CL_Sizef	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef(float width, float height)$/;"	f	class:CL_Sizef
CL_Sizef	/usr/include/ClanLib/Core/Math/size.h	/^class CL_Sizef$/;"	c
CL_Slot	/usr/include/ClanLib/Signals/slot.h	/^class CL_API_SIGNALS CL_Slot$/;"	c
CL_SlotBuffer_v0	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	CL_SlotBuffer_v0() : count(0)$/;"	f	class:CL_SlotBuffer_v0
CL_SlotBuffer_v0	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	CL_SlotBuffer_v0(CL_Signal_v0 &signal) : count(0)$/;"	f	class:CL_SlotBuffer_v0
CL_SlotBuffer_v0	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^class CL_SlotBuffer_v0$/;"	c
CL_SlotBuffer_v1	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	CL_SlotBuffer_v1()$/;"	f	class:CL_SlotBuffer_v1
CL_SlotBuffer_v1	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	CL_SlotBuffer_v1(CL_Signal_v1<PARAM1> &signal)$/;"	f	class:CL_SlotBuffer_v1
CL_SlotBuffer_v1	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^class CL_SlotBuffer_v1$/;"	c
CL_SlotContainer	/usr/include/ClanLib/Signals/slot_container.h	/^class CL_SlotContainer$/;"	c
CL_SlotParent_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_SlotParent_v0(const SlotIterator &pos, const SlotIterator &end)$/;"	f	class:CL_SlotParent_v0
CL_SlotParent_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_SlotParent_v0$/;"	c
CL_Slot_Generic	/usr/include/ClanLib/Signals/slot_generic.h	/^class CL_API_SIGNALS CL_Slot_Generic$/;"	c
CL_Slot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_Slot_v0 : public CL_Slot_Generic$/;"	c
CL_Slot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_Slot_v1 : public CL_Slot_Generic$/;"	c
CL_Slot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^class CL_Slot_v2 : public CL_Slot_Generic$/;"	c
CL_Slot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^class CL_Slot_v3 : public CL_Slot_Generic$/;"	c
CL_Slot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^class CL_Slot_v4 : public CL_Slot_Generic$/;"	c
CL_Slot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^class CL_Slot_v5 : public CL_Slot_Generic$/;"	c
CL_Socket	/usr/include/ClanLib/Network/Socket/socket.h	/^class CL_API_NETWORK CL_Socket$/;"	c
CL_Sound	/usr/include/ClanLib/Sound/sound.h	/^class CL_API_SOUND CL_Sound$/;"	c
CL_SoundBuffer	/usr/include/ClanLib/Sound/soundbuffer.h	/^class CL_API_SOUND CL_SoundBuffer$/;"	c
CL_SoundBuffer_Session	/usr/include/ClanLib/Sound/soundbuffer_session.h	/^class CL_API_SOUND CL_SoundBuffer_Session$/;"	c
CL_SoundFilter	/usr/include/ClanLib/Sound/soundfilter.h	/^class CL_API_SOUND CL_SoundFilter$/;"	c
CL_SoundFormat	/usr/include/ClanLib/Sound/soundformat.h	/^enum CL_SoundFormat$/;"	g
CL_SoundOutput	/usr/include/ClanLib/Sound/soundoutput.h	/^class CL_API_SOUND CL_SoundOutput$/;"	c
CL_SoundOutput_Description	/usr/include/ClanLib/Sound/soundoutput_description.h	/^class CL_API_SOUND CL_SoundOutput_Description$/;"	c
CL_SoundProvider	/usr/include/ClanLib/Sound/soundprovider.h	/^class CL_API_SOUND CL_SoundProvider$/;"	c
CL_SoundProviderFactory	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	/^class CL_API_SOUND CL_SoundProviderFactory$/;"	c
CL_SoundProviderType	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type.h	/^class CL_API_SOUND CL_SoundProviderType$/;"	c
CL_SoundProviderType_Register	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type_register.h	/^	CL_SoundProviderType_Register(const std::string &type) : CL_SoundProviderType(type)$/;"	f	class:CL_SoundProviderType_Register
CL_SoundProviderType_Register	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type_register.h	/^class CL_SoundProviderType_Register : public CL_SoundProviderType$/;"	c
CL_SoundProvider_MikMod	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	/^class CL_API_MIKMOD CL_SoundProvider_MikMod : public CL_SoundProvider$/;"	c
CL_SoundProvider_Raw	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	/^class CL_API_SOUND CL_SoundProvider_Raw : public CL_SoundProvider$/;"	c
CL_SoundProvider_Recorder	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	/^class CL_API_SOUND CL_SoundProvider_Recorder : public CL_SoundProvider$/;"	c
CL_SoundProvider_Session	/usr/include/ClanLib/Sound/soundprovider_session.h	/^class CL_API_SOUND CL_SoundProvider_Session$/;"	c
CL_SoundProvider_Vorbis	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	/^class CL_API_VORBIS CL_SoundProvider_Vorbis : public CL_SoundProvider$/;"	c
CL_SoundProvider_Wave	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	/^class CL_API_SOUND CL_SoundProvider_Wave : public CL_SoundProvider$/;"	c
CL_Sprite	/usr/include/ClanLib/Display/sprite.h	/^class CL_API_DISPLAY CL_Sprite$/;"	c
CL_SpriteDescription	/usr/include/ClanLib/Display/sprite_description.h	/^class CL_API_DISPLAY CL_SpriteDescription$/;"	c
CL_SpritePacker	/usr/include/ClanLib/Display/sprite_packer.h	/^class CL_API_DISPLAY CL_SpritePacker$/;"	c
CL_StencilFunc	/usr/include/ClanLib/Display/stencil_func.h	/^enum CL_StencilFunc$/;"	g
CL_StencilOp	/usr/include/ClanLib/Display/stencil_func.h	/^enum CL_StencilOp$/;"	g
CL_String	/usr/include/ClanLib/Core/System/clanstring.h	/^	CL_String() {;}$/;"	f	class:CL_String
CL_String	/usr/include/ClanLib/Core/System/clanstring.h	/^class CL_API_CORE CL_String$/;"	c
CL_StyleManager	/usr/include/ClanLib/GUI/stylemanager.h	/^	CL_StyleManager(const CL_StyleManager &copy) { return; }$/;"	f	class:CL_StyleManager
CL_StyleManager	/usr/include/ClanLib/GUI/stylemanager.h	/^class CL_API_GUI CL_StyleManager$/;"	c
CL_StyleManager_Silver	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	/^	CL_StyleManager_Silver(const CL_StyleManager_Silver &copy) : CL_StyleManager(0) { return; }$/;"	f	class:CL_StyleManager_Silver
CL_StyleManager_Silver	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	/^class CL_API_GUISTYLESILVER CL_StyleManager_Silver : public CL_StyleManager$/;"	c
CL_Surface	/usr/include/ClanLib/Display/surface.h	/^class CL_API_DISPLAY CL_Surface$/;"	c
CL_Surface_DrawParams1	/usr/include/ClanLib/Display/surface.h	/^		CL_Surface_DrawParams1()$/;"	f	struct:CL_Surface_DrawParams1
CL_Surface_DrawParams1	/usr/include/ClanLib/Display/surface.h	/^struct CL_Surface_DrawParams1$/;"	s
CL_Surface_DrawParams2	/usr/include/ClanLib/Display/surface.h	/^	CL_Surface_DrawParams2()$/;"	f	struct:CL_Surface_DrawParams2
CL_Surface_DrawParams2	/usr/include/ClanLib/Display/surface.h	/^struct CL_Surface_DrawParams2$/;"	s
CL_System	/usr/include/ClanLib/Core/System/system.h	/^class CL_API_CORE CL_System$/;"	c
CL_T	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T                            = 0x2001,$/;"	e	enum:CL_GLDefines
CL_T2F_C3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T2F_C3F_V3F                  = 0x2A2A,$/;"	e	enum:CL_GLDefines
CL_T2F_C4F_N3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T2F_C4F_N3F_V3F              = 0x2A2C,$/;"	e	enum:CL_GLDefines
CL_T2F_C4UB_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T2F_C4UB_V3F                 = 0x2A29,$/;"	e	enum:CL_GLDefines
CL_T2F_N3F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T2F_N3F_V3F                  = 0x2A2B,$/;"	e	enum:CL_GLDefines
CL_T2F_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T2F_V3F                      = 0x2A27,$/;"	e	enum:CL_GLDefines
CL_T4F_C4F_N3F_V4F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T4F_C4F_N3F_V4F              = 0x2A2D,$/;"	e	enum:CL_GLDefines
CL_T4F_V4F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_T4F_V4F                      = 0x2A28,$/;"	e	enum:CL_GLDefines
CL_TABLE_TOO_LARGE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TABLE_TOO_LARGE              = 0x8031,$/;"	e	enum:CL_GLDefines
CL_TEXTURE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE                      = 0x1702,$/;"	e	enum:CL_GLDefines
CL_TEXTURE0	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE0                 = 0x84C0,$/;"	e	enum:CL_GLDefines
CL_TEXTURE1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE1                 = 0x84C1,$/;"	e	enum:CL_GLDefines
CL_TEXTURE10	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE10                = 0x84CA,$/;"	e	enum:CL_GLDefines
CL_TEXTURE11	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE11                = 0x84CB,$/;"	e	enum:CL_GLDefines
CL_TEXTURE12	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE12                = 0x84CC,$/;"	e	enum:CL_GLDefines
CL_TEXTURE13	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE13                = 0x84CD,$/;"	e	enum:CL_GLDefines
CL_TEXTURE14	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE14                = 0x84CE,$/;"	e	enum:CL_GLDefines
CL_TEXTURE15	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE15                = 0x84CF,$/;"	e	enum:CL_GLDefines
CL_TEXTURE16	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE16                = 0x84D0,$/;"	e	enum:CL_GLDefines
CL_TEXTURE17	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE17                = 0x84D1,$/;"	e	enum:CL_GLDefines
CL_TEXTURE18	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE18                = 0x84D2,$/;"	e	enum:CL_GLDefines
CL_TEXTURE19	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE19                = 0x84D3,$/;"	e	enum:CL_GLDefines
CL_TEXTURE2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE2                 = 0x84C2,$/;"	e	enum:CL_GLDefines
CL_TEXTURE20	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE20                = 0x84D4,$/;"	e	enum:CL_GLDefines
CL_TEXTURE21	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE21                = 0x84D5,$/;"	e	enum:CL_GLDefines
CL_TEXTURE22	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE22                = 0x84D6,$/;"	e	enum:CL_GLDefines
CL_TEXTURE23	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE23                = 0x84D7,$/;"	e	enum:CL_GLDefines
CL_TEXTURE24	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE24                = 0x84D8,$/;"	e	enum:CL_GLDefines
CL_TEXTURE25	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE25                = 0x84D9,$/;"	e	enum:CL_GLDefines
CL_TEXTURE26	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE26                = 0x84DA,$/;"	e	enum:CL_GLDefines
CL_TEXTURE27	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE27                = 0x84DB,$/;"	e	enum:CL_GLDefines
CL_TEXTURE28	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE28                = 0x84DC,$/;"	e	enum:CL_GLDefines
CL_TEXTURE29	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE29                = 0x84DD,$/;"	e	enum:CL_GLDefines
CL_TEXTURE3	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE3                 = 0x84C3,$/;"	e	enum:CL_GLDefines
CL_TEXTURE30	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE30                = 0x84DE,$/;"	e	enum:CL_GLDefines
CL_TEXTURE31	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE31                = 0x84DF,$/;"	e	enum:CL_GLDefines
CL_TEXTURE4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE4                 = 0x84C4,$/;"	e	enum:CL_GLDefines
CL_TEXTURE5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE5                 = 0x84C5,$/;"	e	enum:CL_GLDefines
CL_TEXTURE6	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE6                 = 0x84C6,$/;"	e	enum:CL_GLDefines
CL_TEXTURE7	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE7                 = 0x84C7,$/;"	e	enum:CL_GLDefines
CL_TEXTURE8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE8                 = 0x84C8,$/;"	e	enum:CL_GLDefines
CL_TEXTURE9	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE9                 = 0x84C9,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_1D                   = 0x0DE0,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_1D_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_1D_BINDING           = 0x8068,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_2D                   = 0x0DE1,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_2D_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_2D_BINDING           = 0x8069,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_3D                   = 0x806F,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_3D_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_3D_BINDING           = 0x806A,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_ALPHA_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_ALPHA_SIZE           = 0x805F,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BASE_LEVEL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BASE_LEVEL           = 0x813C,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BINDING_1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BINDING_1D           = 0x8068,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BINDING_2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BINDING_2D           = 0x8069,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BINDING_3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BINDING_3D           = 0x806A,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BINDING_CUBE_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BINDING_CUBE_MAP   = 0x8514,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BIT                    = 0x00040000,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BLUE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BLUE_SIZE            = 0x805E,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BORDER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BORDER               = 0x1005,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_BORDER_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_BORDER_COLOR         = 0x1004,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COMPARE_FUNC	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COMPARE_FUNC        = 0x884d,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COMPARE_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COMPARE_MODE        = 0x884c,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COMPRESSED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COMPRESSED         = 0x86a1,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COMPRESSED_IMAGE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86a0,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COMPRESSION_HINT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COMPRESSION_HINT   = 0x84ef,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY          = 0x8078,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY_BUFFER_BINDING  = 0x889A,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY_POINTER  = 0x8092,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY_SIZE     = 0x8088,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY_STRIDE   = 0x808A,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_COORD_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_COORD_ARRAY_TYPE     = 0x8089,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP           = 0x8513,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_DEPTH                = 0x8071,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_DEPTH_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_DEPTH_SIZE          = 0x884a,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_ENV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_ENV                  = 0x2300,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_ENV_COLOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_ENV_COLOR            = 0x2201,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_ENV_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_ENV_MODE             = 0x2200,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_FILTER_CONTROL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_FILTER_CONTROL      = 0x8500,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GEN_MODE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GEN_MODE             = 0x2500,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GEN_Q	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GEN_Q                = 0x0C63,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GEN_R	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GEN_R                = 0x0C62,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GEN_S	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GEN_S                = 0x0C60,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GEN_T	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GEN_T                = 0x0C61,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_GREEN_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_GREEN_SIZE           = 0x805D,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_HEIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_HEIGHT               = 0x1001,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_INTENSITY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_INTENSITY_SIZE       = 0x8061,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_INTERNAL_FORMAT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_INTERNAL_FORMAT      = 0x1003,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_LOD_BIAS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_LOD_BIAS            = 0x8501,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_LUMINANCE_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_LUMINANCE_SIZE       = 0x8060,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MAG_FILTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MAG_FILTER           = 0x2800,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MATRIX               = 0x0BA8,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MAX_LEVEL	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MAX_LEVEL            = 0x813D,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MAX_LOD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MAX_LOD              = 0x813B,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MIN_FILTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MIN_FILTER           = 0x2801,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_MIN_LOD	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_MIN_LOD              = 0x813A,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_PRIORITY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_PRIORITY             = 0x8066,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_RED_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_RED_SIZE             = 0x805C,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_RESIDENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_RESIDENT             = 0x8067,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_STACK_DEPTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_STACK_DEPTH          = 0x0BA5,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_WIDTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_WIDTH                = 0x1000,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_WRAP_R	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_WRAP_R               = 0x8072,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_WRAP_S	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_WRAP_S               = 0x2802,$/;"	e	enum:CL_GLDefines
CL_TEXTURE_WRAP_T	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TEXTURE_WRAP_T               = 0x2803,$/;"	e	enum:CL_GLDefines
CL_TLS	/usr/include/ClanLib/Core/System/thread.h	172;"	d
CL_TLS	/usr/include/ClanLib/Core/System/thread.h	174;"	d
CL_TRANSFORM_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRANSFORM_BIT                  = 0x00001000,$/;"	e	enum:CL_GLDefines
CL_TRANSPOSE_COLOR_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRANSPOSE_COLOR_MATRIX      = 0x84e6,$/;"	e	enum:CL_GLDefines
CL_TRANSPOSE_MODELVIEW_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRANSPOSE_MODELVIEW_MATRIX  = 0x84e3,$/;"	e	enum:CL_GLDefines
CL_TRANSPOSE_PROJECTION_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRANSPOSE_PROJECTION_MATRIX = 0x84e4,$/;"	e	enum:CL_GLDefines
CL_TRANSPOSE_TEXTURE_MATRIX	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRANSPOSE_TEXTURE_MATRIX    = 0x84e5,$/;"	e	enum:CL_GLDefines
CL_TRIANGLES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRIANGLES                      = 0x0004,$/;"	e	enum:CL_GLDefines
CL_TRIANGLE_FAN	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRIANGLE_FAN                   = 0x0006,$/;"	e	enum:CL_GLDefines
CL_TRIANGLE_STRIP	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRIANGLE_STRIP                 = 0x0005,$/;"	e	enum:CL_GLDefines
CL_TRUE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TRUE                           = 1,$/;"	e	enum:CL_GLDefines
CL_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_TYPE                                = 0x8B4E,$/;"	e	enum:CL_GLDefines
CL_TargaProvider	/usr/include/ClanLib/Display/Providers/targa_provider.h	/^class CL_TargaProvider : public CL_PixelBuffer$/;"	c
CL_TextStyler	/usr/include/ClanLib/Display/text_styler.h	/^class CL_API_DISPLAY CL_TextStyler$/;"	c
CL_Texture	/usr/include/ClanLib/GL/texture.h	/^class CL_API_GL CL_Texture$/;"	c
CL_TextureCompareFunction	/usr/include/ClanLib/GL/texture.h	/^enum CL_TextureCompareFunction$/;"	g
CL_TextureCompareMode	/usr/include/ClanLib/GL/texture.h	/^enum CL_TextureCompareMode$/;"	g
CL_TextureDepthMode	/usr/include/ClanLib/GL/texture.h	/^enum CL_TextureDepthMode$/;"	g
CL_TextureFilter	/usr/include/ClanLib/GL/texture.h	/^enum CL_TextureFilter$/;"	g
CL_TextureWrapMode	/usr/include/ClanLib/GL/texture.h	/^enum CL_TextureWrapMode$/;"	g
CL_Thread	/usr/include/ClanLib/Core/System/thread.h	/^class CL_API_CORE CL_Thread$/;"	c
CL_ThreadFunc_Runnable_v0	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^	CL_ThreadFunc_Runnable_v0(Class *self, MemberFunc func)$/;"	f	class:CL_ThreadFunc_Runnable_v0
CL_ThreadFunc_Runnable_v0	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^class CL_ThreadFunc_Runnable_v0 : public CL_Runnable$/;"	c
CL_ThreadFunc_Runnable_v1	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	CL_ThreadFunc_Runnable_v1(Class *self, MemberFunc func, const Param &param)$/;"	f	class:CL_ThreadFunc_Runnable_v1
CL_ThreadFunc_Runnable_v1	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^class CL_ThreadFunc_Runnable_v1 : public CL_Runnable$/;"	c
CL_ThreadFunc_Runnable_v2	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	CL_ThreadFunc_Runnable_v2(Class *self, MemberFunc func, const Param1 &param1, const Param2 &param2)$/;"	f	class:CL_ThreadFunc_Runnable_v2
CL_ThreadFunc_Runnable_v2	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^class CL_ThreadFunc_Runnable_v2 : public CL_Runnable$/;"	c
CL_ThreadFunc_v0	/usr/include/ClanLib/Core/System/threadfunc_v0.h	78;"	d
CL_ThreadFunc_v1	/usr/include/ClanLib/Core/System/threadfunc_v1.h	79;"	d
CL_ThreadFunc_v2	/usr/include/ClanLib/Core/System/threadfunc_v2.h	80;"	d
CL_ThreadId	/usr/include/ClanLib/Core/System/thread.h	/^class CL_API_CORE CL_ThreadId$/;"	c
CL_Timer	/usr/include/ClanLib/Core/System/timer.h	/^class CL_API_CORE CL_Timer : public CL_KeepAlive$/;"	c
CL_TreeItem	/usr/include/ClanLib/GUI/treeitem.h	/^	CL_TreeItem(const CL_TreeItem &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_TreeItem
CL_TreeItem	/usr/include/ClanLib/GUI/treeitem.h	/^class CL_API_GUI CL_TreeItem : public CL_Component$/;"	c
CL_TreeItem_Silver	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^class CL_API_GUISTYLESILVER CL_TreeItem_Silver : public CL_ComponentStyle$/;"	c
CL_TreeNode	/usr/include/ClanLib/GUI/treenode.h	/^	CL_TreeNode(const CL_TreeNode &copy) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_TreeNode
CL_TreeNode	/usr/include/ClanLib/GUI/treenode.h	/^class CL_API_GUI CL_TreeNode$/;"	c
CL_TreeView	/usr/include/ClanLib/GUI/treeview.h	/^	CL_TreeView(const CL_TreeView &copy) : CL_Component(NULL, NULL), CL_TreeNode(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_TreeView
CL_TreeView	/usr/include/ClanLib/GUI/treeview.h	/^class CL_API_GUI CL_TreeView : public CL_Component, public CL_TreeNode$/;"	c
CL_TreeView_Silver	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^class CL_API_GUISTYLESILVER CL_TreeView_Silver : public CL_ComponentStyle$/;"	c
CL_TriangleMath	/usr/include/ClanLib/Core/Math/triangle_math.h	/^class CL_API_CORE CL_TriangleMath$/;"	c
CL_UNPACK_ALIGNMENT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_ALIGNMENT             = 0x0CF5,$/;"	e	enum:CL_GLDefines
CL_UNPACK_IMAGE_HEIGHT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_IMAGE_HEIGHT          = 0x806E,$/;"	e	enum:CL_GLDefines
CL_UNPACK_LSB_FIRST	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_LSB_FIRST             = 0x0CF1,$/;"	e	enum:CL_GLDefines
CL_UNPACK_ROW_LENGTH	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_ROW_LENGTH            = 0x0CF2,$/;"	e	enum:CL_GLDefines
CL_UNPACK_SKIP_IMAGES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_SKIP_IMAGES           = 0x806D,$/;"	e	enum:CL_GLDefines
CL_UNPACK_SKIP_PIXELS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_SKIP_PIXELS           = 0x0CF4,$/;"	e	enum:CL_GLDefines
CL_UNPACK_SKIP_ROWS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_SKIP_ROWS             = 0x0CF3,$/;"	e	enum:CL_GLDefines
CL_UNPACK_SWAP_BYTES	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNPACK_SWAP_BYTES            = 0x0CF0,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_BYTE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_BYTE                  = 0x1401,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_BYTE_2_3_3_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_BYTE_2_3_3_REV      = 0x8362,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_BYTE_3_3_2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_BYTE_3_3_2          = 0x8032,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_INT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_INT                   = 0x1405,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_INT_10_10_10_2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_INT_10_10_10_2      = 0x8036,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_INT_2_10_10_10_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_INT_2_10_10_10_REV  = 0x8368,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_INT_8_8_8_8	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_INT_8_8_8_8         = 0x8035,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_INT_8_8_8_8_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_INT_8_8_8_8_REV     = 0x8367,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT                 = 0x1403,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_1_5_5_5_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_1_5_5_5_REV   = 0x8366,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_4_4_4_4	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_4_4_4_4       = 0x8033,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_4_4_4_4_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_4_4_4_4_REV   = 0x8365,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_5_5_5_1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_5_5_5_1       = 0x8034,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_5_6_5	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_5_6_5         = 0x8363,$/;"	e	enum:CL_GLDefines
CL_UNSIGNED_SHORT_5_6_5_REV	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_UNSIGNED_SHORT_5_6_5_REV     = 0x8364,$/;"	e	enum:CL_GLDefines
CL_UserDataFunctionSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_UserDataFunctionSlot_v0(Callback callback, UserData user_data) : callback(callback), user_data(user_data)  { return; }$/;"	f	class:CL_UserDataFunctionSlot_v0
CL_UserDataFunctionSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_UserDataFunctionSlot_v0 : public CL_Slot_v0$/;"	c
CL_UserDataFunctionSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^	CL_UserDataFunctionSlot_v1(Callback callback, UserData user_data) : callback(callback), user_data(user_data)  { return; }$/;"	f	class:CL_UserDataFunctionSlot_v1
CL_UserDataFunctionSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_UserDataFunctionSlot_v1 : public CL_Slot_v1<PARAM1>$/;"	c
CL_UserDataMethodSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^	CL_UserDataMethodSlot_v0(CallbackClass *cb_class, Callback callback, VirtualCallback virtual_callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v0
CL_UserDataMethodSlot_v0	/usr/include/ClanLib/Signals/slot_v0.h	/^class CL_UserDataMethodSlot_v0 : public CL_Slot_v0$/;"	c
CL_UserDataMethodSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^	CL_UserDataMethodSlot_v1(CallbackClass *cb_class, Callback callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v1
CL_UserDataMethodSlot_v1	/usr/include/ClanLib/Signals/slot_v1.h	/^class CL_UserDataMethodSlot_v1 : public CL_Slot_v1<PARAM1>$/;"	c
CL_UserDataMethodSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^	CL_UserDataMethodSlot_v2(CallbackClass *cb_class, Callback callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v2
CL_UserDataMethodSlot_v2	/usr/include/ClanLib/Signals/slot_v2.h	/^class CL_UserDataMethodSlot_v2 : public CL_Slot_v2<PARAM1, PARAM2>$/;"	c
CL_UserDataMethodSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^	CL_UserDataMethodSlot_v3(CallbackClass *cb_class, Callback callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v3
CL_UserDataMethodSlot_v3	/usr/include/ClanLib/Signals/slot_v3.h	/^class CL_UserDataMethodSlot_v3 : public CL_Slot_v3<PARAM1, PARAM2, PARAM3>$/;"	c
CL_UserDataMethodSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^	CL_UserDataMethodSlot_v4(CallbackClass *cb_class, Callback callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v4
CL_UserDataMethodSlot_v4	/usr/include/ClanLib/Signals/slot_v4.h	/^class CL_UserDataMethodSlot_v4 : public CL_Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>$/;"	c
CL_UserDataMethodSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^	CL_UserDataMethodSlot_v5(CallbackClass *cb_class, Callback callback, UserData user_data)$/;"	f	class:CL_UserDataMethodSlot_v5
CL_UserDataMethodSlot_v5	/usr/include/ClanLib/Signals/slot_v5.h	/^class CL_UserDataMethodSlot_v5 : public CL_Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>$/;"	c
CL_V2F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_V2F                          = 0x2A20,$/;"	e	enum:CL_GLDefines
CL_V3F	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_V3F                          = 0x2A21,$/;"	e	enum:CL_GLDefines
CL_VALIDATE_STATUS	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VALIDATE_STATUS                     = 0x8B83,$/;"	e	enum:CL_GLDefines
CL_VENDOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VENDOR                       = 0x1F00,$/;"	e	enum:CL_GLDefines
CL_VERSION	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERSION                      = 0x1F02,$/;"	e	enum:CL_GLDefines
CL_VERSION	/usr/include/ClanLib/core.h	43;"	d
CL_VERSION_STRING	/usr/include/ClanLib/core.h	45;"	d
CL_VERTEX_ARRAY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY                 = 0x8074,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY_BUFFER_BINDING         = 0x8896,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY_POINTER         = 0x808E,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ARRAY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY_SIZE            = 0x807A,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY_STRIDE          = 0x807C,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ARRAY_TYPE            = 0x807B,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING  = 0x889F,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_ENABLED         = 0x8622,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_NORMALIZED      = 0x886A,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_POINTER         = 0x8645,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_SIZE            = 0x8623,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_STRIDE          = 0x8624,$/;"	e	enum:CL_GLDefines
CL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_ATTRIB_ARRAY_TYPE            = 0x8625,$/;"	e	enum:CL_GLDefines
CL_VERTEX_PROGRAM_POINT_SIZE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_PROGRAM_POINT_SIZE           = 0x8642,$/;"	e	enum:CL_GLDefines
CL_VERTEX_PROGRAM_TWO_SIDE	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_PROGRAM_TWO_SIDE             = 0x8643,$/;"	e	enum:CL_GLDefines
CL_VERTEX_SHADER	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VERTEX_SHADER                       = 0x8B31,$/;"	e	enum:CL_GLDefines
CL_VIEWPORT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VIEWPORT                     = 0x0BA2,$/;"	e	enum:CL_GLDefines
CL_VIEWPORT_BIT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_VIEWPORT_BIT                   = 0x00000800,$/;"	e	enum:CL_GLDefines
CL_Vector	/usr/include/ClanLib/Core/Math/cl_vector.h	/^class CL_API_CORE CL_Vector$/;"	c
CL_Vector2	/usr/include/ClanLib/Core/Math/vector2.h	/^class CL_API_CORE CL_Vector2$/;"	c
CL_Viewpoint	/usr/include/ClanLib/GL/viewpoint.h	/^class CL_API_GL CL_Viewpoint$/;"	c
CL_WEIGHT_ARRAY_BUFFER_BINDING	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_WEIGHT_ARRAY_BUFFER_BINDING         = 0x889E,$/;"	e	enum:CL_GLDefines
CL_WRITE_ONLY	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_WRITE_ONLY                          = 0x88B9,$/;"	e	enum:CL_GLDefines
CL_WeakPtr	/usr/include/ClanLib/Core/System/weakptr.h	/^	CL_WeakPtr() : impl(0) { return; }$/;"	f	class:CL_WeakPtr
CL_WeakPtr	/usr/include/ClanLib/Core/System/weakptr.h	/^	CL_WeakPtr(CL_SharedPtr<T, U> &other) : impl(other.get_impl()) { return; }$/;"	f	class:CL_WeakPtr
CL_WeakPtr	/usr/include/ClanLib/Core/System/weakptr.h	/^class CL_WeakPtr$/;"	c
CL_Window	/usr/include/ClanLib/GUI/window.h	/^	CL_Window(const CL_Window &copy) : CL_Component(NULL, NULL) { return; } \/\/ disallow copy construction.$/;"	f	class:CL_Window
CL_Window	/usr/include/ClanLib/GUI/window.h	/^class CL_API_GUI CL_Window : public CL_Component$/;"	c
CL_Window_Silver	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^class CL_API_GUISTYLESILVER CL_Window_Silver : public CL_ComponentStyle$/;"	c
CL_XMLToken	/usr/include/ClanLib/Core/XML/xml_token.h	/^class CL_XMLToken$/;"	c
CL_XMLTokenizer	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	/^class CL_API_CORE CL_XMLTokenizer$/;"	c
CL_XMLWriter	/usr/include/ClanLib/Core/XML/xml_writer.h	/^class CL_API_CORE CL_XMLWriter$/;"	c
CL_XOR	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_XOR                          = 0x1506,$/;"	e	enum:CL_GLDefines
CL_ZERO	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ZERO                           = 0,$/;"	e	enum:CL_GLDefines
CL_ZOOM_X	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ZOOM_X                       = 0x0D16,$/;"	e	enum:CL_GLDefines
CL_ZOOM_Y	/usr/include/ClanLib/GL/opengl_wrap.h	/^	CL_ZOOM_Y                       = 0x0D17,$/;"	e	enum:CL_GLDefines
CL_Zip_Archive	/usr/include/ClanLib/Core/IOData/zip_archive.h	/^class CL_API_CORE CL_Zip_Archive : public CL_InputSourceProvider$/;"	c
CL_Zip_FileEntry	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	/^class CL_API_CORE CL_Zip_FileEntry$/;"	c
CLbitfield	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned int CLbitfield;$/;"	t
CLbitfield	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned long CLbitfield;$/;"	t
CLboolean	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned char CLboolean;$/;"	t
CLbyte	/usr/include/ClanLib/GL/opengl.h	/^typedef signed char CLbyte;$/;"	t
CLchar	/usr/include/ClanLib/GL/opengl.h	/^typedef char CLchar;$/;"	t
CLclampd	/usr/include/ClanLib/GL/opengl.h	/^typedef double CLclampd;$/;"	t
CLclampf	/usr/include/ClanLib/GL/opengl.h	/^typedef float CLclampf;$/;"	t
CLdouble	/usr/include/ClanLib/GL/opengl.h	/^typedef double CLdouble;$/;"	t
CLenum	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned int CLenum;$/;"	t
CLenum	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned long CLenum;$/;"	t
CLfloat	/usr/include/ClanLib/GL/opengl.h	/^typedef float CLfloat;$/;"	t
CLint	/usr/include/ClanLib/GL/opengl.h	/^typedef int CLint;$/;"	t
CLint	/usr/include/ClanLib/GL/opengl.h	/^typedef long CLint;$/;"	t
CLintptr	/usr/include/ClanLib/GL/opengl.h	/^typedef __int64 CLintptr;$/;"	t
CLintptr	/usr/include/ClanLib/GL/opengl.h	/^typedef long int CLintptr;$/;"	t
CLshort	/usr/include/ClanLib/GL/opengl.h	/^typedef short CLshort;$/;"	t
CLsizei	/usr/include/ClanLib/GL/opengl.h	/^typedef int CLsizei;$/;"	t
CLsizei	/usr/include/ClanLib/GL/opengl.h	/^typedef long CLsizei;$/;"	t
CLsizeiptr	/usr/include/ClanLib/GL/opengl.h	/^typedef long int CLsizeiptr;$/;"	t
CLubyte	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned char CLubyte;$/;"	t
CLuint	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned int CLuint;$/;"	t
CLuint	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned long CLuint;$/;"	t
CLushort	/usr/include/ClanLib/GL/opengl.h	/^typedef unsigned short CLushort;$/;"	t
CLvoid	/usr/include/ClanLib/GL/opengl.h	/^typedef void CLvoid;$/;"	t
COMMENT_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		COMMENT_NODE                  = 8,$/;"	e	enum:CL_DomNode::NodeType
COMMENT_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		COMMENT_TOKEN                  = 8,$/;"	e	enum:CL_XMLToken::TokenType
Callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (*Callback)();$/;"	t	class:CL_FunctionSlot_v0
Callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (*Callback)(UserData);$/;"	t	class:CL_UserDataFunctionSlot_v0
Callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (CallbackClass::*Callback)();$/;"	t	class:CL_MethodSlot_v0
Callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (CallbackClass::*Callback)(UserData);$/;"	t	class:CL_UserDataMethodSlot_v0
Callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	typedef void (*Callback)(PARAM1);$/;"	t	class:CL_FunctionSlot_v1
Callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	typedef void (*Callback)(PARAM1, UserData);$/;"	t	class:CL_UserDataFunctionSlot_v1
Callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	typedef void (CallbackClass::*Callback)(PARAM1);$/;"	t	class:CL_MethodSlot_v1
Callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, UserData);$/;"	t	class:CL_UserDataMethodSlot_v1
Callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	typedef void (*Callback)(PARAM1, PARAM2);$/;"	t	class:CL_FunctionSlot_v2
Callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2);$/;"	t	class:CL_MethodSlot_v2
Callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, UserData);$/;"	t	class:CL_UserDataMethodSlot_v2
Callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	typedef void (*Callback)(PARAM1, PARAM2, PARAM3);$/;"	t	class:CL_FunctionSlot_v3
Callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3);$/;"	t	class:CL_MethodSlot_v3
Callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, UserData);$/;"	t	class:CL_UserDataMethodSlot_v3
Callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	typedef void (*Callback)(PARAM1, PARAM2, PARAM3, PARAM4);$/;"	t	class:CL_FunctionSlot_v4
Callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4);$/;"	t	class:CL_MethodSlot_v4
Callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, UserData);$/;"	t	class:CL_UserDataMethodSlot_v4
Callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	typedef void (*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5);$/;"	t	class:CL_FunctionSlot_v5
Callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5);$/;"	t	class:CL_MethodSlot_v5
Callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, UserData);$/;"	t	class:CL_UserDataMethodSlot_v5
DCCStatus	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^	enum DCCStatus$/;"	g	class:CL_DCCDownload
DOCUMENT_FRAGMENT_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		DOCUMENT_FRAGMENT_NODE        = 11,$/;"	e	enum:CL_DomNode::NodeType
DOCUMENT_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		DOCUMENT_NODE                 = 9,$/;"	e	enum:CL_DomNode::NodeType
DOCUMENT_TYPE_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		DOCUMENT_TYPE_NODE            = 10,$/;"	e	enum:CL_DomNode::NodeType
DOCUMENT_TYPE_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		DOCUMENT_TYPE_TOKEN            = 10,$/;"	e	enum:CL_XMLToken::TokenType
DOMSTRING_SIZE_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		DOMSTRING_SIZE_ERR           = 2,$/;"	e	enum:CL_DomException::ExceptionCodes
EDatatype	/usr/include/ClanLib/GUI/component_type.h	/^	enum EDatatype$/;"	g	class:CL_ComponentType
ELEMENT_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		ELEMENT_NODE                  = 1,$/;"	e	enum:CL_DomNode::NodeType
ELEMENT_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		ELEMENT_TOKEN                  = 1,$/;"	e	enum:CL_XMLToken::TokenType
END	/usr/include/ClanLib/Core/XML/xml_token.h	/^		END    = 2,$/;"	e	enum:CL_XMLToken::TokenVariant
ENTITY_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		ENTITY_NODE                   = 6,$/;"	e	enum:CL_DomNode::NodeType
ENTITY_REFERENCE_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		ENTITY_REFERENCE_NODE         = 5,$/;"	e	enum:CL_DomNode::NodeType
ENTITY_REFERENCE_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		ENTITY_REFERENCE_TOKEN         = 5,$/;"	e	enum:CL_XMLToken::TokenType
ENTITY_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		ENTITY_TOKEN                   = 6,$/;"	e	enum:CL_XMLToken::TokenType
ERR_ALREADYREGISTRED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_ALREADYREGISTRED = 462, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_BADCHANMASK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BADCHANMASK = 476, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_BADCHANNAME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BADCHANNAME = 479, \/\/ ED$/;"	e	enum:CL_IRCNumerics
ERR_BADCHANNELKEY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BADCHANNELKEY = 475, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_BADMASK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BADMASK = 415, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_BADPING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BADPING = 513, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_BANLISTFULL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BANLISTFULL = 478, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_BANNEDFROMCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BANNEDFROMCHAN = 474, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_BANNICKCHANGE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BANNICKCHANGE = 437, \/\/ UD$/;"	e	enum:CL_IRCNumerics
ERR_BANONCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_BANONCHAN = 435, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_CANNOTSENDTOCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_CANNOTSENDTOCHAN = 404, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_CANTKILLSERVER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_CANTKILLSERVER = 483, \/\/ EUD$/;"	e	enum:CL_IRCNumerics
ERR_CHANNELISFULL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_CHANNELISFULL = 471, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_CHANOPRIVSNEEDED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_CHANOPRIVSNEEDED = 482, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_CHANTOORECENT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_CHANTOORECENT = 487, \/\/ i$/;"	e	enum:CL_IRCNumerics
ERR_DEAD	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_DEAD = 438, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_DESYNC	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_DESYNC = 484, \/\/ ED$/;"	e	enum:CL_IRCNumerics
ERR_ERRONEUSNICKNAME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_ERRONEUSNICKNAME = 432, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_FILEERROR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_FILEERROR = 424, \/\/ IED$/;"	e	enum:CL_IRCNumerics
ERR_GHOSTEDCLIENT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_GHOSTEDCLIENT = 503, \/\/ ED$/;"	e	enum:CL_IRCNumerics
ERR_HOSTILENAME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_HOSTILENAME = 455, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_IDCOLLISION	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_IDCOLLISION = 452, \/\/ i$/;"	e	enum:CL_IRCNumerics
ERR_INVALIDUSERNAME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_INVALIDUSERNAME = 468, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_INVITEONLYCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_INVITEONLYCHAN = 473, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_ISCHANSERVICE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_ISCHANSERVICE = 484, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_KEYSET	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_KEYSET = 467, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_LAST_ERR_MSG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_LAST_ERR_MSG = 504, \/\/ ED$/;"	e	enum:CL_IRCNumerics
ERR_LISTSYNTAX	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_LISTSYNTAX = 521, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_MODELESS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_MODELESS = 477, \/\/ E$/;"	e	enum:CL_IRCNumerics
ERR_NCHANGETOOFAST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NCHANGETOOFAST = 438, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_NEEDMOREPARAMS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NEEDMOREPARAMS = 461, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NEEDREGGEDNICK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NEEDREGGEDNICK = 477, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_NICKCOLLISION	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NICKCOLLISION = 436, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NICKLOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NICKLOST = 453, \/\/ i$/;"	e	enum:CL_IRCNumerics
ERR_NICKNAMEINUSE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NICKNAMEINUSE = 433, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NICKTOOFAST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NICKTOOFAST = 438, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_NOADMININFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOADMININFO = 423, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOCHANMODES	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOCHANMODES = 477, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_NOCOLORSONCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOCOLORSONCHAN = 408, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_NOLOGIN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOLOGIN = 444, \/\/ IED$/;"	e	enum:CL_IRCNumerics
ERR_NOMOTD	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOMOTD = 422, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NONICKNAMEGIVEN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NONICKNAMEGIVEN = 431, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOOPERHOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOOPERHOST = 491, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOORIGIN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOORIGIN = 409, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOPERMFORHOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOPERMFORHOST = 463, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOPRIVILEGES	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOPRIVILEGES = 481, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NORECIPIENT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NORECIPIENT = 411, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOSERVICEHOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSERVICEHOST = 492, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_NOSUCHCHANNEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSUCHCHANNEL = 403, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOSUCHGLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSUCHGLINE = 512, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_NOSUCHNICK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSUCHNICK = 401, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOSUCHSERVER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSUCHSERVER = 402, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOSUCHSERVICE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOSUCHSERVICE = 408, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_NOTEXTTOSEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOTEXTTOSEND = 412, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOTONCHANNEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOTONCHANNEL = 442, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOTOPLEVEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOTOPLEVEL = 413, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NOTREGISTERED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NOTREGISTERED = 451, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_NUMERIC_ERR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_NUMERIC_ERR = 999 \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_ONLYSERVERSCANCHANGE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_ONLYSERVERSCANCHANGE = 468, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_PASSWDMISMATCH	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_PASSWDMISMATCH = 464, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_QUERYTOOLONG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_QUERYTOOLONG = 416, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_SERVICECONFUSED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_SERVICECONFUSED = 435, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_SERVICENAMEINUSE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_SERVICENAMEINUSE = 434, \/\/ ID$/;"	e	enum:CL_IRCNumerics
ERR_SERVICESDOWN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_SERVICESDOWN = 440, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_SILELISTFULL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_SILELISTFULL = 511, \/\/ UD$/;"	e	enum:CL_IRCNumerics
ERR_SUMMONDISABLED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_SUMMONDISABLED = 445, \/\/ IED$/;"	e	enum:CL_IRCNumerics
ERR_TARGETTOOFAST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TARGETTOOFAST = 439, \/\/ UD$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYAWAY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYAWAY = 429, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYCHANNELS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYCHANNELS = 405, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYDCC	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYDCC = 514, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYMATCHES	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYMATCHES = 416, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYTARGETS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYTARGETS = 407, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_TOOMANYWATCH	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TOOMANYWATCH = 512, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_TSLESSCHAN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_TSLESSCHAN = 488, \/\/ i$/;"	e	enum:CL_IRCNumerics
ERR_UMODEUNKNOWNFLAG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_UMODEUNKNOWNFLAG = 501, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_UNAVAILRESOURCE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_UNAVAILRESOURCE = 437, \/\/ IE$/;"	e	enum:CL_IRCNumerics
ERR_UNIQOPPRIVSNEEDED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_UNIQOPPRIVSNEEDED = 485, \/\/ I$/;"	e	enum:CL_IRCNumerics
ERR_UNKNOWNCOMMAND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_UNKNOWNCOMMAND = 421, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_UNKNOWNMODE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_UNKNOWNMODE = 472, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_USERNOTINCHANNEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_USERNOTINCHANNEL = 441, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_USERONCHANNEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_USERONCHANNEL = 443, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_USERSDISABLED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_USERSDISABLED = 446, \/\/ IED$/;"	e	enum:CL_IRCNumerics
ERR_USERSDONTMATCH	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_USERSDONTMATCH = 502, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_VOICENEEDED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_VOICENEEDED = 489, \/\/ U$/;"	e	enum:CL_IRCNumerics
ERR_WASNOSUCHNICK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_WASNOSUCHNICK = 406, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_WHOLIMEXCEED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_WHOLIMEXCEED = 523, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_WHOSYNTAX	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_WHOSYNTAX = 522, \/\/ D$/;"	e	enum:CL_IRCNumerics
ERR_WILDTOPLEVEL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_WILDTOPLEVEL = 414, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_YOUREBANNEDCREEP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_YOUREBANNEDCREEP = 465, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
ERR_YOUWILLBEBANNED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	ERR_YOUWILLBEBANNED = 466, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
EThreadPriority	/usr/include/ClanLib/Core/System/thread.h	/^enum EThreadPriority$/;"	g
ExceptionCodes	/usr/include/ClanLib/Core/XML/dom_exception.h	/^	enum ExceptionCodes$/;"	g	class:CL_DomException
FUZZ	/usr/include/ClanLib/Core/Math/vector2.h	/^	static float FUZZ;$/;"	m	class:CL_Vector2
Flag	/usr/include/ClanLib/Display/surface.h	/^	enum Flag$/;"	g	class:CL_Surface
FramePair	/usr/include/ClanLib/Display/sprite_description.h	/^	typedef std::pair<CL_PixelBuffer, CL_Rect> FramePair;$/;"	t	class:CL_SpriteDescription
Glyph	/usr/include/ClanLib/Display/glyph_buffer.h	/^		Glyph() {;}$/;"	f	struct:CL_GlyphBuffer::Glyph
Glyph	/usr/include/ClanLib/Display/glyph_buffer.h	/^		Glyph(CL_Point p, unsigned int c) : pos(p), character(c) {;}$/;"	f	struct:CL_GlyphBuffer::Glyph
Glyph	/usr/include/ClanLib/Display/glyph_buffer.h	/^	struct Glyph$/;"	s	class:CL_GlyphBuffer
HIERARCHY_REQUEST_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		HIERARCHY_REQUEST_ERR        = 3,$/;"	e	enum:CL_DomException::ExceptionCodes
INDEX_SIZE_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		INDEX_SIZE_ERR               = 1,$/;"	e	enum:CL_DomException::ExceptionCodes
INUSE_ATTRIBUTE_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		INUSE_ATTRIBUTE_ERR          = 10$/;"	e	enum:CL_DomException::ExceptionCodes
INVALID_CHARACTER_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		INVALID_CHARACTER_ERR        = 5,$/;"	e	enum:CL_DomException::ExceptionCodes
IS_SYSTEM_64BIT	/usr/include/ClanLib/Core/IOData/cl_endian.h	88;"	d
ITEM_IMAGE	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^			ITEM_IMAGE,$/;"	e	enum:CL_RichEdit_Paragraph::Item::ITEM_TYPE
ITEM_STRING	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^			ITEM_STRING,$/;"	e	enum:CL_RichEdit_Paragraph::Item::ITEM_TYPE
ITEM_TYPE	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		enum ITEM_TYPE$/;"	g	struct:CL_RichEdit_Paragraph::Item
Item	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	struct Item$/;"	s	class:CL_RichEdit_Paragraph
Iter	/usr/include/ClanLib/Display/glyph_buffer.h	/^			Iter() {}$/;"	f	class:CL_GlyphBuffer::Iter
Iter	/usr/include/ClanLib/Display/glyph_buffer.h	/^			Iter(const CL_GlyphBuffer& new_gb, Range range)$/;"	f	class:CL_GlyphBuffer::Iter
Iter	/usr/include/ClanLib/Display/glyph_buffer.h	/^	class Iter {$/;"	c	class:CL_GlyphBuffer
M_PI	/usr/include/ClanLib/Core/Math/math.h	42;"	d
MemberFunc	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^	typedef void (Class::*MemberFunc)();$/;"	t	class:CL_ThreadFunc_Runnable_v0
MemberFunc	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	typedef void (Class::*MemberFunc)(Param &param);$/;"	t	class:CL_ThreadFunc_Runnable_v1
MemberFunc	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	typedef void (Class::*MemberFunc)(Param1 &param1, Param2 &param2);$/;"	t	class:CL_ThreadFunc_Runnable_v2
Mode	/usr/include/ClanLib/GUI/image.h	/^	enum Mode$/;"	g	class:CL_Image
Mode	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	enum Mode$/;"	g	class:CL_Frame_Silver
NOTATION_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		NOTATION_NODE                 = 12$/;"	e	enum:CL_DomNode::NodeType
NOTATION_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		NOTATION_TOKEN                 = 12$/;"	e	enum:CL_XMLToken::TokenType
NOT_FOUND_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		NOT_FOUND_ERR                = 8,$/;"	e	enum:CL_DomException::ExceptionCodes
NOT_SUPPORTED_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		NOT_SUPPORTED_ERR            = 9,$/;"	e	enum:CL_DomException::ExceptionCodes
NO_DATA_ALLOWED_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		NO_DATA_ALLOWED_ERR          = 6,$/;"	e	enum:CL_DomException::ExceptionCodes
NO_MODIFICATION_ALLOWED_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		NO_MODIFICATION_ALLOWED_ERR  = 7,$/;"	e	enum:CL_DomException::ExceptionCodes
NULL_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		NULL_NODE                     = 0,$/;"	e	enum:CL_DomNode::NodeType
NULL_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		NULL_TOKEN                     = 0,$/;"	e	enum:CL_XMLToken::TokenType
NUMBER	/usr/include/ClanLib/GUI/component_type.h	/^		NUMBER$/;"	e	enum:CL_ComponentType::EDatatype
NodeType	/usr/include/ClanLib/Core/XML/dom_node.h	/^	enum NodeType$/;"	g	class:CL_DomNode
OneLineInfo	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		OneLineInfo( int item_idx, int char_idx, int height )$/;"	f	struct:CL_RichEdit_Paragraph::OneLineInfo
OneLineInfo	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	struct OneLineInfo$/;"	s	class:CL_RichEdit_Paragraph
PI	/usr/include/ClanLib/Core/Math/math.h	44;"	d
PROCESSING_INSTRUCTION_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		PROCESSING_INSTRUCTION_NODE   = 7,$/;"	e	enum:CL_DomNode::NodeType
PROCESSING_INSTRUCTION_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		PROCESSING_INSTRUCTION_TOKEN   = 7,$/;"	e	enum:CL_XMLToken::TokenType
Params	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	struct Params$/;"	s	class:CL_SlotBuffer_v1
Protocol	/usr/include/ClanLib/Network/Socket/socket.h	/^	enum Protocol$/;"	g	class:CL_Socket
REST_ARG	/usr/include/ClanLib/Core/System/command_line.h	/^		REST_ARG  = -2$/;"	e	enum:CL_CommandLine::__anon1
RPL_ADMINEMAIL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ADMINEMAIL = 259, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ADMINLOC1	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ADMINLOC1 = 257, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ADMINLOC2	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ADMINLOC2 = 258, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ADMINME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ADMINME = 256, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_AWAY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_AWAY = 301, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_BADCHANPASS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_BADCHANPASS = 339, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_BANLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_BANLIST = 367, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_BOUNCE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_BOUNCE = 5, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_CHANNELMODEIS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CHANNELMODEIS = 324, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_CHANPASSOK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CHANPASSOK = 338, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_CHPASSUNKNOWN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CHPASSUNKNOWN = 327, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_CLOSEEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CLOSEEND = 363, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_CLOSING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CLOSING = 362, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_COMMANDSYNTAX	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_COMMANDSYNTAX = 334, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_CREATED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CREATED = 3, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_CREATIONTIME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_CREATIONTIME = 329, \/\/ EUD$/;"	e	enum:CL_IRCNumerics
RPL_DCCINFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_DCCINFO = 620, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_DCCLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_DCCLIST = 618, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_DCCSTATUS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_DCCSTATUS = 617, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFBANLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFBANLIST = 368, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFDCCLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFDCCLIST = 619, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFEXCEPTLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFEXCEPTLIST = 349, \/\/ IE$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFGLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFGLIST = 281, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFINFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFINFO = 374, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFINVITELIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFINVITELIST = 347, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFLINKS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFLINKS = 365, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFMOTD	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFMOTD = 376, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFNAMES	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFNAMES = 366, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFSERVICES	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFSERVICES = 232, \/\/ IU$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFSILELIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFSILELIST = 272, \/\/ UD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFSTATS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFSTATS = 219, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFTRACE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFTRACE = 262, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFUSERS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFUSERS = 394, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFWATCHLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFWATCHLIST = 607, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFWHO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFWHO = 315, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFWHOIS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFWHOIS = 318, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ENDOFWHOWAS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ENDOFWHOWAS = 369, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_EXCEPTLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_EXCEPTLIST = 348, \/\/ IE$/;"	e	enum:CL_IRCNumerics
RPL_GLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_GLIST = 280, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_GLOBALUSERS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_GLOBALUSERS = 266, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_HELPFWD	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPFWD = 294, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_HELPHDR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPHDR = 290, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_HELPHLP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPHLP = 293, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_HELPIGN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPIGN = 295, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_HELPOP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPOP = 291, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_HELPTLR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_HELPTLR = 292, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_INFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_INFO = 371, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_INFOSTART	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_INFOSTART = 373, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_INVITELIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_INVITELIST = 346, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_INVITING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_INVITING = 341, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_ISON	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_ISON = 303, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_KILLDONE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_KILLDONE = 361, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LINKS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LINKS = 364, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LIST = 322, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LISTEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LISTEND = 323, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LISTSTART	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LISTSTART = 321, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LISTUSAGE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LISTUSAGE = 334, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_LOAD2HI	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LOAD2HI = 263, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_LOCALUSERS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LOCALUSERS = 265, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_LOGOFF	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LOGOFF = 601, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_LOGON	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LOGON = 600, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_LUSERCHANNELS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LUSERCHANNELS = 254, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LUSERCLIENT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LUSERCLIENT = 251, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LUSERME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LUSERME = 255, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LUSEROP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LUSEROP = 252, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_LUSERUNKNOWN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_LUSERUNKNOWN = 253, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_MAP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MAP = 5, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_MAPEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MAPEND = 7, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_MAPMORE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MAPMORE = 6, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_MOTD	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MOTD = 372, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_MOTDSTART	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MOTDSTART = 375, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_MYINFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MYINFO = 4, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_MYPORTIS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_MYPORTIS = 384, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NAMREPLY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NAMREPLY = 353, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NOCHANPASS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOCHANPASS = 326, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_NONE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NONE = 300, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NOTOPERANYMORE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOTOPERANYMORE = 385, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NOTOPIC	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOTOPIC = 331, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NOUSERS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOUSERS = 395, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_NOWAWAY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOWAWAY = 306, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_NOWOFF	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOWOFF = 605, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_NOWON	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_NOWON = 604, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_PROTOCTL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_PROTOCTL = 5, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_REHASHING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_REHASHING = 382, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_SERVICE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SERVICE = 233, \/\/ IU$/;"	e	enum:CL_IRCNumerics
RPL_SERVICEINFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SERVICEINFO = 231, \/\/ IU$/;"	e	enum:CL_IRCNumerics
RPL_SERVLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SERVLIST = 234, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_SERVLISTEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SERVLISTEND = 235, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_SILELIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SILELIST = 271, \/\/ UD$/;"	e	enum:CL_IRCNumerics
RPL_SNOMASK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SNOMASK = 8, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATMEM	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATMEM = 010, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATMEMTOT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATMEMTOT = 9, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATSBLINE_ED	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSBLINE_ED = 222, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_STATSBLINE_I	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSBLINE_I = 247, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSCLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSCLINE = 213, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSCOMMANDS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSCOMMANDS = 212, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSCONN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSCONN = 250, \/\/ EUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSCOUNT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSCOUNT = 226, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_STATSDEBUG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDEBUG = 249, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSDEFINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDEFINE = 248, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSDELTA	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDELTA = 274, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_STATSDLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDLINE = 275, \/\/ UD$/;"	e	enum:CL_IRCNumerics
RPL_STATSDLINE_E	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDLINE_E = 225, \/\/ E$/;"	e	enum:CL_IRCNumerics
RPL_STATSDLINE_I	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSDLINE_I = 250, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSELINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSELINE = 223, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_STATSFLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSFLINE = 224, \/\/ ED$/;"	e	enum:CL_IRCNumerics
RPL_STATSGLINE_D	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSGLINE_D = 227, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_STATSGLINE_U	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSGLINE_U = 247, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATSHLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSHLINE = 244, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSIAUTH	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSIAUTH = 239, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSILINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSILINE = 215, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSKLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSKLINE = 216, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSLINKINFO	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSLINKINFO = 211, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSLLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSLLINE = 241, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSNLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSNLINE = 214, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSOLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSOLINE = 243, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSPING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSPING = 246, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSPLINE_E	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSPLINE_E = 220, \/\/ E$/;"	e	enum:CL_IRCNumerics
RPL_STATSPLINE_U	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSPLINE_U = 217, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATSQLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSQLINE = 217, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_STATSSLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSSLINE = 245, \/\/ IEuD$/;"	e	enum:CL_IRCNumerics
RPL_STATSTLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSTLINE = 246, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_STATSULINE_D	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSULINE_D = 246, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_STATSULINE_EU	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSULINE_EU = 248, \/\/ EU$/;"	e	enum:CL_IRCNumerics
RPL_STATSUPTIME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSUPTIME = 242, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSVLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSVLINE = 240, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_STATSXLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSXLINE = 247, \/\/ E$/;"	e	enum:CL_IRCNumerics
RPL_STATSYLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSYLINE = 218, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_STATSZLINE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_STATSZLINE = 225, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_SUMMONING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_SUMMONING = 342, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_TEXT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TEXT = 304, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TIME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TIME = 391, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TOPIC	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TOPIC = 332, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TOPICWHOTIME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TOPICWHOTIME = 333, \/\/ EUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACECLASS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACECLASS = 209, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACECONNECTING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACECONNECTING = 201, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACEEND	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEEND = 262, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_TRACEHANDSHAKE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEHANDSHAKE = 202, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACELINK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACELINK = 200, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACELOG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACELOG = 261, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACENEWTYPE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACENEWTYPE = 208, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACEOPERATOR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEOPERATOR = 204, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACEPING	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEPING = 262, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_TRACERECONNECT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACERECONNECT = 210, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_TRACESERVER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACESERVER = 206, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACESERVICE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACESERVICE = 207, \/\/ IEU$/;"	e	enum:CL_IRCNumerics
RPL_TRACEUNKNOWN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEUNKNOWN = 203, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRACEUSER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRACEUSER = 205, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_TRYAGAIN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_TRYAGAIN = 263, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_UMODEIS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_UMODEIS = 221, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_UNAWAY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_UNAWAY = 305, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_UNIQOPIS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_UNIQOPIS = 325, \/\/ I$/;"	e	enum:CL_IRCNumerics
RPL_USERHOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_USERHOST = 302, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_USERIP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_USERIP = 307, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_USERS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_USERS = 393, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_USERSSTART	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_USERSSTART = 392, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_VERSION	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_VERSION = 351, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WATCHLIST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WATCHLIST = 606, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WATCHOFF	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WATCHOFF = 602, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WATCHSTAT	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WATCHSTAT = 603, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WELCOME	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WELCOME = 1, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOISADMIN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISADMIN = 308, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WHOISCHANNELS	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISCHANNELS = 319, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOISCHANOP	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISCHANOP = 316, \/\/ IED$/;"	e	enum:CL_IRCNumerics
RPL_WHOISIDLE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISIDLE = 317, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOISOPERATOR	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISOPERATOR = 313, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOISREGNICK	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISREGNICK = 307, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WHOISSADMIN	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISSADMIN = 309, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WHOISSERVER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISSERVER = 312, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOISSVCMSG	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISSVCMSG = 310, \/\/ D$/;"	e	enum:CL_IRCNumerics
RPL_WHOISUSER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOISUSER = 311, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOREPLY	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOREPLY = 352, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_WHOSPCRPL	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOSPCRPL = 354, \/\/ U$/;"	e	enum:CL_IRCNumerics
RPL_WHOWASUSER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_WHOWASUSER = 314, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_YOURCOOKIE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_YOURCOOKIE = 014, \/\/ i$/;"	e	enum:CL_IRCNumerics
RPL_YOUREOPER	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_YOUREOPER = 381, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
RPL_YOURESERVICE	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_YOURESERVICE = 383, \/\/ ID$/;"	e	enum:CL_IRCNumerics
RPL_YOURHOST	/usr/include/ClanLib/Network/IRC/irc_numerics.h	/^	RPL_YOURHOST = 2, \/\/ IEUD$/;"	e	enum:CL_IRCNumerics
Range	/usr/include/ClanLib/Display/glyph_buffer.h	/^		Range() : start(0), end(0) {;}$/;"	f	struct:CL_GlyphBuffer::Range
Range	/usr/include/ClanLib/Display/glyph_buffer.h	/^		Range(const CL_GlyphBuffer& gb) : start(0), end(int(gb.get_glyphs().size())) {;}$/;"	f	struct:CL_GlyphBuffer::Range
Range	/usr/include/ClanLib/Display/glyph_buffer.h	/^		Range(int new_start, int new_end) : start(new_start), end(new_end) {;}$/;"	f	struct:CL_GlyphBuffer::Range
Range	/usr/include/ClanLib/Display/glyph_buffer.h	/^	struct Range$/;"	s	class:CL_GlyphBuffer
SINGLE	/usr/include/ClanLib/Core/XML/xml_token.h	/^		SINGLE = 3$/;"	e	enum:CL_XMLToken::TokenVariant
SOptionType	/usr/include/ClanLib/GUI/component_type.h	/^	struct SOptionType$/;"	s	class:CL_ComponentType
SPACE_BETWEEN_ITEMS	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	const static int SPACE_BETWEEN_ITEMS;$/;"	m	class:CL_RichEdit_Paragraph
SPACE_BETWEEN_LINES	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	const static int SPACE_BETWEEN_LINES;$/;"	m	class:CL_RichEdit_Paragraph
STRING	/usr/include/ClanLib/GUI/component_type.h	/^		STRING,$/;"	e	enum:CL_ComponentType::EDatatype
SWAP_IF_BIG	/usr/include/ClanLib/Core/IOData/cl_endian.h	82;"	d
SWAP_IF_BIG_ALOT	/usr/include/ClanLib/Core/IOData/cl_endian.h	85;"	d
SWAP_IF_LITTLE	/usr/include/ClanLib/Core/IOData/cl_endian.h	83;"	d
SWAP_IF_LITTLE_ALOT	/usr/include/ClanLib/Core/IOData/cl_endian.h	86;"	d
SeekEnum	/usr/include/ClanLib/Core/IOData/inputsource.h	/^	enum SeekEnum$/;"	g	class:CL_InputSource
ShowOnFinish	/usr/include/ClanLib/Display/sprite.h	/^	enum ShowOnFinish$/;"	g	class:CL_Sprite
ShutdownHow	/usr/include/ClanLib/Network/Socket/socket.h	/^	enum ShutdownHow$/;"	g	class:CL_Socket
Slot	/usr/include/ClanLib/Signals/signal_v0.h	/^	typedef CL_Slot_v0 *Slot;$/;"	t	class:CL_Signal_v0
Slot	/usr/include/ClanLib/Signals/signal_v1.h	/^	typedef CL_Slot_v1<PARAM1> *Slot;$/;"	t	class:CL_Signal_v1
Slot	/usr/include/ClanLib/Signals/signal_v2.h	/^	typedef CL_Slot_v2<PARAM1, PARAM2> *Slot;$/;"	t	class:CL_Signal_v2
Slot	/usr/include/ClanLib/Signals/signal_v3.h	/^	typedef CL_Slot_v3<PARAM1, PARAM2, PARAM3> *Slot;$/;"	t	class:CL_Signal_v3
Slot	/usr/include/ClanLib/Signals/signal_v4.h	/^	typedef CL_Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4> *Slot;$/;"	t	class:CL_Signal_v4
Slot	/usr/include/ClanLib/Signals/signal_v5.h	/^	typedef CL_Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5> *Slot;$/;"	t	class:CL_Signal_v5
Slot	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef CL_Slot_v0 *Slot;$/;"	t	class:CL_SlotParent_v0
SlotIterator	/usr/include/ClanLib/Signals/signal_v0.h	/^	typedef std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v0
SlotIterator	/usr/include/ClanLib/Signals/signal_v1.h	/^	typedef typename std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v1
SlotIterator	/usr/include/ClanLib/Signals/signal_v2.h	/^	typedef typename std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v2
SlotIterator	/usr/include/ClanLib/Signals/signal_v3.h	/^	typedef typename std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v3
SlotIterator	/usr/include/ClanLib/Signals/signal_v4.h	/^	typedef typename std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v4
SlotIterator	/usr/include/ClanLib/Signals/signal_v5.h	/^	typedef typename std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_Signal_v5
SlotIterator	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef std::list<Slot>::iterator SlotIterator;$/;"	t	class:CL_SlotParent_v0
TEXT_NODE	/usr/include/ClanLib/Core/XML/dom_node.h	/^		TEXT_NODE                     = 3,$/;"	e	enum:CL_DomNode::NodeType
TEXT_TOKEN	/usr/include/ClanLib/Core/XML/xml_token.h	/^		TEXT_TOKEN                     = 3,$/;"	e	enum:CL_XMLToken::TokenType
TexturePair	/usr/include/ClanLib/Display/sprite_packer.h	/^	typedef std::pair<int, CL_Rect> TexturePair;	\/\/ int texture, CL_Rect frame_position$/;"	t	class:CL_SpritePacker
TitlebarButtons	/usr/include/ClanLib/GUI/window.h	/^	enum TitlebarButtons$/;"	g	class:CL_Window
TokenType	/usr/include/ClanLib/Core/XML/xml_token.h	/^	enum TokenType$/;"	g	class:CL_XMLToken
TokenVariant	/usr/include/ClanLib/Core/XML/xml_token.h	/^	enum TokenVariant$/;"	g	class:CL_XMLToken
Type	/usr/include/ClanLib/Display/input_device.h	/^	enum Type$/;"	g	class:CL_InputDevice
Type	/usr/include/ClanLib/Display/input_event.h	/^	enum Type$/;"	g	class:CL_InputEvent
Type	/usr/include/ClanLib/Network/Socket/socket.h	/^	enum Type$/;"	g	class:CL_Socket
UNIT_X	/usr/include/ClanLib/Core/Math/vector2.h	/^	static const CL_Vector2 UNIT_X;$/;"	m	class:CL_Vector2
UNIT_Y	/usr/include/ClanLib/Core/Math/vector2.h	/^	static const CL_Vector2 UNIT_Y;$/;"	m	class:CL_Vector2
VK_CLOSE_BRACKET	/usr/include/ClanLib/Display/keys.h	202;"	d
VK_OEM_1	/usr/include/ClanLib/Display/keys.h	76;"	d
VK_OEM_2	/usr/include/ClanLib/Display/keys.h	77;"	d
VK_OEM_3	/usr/include/ClanLib/Display/keys.h	78;"	d
VK_OEM_4	/usr/include/ClanLib/Display/keys.h	79;"	d
VK_OEM_5	/usr/include/ClanLib/Display/keys.h	80;"	d
VK_OEM_6	/usr/include/ClanLib/Display/keys.h	81;"	d
VK_OEM_7	/usr/include/ClanLib/Display/keys.h	82;"	d
VK_OEM_8	/usr/include/ClanLib/Display/keys.h	83;"	d
VK_OEM_COMMA	/usr/include/ClanLib/Display/keys.h	74;"	d
VK_OEM_MINUS	/usr/include/ClanLib/Display/keys.h	73;"	d
VK_OEM_PERIOD	/usr/include/ClanLib/Display/keys.h	75;"	d
VK_OEM_PLUS	/usr/include/ClanLib/Display/keys.h	72;"	d
VK_OPEN_BRACKET	/usr/include/ClanLib/Display/keys.h	203;"	d
VirtualCallback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (*VirtualCallback)(CL_SlotParent_v0 &);$/;"	t	class:CL_FunctionSlot_v0
VirtualCallback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (CallbackClass::*VirtualCallback)(CL_SlotParent_v0 &);$/;"	t	class:CL_MethodSlot_v0
VirtualCallback	/usr/include/ClanLib/Signals/slot_v0.h	/^	typedef void (CallbackClass::*VirtualCallback)(CL_SlotParent_v0 &, UserData);$/;"	t	class:CL_UserDataMethodSlot_v0
WRONG_DOCUMENT_ERR	/usr/include/ClanLib/Core/XML/dom_exception.h	/^		WRONG_DOCUMENT_ERR           = 4,$/;"	e	enum:CL_DomException::ExceptionCodes
ZERO	/usr/include/ClanLib/Core/Math/vector2.h	/^	static const CL_Vector2 ZERO;$/;"	m	class:CL_Vector2
__PRETTY_FUNCTION__	/usr/include/ClanLib/Core/System/cl_assert.h	51;"	d
abgr4444	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat abgr4444;$/;"	m	class:CL_PixelFormat
abgr8888	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat abgr8888;$/;"	m	class:CL_PixelFormat
accum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glAccum accum;$/;"	m	class:CL_GLFunctions
accuracy_high	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^	accuracy_high,$/;"	e	enum:CL_OutlineAccuracy
accuracy_low	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^	accuracy_low,$/;"	e	enum:CL_OutlineAccuracy
accuracy_medium	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^	accuracy_medium,$/;"	e	enum:CL_OutlineAccuracy
accuracy_poor	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^	accuracy_poor$/;"	e	enum:CL_OutlineAccuracy
accuracy_raw	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	/^	accuracy_raw,$/;"	e	enum:CL_OutlineAccuracy
activeStencilFaceEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glActiveStencilFaceEXT activeStencilFaceEXT;$/;"	m	class:CL_GLFunctions
activeTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glActiveTextureARB activeTexture;$/;"	m	class:CL_GLFunctions
add	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_GlyphBuffer &add(const CL_GlyphBuffer &other, int center_x = 0, int center_y = 0)$/;"	f	class:CL_GlyphBuffer
add	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_GlyphBuffer &add(int x, int y, unsigned int character)$/;"	f	class:CL_GlyphBuffer
add_font	/usr/include/ClanLib/Display/text_styler.h	/^	void add_font(std::string name, const CL_Font& font)$/;"	f	class:CL_TextStyler
aliceblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color aliceblue;$/;"	m	class:CL_Color
alpha	/usr/include/ClanLib/Display/color.h	/^	float alpha;$/;"	m	class:CL_Colorf
alpha	/usr/include/ClanLib/Display/surface.h	/^	double alpha;$/;"	m	struct:CL_Surface_DrawParams2
alpha	/usr/include/ClanLib/Display/surface.h	/^	double alpha[4];$/;"	m	struct:CL_Surface_DrawParams1
alphaFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glAlphaFunc alphaFunc;$/;"	m	class:CL_GLFunctions
alpha_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int alpha_mask;$/;"	m	class:CL_PixelFormat
ambient	/usr/include/ClanLib/GL/light_source.h	/^	float ambient[4];$/;"	m	class:CL_LightSource
angle_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float> angle_effects;$/;"	m	class:CL_GlyphBuffer
antiquewhite	/usr/include/ClanLib/Display/color.h	/^	static CL_Color antiquewhite;$/;"	m	class:CL_Color
app	/usr/include/ClanLib/Application/clanapp.h	/^	static CL_ClanApplication *app;$/;"	m	class:CL_ClanApplication
apply_alignment	/usr/include/ClanLib/Core/Math/quad.h	/^	void apply_alignment(CL_Origin origin, int x, int y)$/;"	f	class:CL_Quad
apply_alignment	/usr/include/ClanLib/Core/Math/rect.h	/^	void apply_alignment(CL_Origin origin, float x, float y)$/;"	f	class:CL_Rectf
apply_alignment	/usr/include/ClanLib/Core/Math/rect.h	/^	void apply_alignment(CL_Origin origin, int x, int y)$/;"	f	class:CL_Rect
aqua	/usr/include/ClanLib/Display/color.h	/^	static CL_Color aqua;$/;"	m	class:CL_Color
aquamarine	/usr/include/ClanLib/Display/color.h	/^	static CL_Color aquamarine;$/;"	m	class:CL_Color
areTexturesResident	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glAreTexturesResident areTexturesResident;$/;"	m	class:CL_GLFunctions
arrayElement	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glArrayElement arrayElement;$/;"	m	class:CL_GLFunctions
arrow	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	CL_Surface *arrow;$/;"	m	class:CL_MenuNode_Silver
at_end	/usr/include/ClanLib/Display/glyph_buffer.h	/^			bool at_end(Range range) const {if (glyph_num >= range.end) return true; return false;}$/;"	f	class:CL_GlyphBuffer::Iter
attachShader	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glAttachObjectARB attachShader;$/;"	m	class:CL_GLFunctions
available_numbers	/usr/include/ClanLib/Core/Math/number_pool.h	/^	std::set<unsigned short> available_numbers;$/;"	m	class:CL_NumberPool
axis_moved	/usr/include/ClanLib/Display/input_event.h	/^		axis_moved        = 5,$/;"	e	enum:CL_InputEvent::Type
axis_pos	/usr/include/ClanLib/Display/input_event.h	/^	float axis_pos;$/;"	m	class:CL_InputEvent
azure	/usr/include/ClanLib/Display/color.h	/^	static CL_Color azure;$/;"	m	class:CL_Color
ball_moved	/usr/include/ClanLib/Display/input_event.h	/^		ball_moved        = 6$/;"	e	enum:CL_InputEvent::Type
begin	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBegin begin;$/;"	m	class:CL_GLFunctions
beginQuery	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBeginQueryARB beginQuery;$/;"	m	class:CL_GLFunctions
beige	/usr/include/ClanLib/Display/color.h	/^	static CL_Color beige;$/;"	m	class:CL_Color
bgr555	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat bgr555;$/;"	m	class:CL_PixelFormat
bgr565	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat bgr565;$/;"	m	class:CL_PixelFormat
bgr888	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat bgr888;$/;"	m	class:CL_PixelFormat
bindAttribLocation	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBindAttribLocationARB bindAttribLocation;$/;"	m	class:CL_GLFunctions
bindBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBindBufferARB bindBuffer;$/;"	m	class:CL_GLFunctions
bindTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBindTexture bindTexture;$/;"	m	class:CL_GLFunctions
bisque	/usr/include/ClanLib/Display/color.h	/^	static CL_Color bisque;$/;"	m	class:CL_Color
bitmap	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBitmap bitmap;$/;"	m	class:CL_GLFunctions
black	/usr/include/ClanLib/Display/color.h	/^	static CL_Color black;$/;"	m	class:CL_Color
blanchedalmond	/usr/include/ClanLib/Display/color.h	/^	static CL_Color blanchedalmond;$/;"	m	class:CL_Color
blendColor	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBlendColorEXT blendColor;$/;"	m	class:CL_GLFunctions
blendEquation	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBlendEquationEXT blendEquation;$/;"	m	class:CL_GLFunctions
blendFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBlendFunc blendFunc;$/;"	m	class:CL_GLFunctions
blendFuncSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBlendFuncSeparateEXT blendFuncSeparate;$/;"	m	class:CL_GLFunctions
blend_constant_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_constant_alpha,           \/\/ source or destination (Ac, Ac, Ac, Ac)$/;"	e	enum:CL_BlendFunc
blend_constant_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_constant_color,           \/\/ source or destination (Rc, Gc, Bc, Ac)$/;"	e	enum:CL_BlendFunc
blend_dest	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blend_dest;$/;"	m	struct:CL_Surface_DrawParams1
blend_dest	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blend_dest;$/;"	m	struct:CL_Surface_DrawParams2
blend_dest_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_dest_color,               \/\/ source                (Rd, Gd, Bd, Ad)$/;"	e	enum:CL_BlendFunc
blend_dst_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_dst_alpha,                \/\/ source or destination (Ad, Ad, Ad, Ad)$/;"	e	enum:CL_BlendFunc
blend_one	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one,                      \/\/ source or destination (1, 1, 1, 1)$/;"	e	enum:CL_BlendFunc
blend_one_minus_constant_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_constant_alpha  \/\/ source or destination (1, 1, 1, 1) - (Ac, Ac, Ac, Ac)$/;"	e	enum:CL_BlendFunc
blend_one_minus_constant_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_constant_color, \/\/ source or destination (1, 1, 1, 1) - (Rc, Gc, Bc, Ac)$/;"	e	enum:CL_BlendFunc
blend_one_minus_dest_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_dest_alpha,     \/\/ source or destination (1, 1, 1, 1) - (Ad, Ad, Ad, Ad)$/;"	e	enum:CL_BlendFunc
blend_one_minus_dest_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_dest_color,     \/\/ source                (1, 1, 1, 1) - (Rd, Gd, Bd, Ad)$/;"	e	enum:CL_BlendFunc
blend_one_minus_src_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_src_alpha,      \/\/ source or destination (1, 1, 1, 1) - (As, As, As, As)$/;"	e	enum:CL_BlendFunc
blend_one_minus_src_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_one_minus_src_color,      \/\/ destination           (1, 1, 1, 1) - (Rs, Gs, Bs, As)$/;"	e	enum:CL_BlendFunc
blend_src	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blend_src;$/;"	m	struct:CL_Surface_DrawParams1
blend_src	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blend_src;$/;"	m	struct:CL_Surface_DrawParams2
blend_src_alpha	/usr/include/ClanLib/Display/blend_func.h	/^	blend_src_alpha,                \/\/ source or destination (As, As, As, As)$/;"	e	enum:CL_BlendFunc
blend_src_alpha_saturate	/usr/include/ClanLib/Display/blend_func.h	/^	blend_src_alpha_saturate,       \/\/ source                (f, f, f, 1) - f = min(As, 1 - Ad)$/;"	e	enum:CL_BlendFunc
blend_src_color	/usr/include/ClanLib/Display/blend_func.h	/^	blend_src_color,                \/\/ destination           (Rs, Gs, Bs, As)$/;"	e	enum:CL_BlendFunc
blend_zero	/usr/include/ClanLib/Display/blend_func.h	/^	blend_zero,                     \/\/ source or destination (0, 0, 0, 0)$/;"	e	enum:CL_BlendFunc
blendfunc_dest_alpha	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blendfunc_dest_alpha;$/;"	m	struct:CL_Surface_DrawParams1
blendfunc_dest_alpha	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blendfunc_dest_alpha;$/;"	m	struct:CL_Surface_DrawParams2
blendfunc_src_alpha	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blendfunc_src_alpha;$/;"	m	struct:CL_Surface_DrawParams1
blendfunc_src_alpha	/usr/include/ClanLib/Display/surface.h	/^	CL_BlendFunc blendfunc_src_alpha;$/;"	m	struct:CL_Surface_DrawParams2
blue	/usr/include/ClanLib/Display/color.h	/^	float blue;$/;"	m	class:CL_Colorf
blue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color blue;$/;"	m	class:CL_Color
blue	/usr/include/ClanLib/Display/surface.h	/^	double blue;$/;"	m	struct:CL_Surface_DrawParams2
blue	/usr/include/ClanLib/Display/surface.h	/^	double blue[4];$/;"	m	struct:CL_Surface_DrawParams1
blue_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int blue_mask;$/;"	m	class:CL_PixelFormat
blueviolet	/usr/include/ClanLib/Display/color.h	/^	static CL_Color blueviolet;$/;"	m	class:CL_Color
border_size	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	int border_size;$/;"	m	class:CL_InputBox_StyleBase
bottom	/usr/include/ClanLib/Core/Math/rect.h	/^	float bottom;$/;"	m	class:CL_Rectf
bottom	/usr/include/ClanLib/Core/Math/rect.h	/^	int bottom;$/;"	m	class:CL_Rect
bottom_left	/usr/include/ClanLib/Display/gradient.h	/^	CL_Color bottom_left;$/;"	m	class:CL_Gradient
bottom_right	/usr/include/ClanLib/Display/gradient.h	/^	CL_Color bottom_right;$/;"	m	class:CL_Gradient
bounding_rect	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Rect bounding_rect(CL_Rect dest, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
bounding_rect	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Rect bounding_rect(Range range, int x = 0, int y = 0, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
bounding_rect	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Rect bounding_rect(int x = 0, int y = 0, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
bounding_rect	/usr/include/ClanLib/Display/text_styler.h	/^	CL_Rect bounding_rect($/;"	f	class:CL_TextStyler
brown	/usr/include/ClanLib/Display/color.h	/^	static CL_Color brown;$/;"	m	class:CL_Color
bufferData	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBufferDataARB bufferData;$/;"	m	class:CL_GLFunctions
bufferSubData	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glBufferSubDataARB bufferSubData;$/;"	m	class:CL_GLFunctions
burlywood	/usr/include/ClanLib/Display/color.h	/^	static CL_Color burlywood;$/;"	m	class:CL_Color
button	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Button *button;$/;"	m	class:CL_Button_Silver
button_cancel	/usr/include/ClanLib/GUI/filedialog.h	/^		button_cancel = 2$/;"	e	enum:CL_FileDialog::ButtonPressed
button_close	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Button *button_close;$/;"	m	class:CL_Window_Silver
button_decrease	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_Button *button_decrease;$/;"	m	class:CL_ScrollBar_Silver
button_help	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Button *button_help;$/;"	m	class:CL_Window_Silver
button_increase	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_Button *button_increase;$/;"	m	class:CL_ScrollBar_Silver
button_maximize	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Button *button_maximize;$/;"	m	class:CL_Window_Silver
button_minimize	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Button *button_minimize;$/;"	m	class:CL_Window_Silver
button_none	/usr/include/ClanLib/GUI/filedialog.h	/^		button_none = 0,$/;"	e	enum:CL_FileDialog::ButtonPressed
button_ok	/usr/include/ClanLib/GUI/filedialog.h	/^		button_ok = 1,$/;"	e	enum:CL_FileDialog::ButtonPressed
cadetblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color cadetblue;$/;"	m	class:CL_Color
calc_union	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect calc_union(const CL_Rect &rect)$/;"	f	class:CL_Rect
calc_union	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf calc_union(const CL_Rectf &rect)$/;"	f	class:CL_Rectf
call	/usr/include/ClanLib/Signals/signal_v0.h	/^	void call()$/;"	f	class:CL_Signal_v0
call	/usr/include/ClanLib/Signals/signal_v1.h	/^	void call(PARAM1 param1)$/;"	f	class:CL_Signal_v1
call	/usr/include/ClanLib/Signals/signal_v2.h	/^	void call(PARAM1 param1, PARAM2 param2)$/;"	f	class:CL_Signal_v2
call	/usr/include/ClanLib/Signals/signal_v3.h	/^	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3)$/;"	f	class:CL_Signal_v3
call	/usr/include/ClanLib/Signals/signal_v4.h	/^	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4)$/;"	f	class:CL_Signal_v4
call	/usr/include/ClanLib/Signals/signal_v5.h	/^	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5)$/;"	f	class:CL_Signal_v5
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super) { callback(user_data); }$/;"	f	class:CL_UserDataFunctionSlot_v0
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super)$/;"	f	class:CL_FunctionSlot_v0
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super)$/;"	f	class:CL_FunctorSlot_v0
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super)$/;"	f	class:CL_FunctorVirtualSlot_v0
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super)$/;"	f	class:CL_MethodSlot_v0
call	/usr/include/ClanLib/Signals/slot_v0.h	/^	virtual void call(CL_SlotParent_v0 &super)$/;"	f	class:CL_UserDataMethodSlot_v0
call	/usr/include/ClanLib/Signals/slot_v1.h	/^	virtual void call(PARAM1 param1) { (cb_class->*callback)(param1); }$/;"	f	class:CL_MethodSlot_v1
call	/usr/include/ClanLib/Signals/slot_v1.h	/^	virtual void call(PARAM1 param1) { (cb_class->*callback)(param1, user_data); }$/;"	f	class:CL_UserDataMethodSlot_v1
call	/usr/include/ClanLib/Signals/slot_v1.h	/^	virtual void call(PARAM1 param1) { callback(param1); }$/;"	f	class:CL_FunctionSlot_v1
call	/usr/include/ClanLib/Signals/slot_v1.h	/^	virtual void call(PARAM1 param1) { callback(param1, user_data); }$/;"	f	class:CL_UserDataFunctionSlot_v1
call	/usr/include/ClanLib/Signals/slot_v1.h	/^	virtual void call(PARAM1 param1) { functor(param1); }$/;"	f	class:CL_FunctorSlot_v1
call	/usr/include/ClanLib/Signals/slot_v2.h	/^	virtual void call(PARAM1 param1, PARAM2 param2) { (cb_class->*callback)(param1, param2); }$/;"	f	class:CL_MethodSlot_v2
call	/usr/include/ClanLib/Signals/slot_v2.h	/^	virtual void call(PARAM1 param1, PARAM2 param2) { (cb_class->*callback)(param1, param2, user_data); }$/;"	f	class:CL_UserDataMethodSlot_v2
call	/usr/include/ClanLib/Signals/slot_v2.h	/^	virtual void call(PARAM1 param1, PARAM2 param2) { callback(param1, param2); }$/;"	f	class:CL_FunctionSlot_v2
call	/usr/include/ClanLib/Signals/slot_v2.h	/^	virtual void call(PARAM1 param1, PARAM2 param2) { functor(param1, param2); }$/;"	f	class:CL_FunctorSlot_v2
call	/usr/include/ClanLib/Signals/slot_v3.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { (cb_class->*callback)(param1, param2, param3); }$/;"	f	class:CL_MethodSlot_v3
call	/usr/include/ClanLib/Signals/slot_v3.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { (cb_class->*callback)(param1, param2, param3, user_data); }$/;"	f	class:CL_UserDataMethodSlot_v3
call	/usr/include/ClanLib/Signals/slot_v3.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { callback(param1, param2, param3); }$/;"	f	class:CL_FunctionSlot_v3
call	/usr/include/ClanLib/Signals/slot_v3.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { functor(param1, param2, param3); }$/;"	f	class:CL_FunctorSlot_v3
call	/usr/include/ClanLib/Signals/slot_v4.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { (cb_class->*callback)(param1, param2, param3, param4); }$/;"	f	class:CL_MethodSlot_v4
call	/usr/include/ClanLib/Signals/slot_v4.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { (cb_class->*callback)(param1, param2, param3, param4, user_data); }$/;"	f	class:CL_UserDataMethodSlot_v4
call	/usr/include/ClanLib/Signals/slot_v4.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { callback(param1, param2, param3, param4); }$/;"	f	class:CL_FunctionSlot_v4
call	/usr/include/ClanLib/Signals/slot_v4.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { functor(param1, param2, param3, param4); }$/;"	f	class:CL_FunctorSlot_v4
call	/usr/include/ClanLib/Signals/slot_v5.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { (cb_class->*callback)(param1, param2, param3, param4, param5); }$/;"	f	class:CL_MethodSlot_v5
call	/usr/include/ClanLib/Signals/slot_v5.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { (cb_class->*callback)(param1, param2, param3, param4, param5, user_data); }$/;"	f	class:CL_UserDataMethodSlot_v5
call	/usr/include/ClanLib/Signals/slot_v5.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { callback(param1, param2, param3, param4, param5); }$/;"	f	class:CL_FunctionSlot_v5
call	/usr/include/ClanLib/Signals/slot_v5.h	/^	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { functor(param1, param2, param3, param4, param5); }$/;"	f	class:CL_FunctorSlot_v5
callList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCallList callList;$/;"	m	class:CL_GLFunctions
callLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCallLists callLists;$/;"	m	class:CL_GLFunctions
callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v0
callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v0
callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	Callback callback;$/;"	m	class:CL_UserDataFunctionSlot_v0
callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v0
callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v1
callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v1
callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	Callback callback;$/;"	m	class:CL_UserDataFunctionSlot_v1
callback	/usr/include/ClanLib/Signals/slot_v1.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v1
callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v2
callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v2
callback	/usr/include/ClanLib/Signals/slot_v2.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v2
callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v3
callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v3
callback	/usr/include/ClanLib/Signals/slot_v3.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v3
callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v4
callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v4
callback	/usr/include/ClanLib/Signals/slot_v4.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v4
callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	Callback callback;$/;"	m	class:CL_FunctionSlot_v5
callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	Callback callback;$/;"	m	class:CL_MethodSlot_v5
callback	/usr/include/ClanLib/Signals/slot_v5.h	/^	Callback callback;$/;"	m	class:CL_UserDataMethodSlot_v5
callback	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	void callback()$/;"	f	class:CL_SlotBuffer_v0
callback	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	void callback(PARAM1 p1)$/;"	f	class:CL_SlotBuffer_v1
catch_final	/usr/include/ClanLib/Signals/signal_v0.h	/^	void catch_final(CL_Signal_v0_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v0
catch_final	/usr/include/ClanLib/Signals/signal_v1.h	/^	void catch_final(CL_Signal_v1_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v1
catch_final	/usr/include/ClanLib/Signals/signal_v2.h	/^	void catch_final(CL_Signal_v2_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v2
catch_final	/usr/include/ClanLib/Signals/signal_v3.h	/^	void catch_final(CL_Signal_v3_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v3
catch_final	/usr/include/ClanLib/Signals/signal_v4.h	/^	void catch_final(CL_Signal_v4_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v4
catch_final	/usr/include/ClanLib/Signals/signal_v5.h	/^	void catch_final(CL_Signal_v5_Generic *data, std::list<SlotIterator> &remove_slots)$/;"	f	class:CL_Signal_v5
cb_class	/usr/include/ClanLib/Signals/slot_v0.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v0
cb_class	/usr/include/ClanLib/Signals/slot_v0.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v0
cb_class	/usr/include/ClanLib/Signals/slot_v1.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v1
cb_class	/usr/include/ClanLib/Signals/slot_v1.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v1
cb_class	/usr/include/ClanLib/Signals/slot_v2.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v2
cb_class	/usr/include/ClanLib/Signals/slot_v2.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v2
cb_class	/usr/include/ClanLib/Signals/slot_v3.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v3
cb_class	/usr/include/ClanLib/Signals/slot_v3.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v3
cb_class	/usr/include/ClanLib/Signals/slot_v4.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v4
cb_class	/usr/include/ClanLib/Signals/slot_v4.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v4
cb_class	/usr/include/ClanLib/Signals/slot_v5.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_MethodSlot_v5
cb_class	/usr/include/ClanLib/Signals/slot_v5.h	/^	CallbackClass *cb_class;$/;"	m	class:CL_UserDataMethodSlot_v5
cd	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U const& cd() const {return *ptr;}$/;"	f	class:CL_LazyCopyPtr
cd	/usr/include/ClanLib/Core/System/owningptr.h	/^		U const& cd() const {return *((const U*)ptr);}$/;"	f	class:CL_OwningPtr
center	/usr/include/ClanLib/GUI/image.h	/^		center,$/;"	e	enum:CL_Image::Mode
center	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^		center,$/;"	e	enum:CL_Frame_Silver::Mode
char_idx	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		int char_idx;$/;"	m	struct:CL_RichEdit_Paragraph::OneLineInfo
character	/usr/include/ClanLib/Display/glyph_buffer.h	/^		unsigned int character;$/;"	m	struct:CL_GlyphBuffer::Glyph
chartreuse	/usr/include/ClanLib/Display/color.h	/^	static CL_Color chartreuse;$/;"	m	class:CL_Color
checkbox	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_CheckBox *checkbox;$/;"	m	class:CL_CheckBox_Silver
chocolate	/usr/include/ClanLib/Display/color.h	/^	static CL_Color chocolate;$/;"	m	class:CL_Color
clAccum	/usr/include/ClanLib/GL/opengl_wrap.h	4345;"	d
clActiveTexture	/usr/include/ClanLib/GL/opengl_wrap.h	4719;"	d
clAlphaFunc	/usr/include/ClanLib/GL/opengl_wrap.h	4346;"	d
clAreTexturesResident	/usr/include/ClanLib/GL/opengl_wrap.h	4347;"	d
clArrayElement	/usr/include/ClanLib/GL/opengl_wrap.h	4348;"	d
clAttachShader	/usr/include/ClanLib/GL/opengl_wrap.h	4835;"	d
clBegin	/usr/include/ClanLib/GL/opengl_wrap.h	4349;"	d
clBeginQuery	/usr/include/ClanLib/GL/opengl_wrap.h	4822;"	d
clBindAttribLocation	/usr/include/ClanLib/GL/opengl_wrap.h	4909;"	d
clBindBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4808;"	d
clBindTexture	/usr/include/ClanLib/GL/opengl_wrap.h	4350;"	d
clBitmap	/usr/include/ClanLib/GL/opengl_wrap.h	4351;"	d
clBlendColor	/usr/include/ClanLib/GL/opengl_wrap.h	4717;"	d
clBlendEquation	/usr/include/ClanLib/GL/opengl_wrap.h	4718;"	d
clBlendFunc	/usr/include/ClanLib/GL/opengl_wrap.h	4352;"	d
clBlendFuncSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	4791;"	d
clBufferData	/usr/include/ClanLib/GL/opengl_wrap.h	4812;"	d
clBufferSubData	/usr/include/ClanLib/GL/opengl_wrap.h	4813;"	d
clCallList	/usr/include/ClanLib/GL/opengl_wrap.h	4353;"	d
clCallLists	/usr/include/ClanLib/GL/opengl_wrap.h	4354;"	d
clClear	/usr/include/ClanLib/GL/opengl_wrap.h	4355;"	d
clClearAccum	/usr/include/ClanLib/GL/opengl_wrap.h	4356;"	d
clClearColor	/usr/include/ClanLib/GL/opengl_wrap.h	4357;"	d
clClearDepth	/usr/include/ClanLib/GL/opengl_wrap.h	4358;"	d
clClearIndex	/usr/include/ClanLib/GL/opengl_wrap.h	4359;"	d
clClearStencil	/usr/include/ClanLib/GL/opengl_wrap.h	4360;"	d
clClientActiveTexture	/usr/include/ClanLib/GL/opengl_wrap.h	4720;"	d
clClipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	4361;"	d
clColor3b	/usr/include/ClanLib/GL/opengl_wrap.h	4362;"	d
clColor3bv	/usr/include/ClanLib/GL/opengl_wrap.h	4363;"	d
clColor3d	/usr/include/ClanLib/GL/opengl_wrap.h	4364;"	d
clColor3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4365;"	d
clColor3f	/usr/include/ClanLib/GL/opengl_wrap.h	4366;"	d
clColor3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4367;"	d
clColor3i	/usr/include/ClanLib/GL/opengl_wrap.h	4368;"	d
clColor3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4369;"	d
clColor3s	/usr/include/ClanLib/GL/opengl_wrap.h	4370;"	d
clColor3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4371;"	d
clColor3ub	/usr/include/ClanLib/GL/opengl_wrap.h	4372;"	d
clColor3ubv	/usr/include/ClanLib/GL/opengl_wrap.h	4373;"	d
clColor3ui	/usr/include/ClanLib/GL/opengl_wrap.h	4374;"	d
clColor3uiv	/usr/include/ClanLib/GL/opengl_wrap.h	4375;"	d
clColor3us	/usr/include/ClanLib/GL/opengl_wrap.h	4376;"	d
clColor3usv	/usr/include/ClanLib/GL/opengl_wrap.h	4377;"	d
clColor4b	/usr/include/ClanLib/GL/opengl_wrap.h	4378;"	d
clColor4bv	/usr/include/ClanLib/GL/opengl_wrap.h	4379;"	d
clColor4d	/usr/include/ClanLib/GL/opengl_wrap.h	4380;"	d
clColor4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4381;"	d
clColor4f	/usr/include/ClanLib/GL/opengl_wrap.h	4382;"	d
clColor4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4383;"	d
clColor4i	/usr/include/ClanLib/GL/opengl_wrap.h	4384;"	d
clColor4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4385;"	d
clColor4s	/usr/include/ClanLib/GL/opengl_wrap.h	4386;"	d
clColor4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4387;"	d
clColor4ub	/usr/include/ClanLib/GL/opengl_wrap.h	4388;"	d
clColor4ubv	/usr/include/ClanLib/GL/opengl_wrap.h	4389;"	d
clColor4ui	/usr/include/ClanLib/GL/opengl_wrap.h	4390;"	d
clColor4uiv	/usr/include/ClanLib/GL/opengl_wrap.h	4391;"	d
clColor4us	/usr/include/ClanLib/GL/opengl_wrap.h	4392;"	d
clColor4usv	/usr/include/ClanLib/GL/opengl_wrap.h	4393;"	d
clColorMask	/usr/include/ClanLib/GL/opengl_wrap.h	4394;"	d
clColorMaterial	/usr/include/ClanLib/GL/opengl_wrap.h	4395;"	d
clColorPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4396;"	d
clColorSubTable	/usr/include/ClanLib/GL/opengl_wrap.h	4692;"	d
clColorTable	/usr/include/ClanLib/GL/opengl_wrap.h	4685;"	d
clColorTableParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4688;"	d
clColorTableParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4687;"	d
clCompileShader	/usr/include/ClanLib/GL/opengl_wrap.h	4833;"	d
clCompressedTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4753;"	d
clCompressedTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4754;"	d
clCompressedTexImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	4755;"	d
clCompressedTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4756;"	d
clCompressedTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4757;"	d
clCompressedTexSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	4758;"	d
clConvolutionFilter1D	/usr/include/ClanLib/GL/opengl_wrap.h	4694;"	d
clConvolutionFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	4695;"	d
clConvolutionParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	4703;"	d
clConvolutionParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4704;"	d
clConvolutionParameteri	/usr/include/ClanLib/GL/opengl_wrap.h	4701;"	d
clConvolutionParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4702;"	d
clCopyColorSubTable	/usr/include/ClanLib/GL/opengl_wrap.h	4693;"	d
clCopyColorTable	/usr/include/ClanLib/GL/opengl_wrap.h	4686;"	d
clCopyConvolutionFilter1D	/usr/include/ClanLib/GL/opengl_wrap.h	4696;"	d
clCopyConvolutionFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	4697;"	d
clCopyPixels	/usr/include/ClanLib/GL/opengl_wrap.h	4397;"	d
clCopyTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4398;"	d
clCopyTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4399;"	d
clCopyTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4400;"	d
clCopyTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4401;"	d
clCopyTexSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	4402;"	d
clCreateProgram	/usr/include/ClanLib/GL/opengl_wrap.h	4834;"	d
clCreateShader	/usr/include/ClanLib/GL/opengl_wrap.h	4831;"	d
clCullFace	/usr/include/ClanLib/GL/opengl_wrap.h	4403;"	d
clDeleteBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	4809;"	d
clDeleteLists	/usr/include/ClanLib/GL/opengl_wrap.h	4404;"	d
clDeleteProgram	/usr/include/ClanLib/GL/opengl_wrap.h	4828;"	d
clDeleteQueries	/usr/include/ClanLib/GL/opengl_wrap.h	4820;"	d
clDeleteShader	/usr/include/ClanLib/GL/opengl_wrap.h	4827;"	d
clDeleteTextures	/usr/include/ClanLib/GL/opengl_wrap.h	4405;"	d
clDepthFunc	/usr/include/ClanLib/GL/opengl_wrap.h	4406;"	d
clDepthMask	/usr/include/ClanLib/GL/opengl_wrap.h	4407;"	d
clDepthRange	/usr/include/ClanLib/GL/opengl_wrap.h	4408;"	d
clDetachShader	/usr/include/ClanLib/GL/opengl_wrap.h	4830;"	d
clDisable	/usr/include/ClanLib/GL/opengl_wrap.h	4409;"	d
clDisableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	4410;"	d
clDisableVertexAttribArray	/usr/include/ClanLib/GL/opengl_wrap.h	4908;"	d
clDrawArrays	/usr/include/ClanLib/GL/opengl_wrap.h	4411;"	d
clDrawBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4412;"	d
clDrawBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	4916;"	d
clDrawElements	/usr/include/ClanLib/GL/opengl_wrap.h	4413;"	d
clDrawPixels	/usr/include/ClanLib/GL/opengl_wrap.h	4414;"	d
clDrawRangeElements	/usr/include/ClanLib/GL/opengl_wrap.h	4683;"	d
clEdgeFlag	/usr/include/ClanLib/GL/opengl_wrap.h	4415;"	d
clEdgeFlagPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4416;"	d
clEdgeFlagv	/usr/include/ClanLib/GL/opengl_wrap.h	4417;"	d
clEnable	/usr/include/ClanLib/GL/opengl_wrap.h	4418;"	d
clEnableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	4419;"	d
clEnableVertexAttribArray	/usr/include/ClanLib/GL/opengl_wrap.h	4907;"	d
clEnd	/usr/include/ClanLib/GL/opengl_wrap.h	4420;"	d
clEndList	/usr/include/ClanLib/GL/opengl_wrap.h	4421;"	d
clEndQuery	/usr/include/ClanLib/GL/opengl_wrap.h	4823;"	d
clEvalCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	4422;"	d
clEvalCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	4423;"	d
clEvalCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	4424;"	d
clEvalCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	4425;"	d
clEvalCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	4426;"	d
clEvalCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4427;"	d
clEvalCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	4428;"	d
clEvalCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4429;"	d
clEvalMesh1	/usr/include/ClanLib/GL/opengl_wrap.h	4430;"	d
clEvalMesh2	/usr/include/ClanLib/GL/opengl_wrap.h	4431;"	d
clEvalPoint1	/usr/include/ClanLib/GL/opengl_wrap.h	4432;"	d
clEvalPoint2	/usr/include/ClanLib/GL/opengl_wrap.h	4433;"	d
clFeedbackBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4434;"	d
clFinish	/usr/include/ClanLib/GL/opengl_wrap.h	4435;"	d
clFlush	/usr/include/ClanLib/GL/opengl_wrap.h	4436;"	d
clFogCoordPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4769;"	d
clFogCoordd	/usr/include/ClanLib/GL/opengl_wrap.h	4765;"	d
clFogCoorddv	/usr/include/ClanLib/GL/opengl_wrap.h	4766;"	d
clFogCoordf	/usr/include/ClanLib/GL/opengl_wrap.h	4767;"	d
clFogCoordfv	/usr/include/ClanLib/GL/opengl_wrap.h	4768;"	d
clFogf	/usr/include/ClanLib/GL/opengl_wrap.h	4437;"	d
clFogfv	/usr/include/ClanLib/GL/opengl_wrap.h	4438;"	d
clFogi	/usr/include/ClanLib/GL/opengl_wrap.h	4439;"	d
clFogiv	/usr/include/ClanLib/GL/opengl_wrap.h	4440;"	d
clFrontFace	/usr/include/ClanLib/GL/opengl_wrap.h	4441;"	d
clFrustum	/usr/include/ClanLib/GL/opengl_wrap.h	4442;"	d
clGenBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	4810;"	d
clGenLists	/usr/include/ClanLib/GL/opengl_wrap.h	4443;"	d
clGenQueries	/usr/include/ClanLib/GL/opengl_wrap.h	4819;"	d
clGenQueryObjectuiv	/usr/include/ClanLib/GL/opengl_wrap.h	4826;"	d
clGenTextures	/usr/include/ClanLib/GL/opengl_wrap.h	4444;"	d
clGetActiveAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	4910;"	d
clGetActiveUniform	/usr/include/ClanLib/GL/opengl_wrap.h	4866;"	d
clGetAttachedShaders	/usr/include/ClanLib/GL/opengl_wrap.h	4864;"	d
clGetAttribLocation	/usr/include/ClanLib/GL/opengl_wrap.h	4911;"	d
clGetBooleanv	/usr/include/ClanLib/GL/opengl_wrap.h	4445;"	d
clGetBufferParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4817;"	d
clGetBufferPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	4818;"	d
clGetBufferSubData	/usr/include/ClanLib/GL/opengl_wrap.h	4814;"	d
clGetClipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	4446;"	d
clGetColorTable	/usr/include/ClanLib/GL/opengl_wrap.h	4689;"	d
clGetColorTableParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4691;"	d
clGetColorTableParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4690;"	d
clGetCompressedTexImage	/usr/include/ClanLib/GL/opengl_wrap.h	4759;"	d
clGetConvolutionFilter	/usr/include/ClanLib/GL/opengl_wrap.h	4698;"	d
clGetConvolutionParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4706;"	d
clGetConvolutionParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4705;"	d
clGetDoublev	/usr/include/ClanLib/GL/opengl_wrap.h	4447;"	d
clGetError	/usr/include/ClanLib/GL/opengl_wrap.h	4448;"	d
clGetFloatv	/usr/include/ClanLib/GL/opengl_wrap.h	4449;"	d
clGetHandle	/usr/include/ClanLib/GL/opengl_wrap.h	4829;"	d
clGetHistogram	/usr/include/ClanLib/GL/opengl_wrap.h	4709;"	d
clGetHistogramParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4711;"	d
clGetHistogramParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4710;"	d
clGetIntegerv	/usr/include/ClanLib/GL/opengl_wrap.h	4450;"	d
clGetLightfv	/usr/include/ClanLib/GL/opengl_wrap.h	4451;"	d
clGetLightiv	/usr/include/ClanLib/GL/opengl_wrap.h	4452;"	d
clGetMapdv	/usr/include/ClanLib/GL/opengl_wrap.h	4453;"	d
clGetMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	4454;"	d
clGetMapiv	/usr/include/ClanLib/GL/opengl_wrap.h	4455;"	d
clGetMaterialfv	/usr/include/ClanLib/GL/opengl_wrap.h	4456;"	d
clGetMaterialiv	/usr/include/ClanLib/GL/opengl_wrap.h	4457;"	d
clGetMinmax	/usr/include/ClanLib/GL/opengl_wrap.h	4714;"	d
clGetMinmaxParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4716;"	d
clGetMinmaxParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4715;"	d
clGetPixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	4458;"	d
clGetPixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	4459;"	d
clGetPixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	4460;"	d
clGetPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	4461;"	d
clGetPolygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	4462;"	d
clGetProgramInfoLog	/usr/include/ClanLib/GL/opengl_wrap.h	4863;"	d
clGetProgramfv	/usr/include/ClanLib/GL/opengl_wrap.h	4858;"	d
clGetProgramiv	/usr/include/ClanLib/GL/opengl_wrap.h	4859;"	d
clGetQueryObjectiv	/usr/include/ClanLib/GL/opengl_wrap.h	4825;"	d
clGetQueryiv	/usr/include/ClanLib/GL/opengl_wrap.h	4824;"	d
clGetSeparableFilter	/usr/include/ClanLib/GL/opengl_wrap.h	4700;"	d
clGetShaderInfoLog	/usr/include/ClanLib/GL/opengl_wrap.h	4862;"	d
clGetShaderSource	/usr/include/ClanLib/GL/opengl_wrap.h	4869;"	d
clGetShaderfv	/usr/include/ClanLib/GL/opengl_wrap.h	4860;"	d
clGetShaderiv	/usr/include/ClanLib/GL/opengl_wrap.h	4861;"	d
clGetString	/usr/include/ClanLib/GL/opengl_wrap.h	4463;"	d
clGetTexEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	4464;"	d
clGetTexEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	4465;"	d
clGetTexGendv	/usr/include/ClanLib/GL/opengl_wrap.h	4466;"	d
clGetTexGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	4467;"	d
clGetTexGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	4468;"	d
clGetTexImage	/usr/include/ClanLib/GL/opengl_wrap.h	4469;"	d
clGetTexLevelParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4470;"	d
clGetTexLevelParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4471;"	d
clGetTexParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4472;"	d
clGetTexParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4473;"	d
clGetUniformLocation	/usr/include/ClanLib/GL/opengl_wrap.h	4865;"	d
clGetUniformfv	/usr/include/ClanLib/GL/opengl_wrap.h	4867;"	d
clGetUniformiv	/usr/include/ClanLib/GL/opengl_wrap.h	4868;"	d
clGetVertexAttribPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	4915;"	d
clGetVertexAttribdv	/usr/include/ClanLib/GL/opengl_wrap.h	4912;"	d
clGetVertexAttribfv	/usr/include/ClanLib/GL/opengl_wrap.h	4913;"	d
clGetVertexAttribiv	/usr/include/ClanLib/GL/opengl_wrap.h	4914;"	d
clHint	/usr/include/ClanLib/GL/opengl_wrap.h	4474;"	d
clHistogram	/usr/include/ClanLib/GL/opengl_wrap.h	4707;"	d
clIndexMask	/usr/include/ClanLib/GL/opengl_wrap.h	4475;"	d
clIndexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4476;"	d
clIndexd	/usr/include/ClanLib/GL/opengl_wrap.h	4477;"	d
clIndexdv	/usr/include/ClanLib/GL/opengl_wrap.h	4478;"	d
clIndexf	/usr/include/ClanLib/GL/opengl_wrap.h	4479;"	d
clIndexfv	/usr/include/ClanLib/GL/opengl_wrap.h	4480;"	d
clIndexi	/usr/include/ClanLib/GL/opengl_wrap.h	4481;"	d
clIndexiv	/usr/include/ClanLib/GL/opengl_wrap.h	4482;"	d
clIndexs	/usr/include/ClanLib/GL/opengl_wrap.h	4483;"	d
clIndexsv	/usr/include/ClanLib/GL/opengl_wrap.h	4484;"	d
clIndexub	/usr/include/ClanLib/GL/opengl_wrap.h	4485;"	d
clIndexubv	/usr/include/ClanLib/GL/opengl_wrap.h	4486;"	d
clInitNames	/usr/include/ClanLib/GL/opengl_wrap.h	4487;"	d
clInterleavedArrays	/usr/include/ClanLib/GL/opengl_wrap.h	4488;"	d
clIsBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4811;"	d
clIsEnabled	/usr/include/ClanLib/GL/opengl_wrap.h	4489;"	d
clIsList	/usr/include/ClanLib/GL/opengl_wrap.h	4490;"	d
clIsQuery	/usr/include/ClanLib/GL/opengl_wrap.h	4821;"	d
clIsTexture	/usr/include/ClanLib/GL/opengl_wrap.h	4491;"	d
clLightModelf	/usr/include/ClanLib/GL/opengl_wrap.h	4492;"	d
clLightModelfv	/usr/include/ClanLib/GL/opengl_wrap.h	4493;"	d
clLightModeli	/usr/include/ClanLib/GL/opengl_wrap.h	4494;"	d
clLightModeliv	/usr/include/ClanLib/GL/opengl_wrap.h	4495;"	d
clLightf	/usr/include/ClanLib/GL/opengl_wrap.h	4496;"	d
clLightfv	/usr/include/ClanLib/GL/opengl_wrap.h	4497;"	d
clLighti	/usr/include/ClanLib/GL/opengl_wrap.h	4498;"	d
clLightiv	/usr/include/ClanLib/GL/opengl_wrap.h	4499;"	d
clLineStipple	/usr/include/ClanLib/GL/opengl_wrap.h	4500;"	d
clLineWidth	/usr/include/ClanLib/GL/opengl_wrap.h	4501;"	d
clLinkProgram	/usr/include/ClanLib/GL/opengl_wrap.h	4836;"	d
clListBase	/usr/include/ClanLib/GL/opengl_wrap.h	4502;"	d
clLoadIdentity	/usr/include/ClanLib/GL/opengl_wrap.h	4503;"	d
clLoadMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	4504;"	d
clLoadMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	4505;"	d
clLoadName	/usr/include/ClanLib/GL/opengl_wrap.h	4506;"	d
clLoadTransposeMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	4761;"	d
clLoadTransposeMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	4762;"	d
clLogicOp	/usr/include/ClanLib/GL/opengl_wrap.h	4507;"	d
clMap1d	/usr/include/ClanLib/GL/opengl_wrap.h	4508;"	d
clMap1f	/usr/include/ClanLib/GL/opengl_wrap.h	4509;"	d
clMap2d	/usr/include/ClanLib/GL/opengl_wrap.h	4510;"	d
clMap2f	/usr/include/ClanLib/GL/opengl_wrap.h	4511;"	d
clMapBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4815;"	d
clMapGrid1d	/usr/include/ClanLib/GL/opengl_wrap.h	4512;"	d
clMapGrid1f	/usr/include/ClanLib/GL/opengl_wrap.h	4513;"	d
clMapGrid2d	/usr/include/ClanLib/GL/opengl_wrap.h	4514;"	d
clMapGrid2f	/usr/include/ClanLib/GL/opengl_wrap.h	4515;"	d
clMaterialf	/usr/include/ClanLib/GL/opengl_wrap.h	4516;"	d
clMaterialfv	/usr/include/ClanLib/GL/opengl_wrap.h	4517;"	d
clMateriali	/usr/include/ClanLib/GL/opengl_wrap.h	4518;"	d
clMaterialiv	/usr/include/ClanLib/GL/opengl_wrap.h	4519;"	d
clMatrixMode	/usr/include/ClanLib/GL/opengl_wrap.h	4520;"	d
clMinmax	/usr/include/ClanLib/GL/opengl_wrap.h	4712;"	d
clMultMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	4521;"	d
clMultMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	4522;"	d
clMultTransposeMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	4763;"	d
clMultTransposeMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	4764;"	d
clMultiDrawArrays	/usr/include/ClanLib/GL/opengl_wrap.h	4770;"	d
clMultiDrawElements	/usr/include/ClanLib/GL/opengl_wrap.h	4771;"	d
clMultiTexCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	4721;"	d
clMultiTexCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	4722;"	d
clMultiTexCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	4723;"	d
clMultiTexCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	4724;"	d
clMultiTexCoord1i	/usr/include/ClanLib/GL/opengl_wrap.h	4725;"	d
clMultiTexCoord1iv	/usr/include/ClanLib/GL/opengl_wrap.h	4726;"	d
clMultiTexCoord1s	/usr/include/ClanLib/GL/opengl_wrap.h	4727;"	d
clMultiTexCoord1sv	/usr/include/ClanLib/GL/opengl_wrap.h	4728;"	d
clMultiTexCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	4729;"	d
clMultiTexCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4730;"	d
clMultiTexCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	4731;"	d
clMultiTexCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4732;"	d
clMultiTexCoord2i	/usr/include/ClanLib/GL/opengl_wrap.h	4733;"	d
clMultiTexCoord2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4734;"	d
clMultiTexCoord2s	/usr/include/ClanLib/GL/opengl_wrap.h	4735;"	d
clMultiTexCoord2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4736;"	d
clMultiTexCoord3d	/usr/include/ClanLib/GL/opengl_wrap.h	4737;"	d
clMultiTexCoord3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4738;"	d
clMultiTexCoord3f	/usr/include/ClanLib/GL/opengl_wrap.h	4739;"	d
clMultiTexCoord3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4740;"	d
clMultiTexCoord3i	/usr/include/ClanLib/GL/opengl_wrap.h	4741;"	d
clMultiTexCoord3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4742;"	d
clMultiTexCoord3s	/usr/include/ClanLib/GL/opengl_wrap.h	4743;"	d
clMultiTexCoord3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4744;"	d
clMultiTexCoord4d	/usr/include/ClanLib/GL/opengl_wrap.h	4745;"	d
clMultiTexCoord4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4746;"	d
clMultiTexCoord4f	/usr/include/ClanLib/GL/opengl_wrap.h	4747;"	d
clMultiTexCoord4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4748;"	d
clMultiTexCoord4i	/usr/include/ClanLib/GL/opengl_wrap.h	4749;"	d
clMultiTexCoord4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4750;"	d
clMultiTexCoord4s	/usr/include/ClanLib/GL/opengl_wrap.h	4751;"	d
clMultiTexCoord4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4752;"	d
clNewList	/usr/include/ClanLib/GL/opengl_wrap.h	4523;"	d
clNormal3b	/usr/include/ClanLib/GL/opengl_wrap.h	4524;"	d
clNormal3bv	/usr/include/ClanLib/GL/opengl_wrap.h	4525;"	d
clNormal3d	/usr/include/ClanLib/GL/opengl_wrap.h	4526;"	d
clNormal3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4527;"	d
clNormal3f	/usr/include/ClanLib/GL/opengl_wrap.h	4528;"	d
clNormal3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4529;"	d
clNormal3i	/usr/include/ClanLib/GL/opengl_wrap.h	4530;"	d
clNormal3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4531;"	d
clNormal3s	/usr/include/ClanLib/GL/opengl_wrap.h	4532;"	d
clNormal3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4533;"	d
clNormalPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4534;"	d
clOrtho	/usr/include/ClanLib/GL/opengl_wrap.h	4535;"	d
clPassThrough	/usr/include/ClanLib/GL/opengl_wrap.h	4536;"	d
clPixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	4537;"	d
clPixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	4538;"	d
clPixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	4539;"	d
clPixelStoref	/usr/include/ClanLib/GL/opengl_wrap.h	4540;"	d
clPixelStorei	/usr/include/ClanLib/GL/opengl_wrap.h	4541;"	d
clPixelTransferf	/usr/include/ClanLib/GL/opengl_wrap.h	4542;"	d
clPixelTransferi	/usr/include/ClanLib/GL/opengl_wrap.h	4543;"	d
clPixelZoom	/usr/include/ClanLib/GL/opengl_wrap.h	4544;"	d
clPointParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	4772;"	d
clPointParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4773;"	d
clPointSize	/usr/include/ClanLib/GL/opengl_wrap.h	4545;"	d
clPolygonMode	/usr/include/ClanLib/GL/opengl_wrap.h	4546;"	d
clPolygonOffset	/usr/include/ClanLib/GL/opengl_wrap.h	4547;"	d
clPolygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	4548;"	d
clPopAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	4549;"	d
clPopClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	4550;"	d
clPopMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	4551;"	d
clPopName	/usr/include/ClanLib/GL/opengl_wrap.h	4552;"	d
clPrioritizeTextures	/usr/include/ClanLib/GL/opengl_wrap.h	4553;"	d
clPushAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	4554;"	d
clPushClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	4555;"	d
clPushMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	4556;"	d
clPushName	/usr/include/ClanLib/GL/opengl_wrap.h	4557;"	d
clRasterPos2d	/usr/include/ClanLib/GL/opengl_wrap.h	4558;"	d
clRasterPos2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4559;"	d
clRasterPos2f	/usr/include/ClanLib/GL/opengl_wrap.h	4560;"	d
clRasterPos2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4561;"	d
clRasterPos2i	/usr/include/ClanLib/GL/opengl_wrap.h	4562;"	d
clRasterPos2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4563;"	d
clRasterPos2s	/usr/include/ClanLib/GL/opengl_wrap.h	4564;"	d
clRasterPos2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4565;"	d
clRasterPos3d	/usr/include/ClanLib/GL/opengl_wrap.h	4566;"	d
clRasterPos3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4567;"	d
clRasterPos3f	/usr/include/ClanLib/GL/opengl_wrap.h	4568;"	d
clRasterPos3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4569;"	d
clRasterPos3i	/usr/include/ClanLib/GL/opengl_wrap.h	4570;"	d
clRasterPos3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4571;"	d
clRasterPos3s	/usr/include/ClanLib/GL/opengl_wrap.h	4572;"	d
clRasterPos3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4573;"	d
clRasterPos4d	/usr/include/ClanLib/GL/opengl_wrap.h	4574;"	d
clRasterPos4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4575;"	d
clRasterPos4f	/usr/include/ClanLib/GL/opengl_wrap.h	4576;"	d
clRasterPos4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4577;"	d
clRasterPos4i	/usr/include/ClanLib/GL/opengl_wrap.h	4578;"	d
clRasterPos4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4579;"	d
clRasterPos4s	/usr/include/ClanLib/GL/opengl_wrap.h	4580;"	d
clRasterPos4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4581;"	d
clReadBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4582;"	d
clReadPixels	/usr/include/ClanLib/GL/opengl_wrap.h	4583;"	d
clRectd	/usr/include/ClanLib/GL/opengl_wrap.h	4584;"	d
clRectdv	/usr/include/ClanLib/GL/opengl_wrap.h	4585;"	d
clRectf	/usr/include/ClanLib/GL/opengl_wrap.h	4586;"	d
clRectfv	/usr/include/ClanLib/GL/opengl_wrap.h	4587;"	d
clRecti	/usr/include/ClanLib/GL/opengl_wrap.h	4588;"	d
clRectiv	/usr/include/ClanLib/GL/opengl_wrap.h	4589;"	d
clRects	/usr/include/ClanLib/GL/opengl_wrap.h	4590;"	d
clRectsv	/usr/include/ClanLib/GL/opengl_wrap.h	4591;"	d
clRenderMode	/usr/include/ClanLib/GL/opengl_wrap.h	4592;"	d
clResetHistogram	/usr/include/ClanLib/GL/opengl_wrap.h	4708;"	d
clResetMinmax	/usr/include/ClanLib/GL/opengl_wrap.h	4713;"	d
clRotated	/usr/include/ClanLib/GL/opengl_wrap.h	4593;"	d
clRotatef	/usr/include/ClanLib/GL/opengl_wrap.h	4594;"	d
clSampleCoverage	/usr/include/ClanLib/GL/opengl_wrap.h	4760;"	d
clScaled	/usr/include/ClanLib/GL/opengl_wrap.h	4595;"	d
clScalef	/usr/include/ClanLib/GL/opengl_wrap.h	4596;"	d
clScissor	/usr/include/ClanLib/GL/opengl_wrap.h	4597;"	d
clSecondaryColor3b	/usr/include/ClanLib/GL/opengl_wrap.h	4774;"	d
clSecondaryColor3bv	/usr/include/ClanLib/GL/opengl_wrap.h	4775;"	d
clSecondaryColor3d	/usr/include/ClanLib/GL/opengl_wrap.h	4776;"	d
clSecondaryColor3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4777;"	d
clSecondaryColor3f	/usr/include/ClanLib/GL/opengl_wrap.h	4778;"	d
clSecondaryColor3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4779;"	d
clSecondaryColor3i	/usr/include/ClanLib/GL/opengl_wrap.h	4780;"	d
clSecondaryColor3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4781;"	d
clSecondaryColor3s	/usr/include/ClanLib/GL/opengl_wrap.h	4782;"	d
clSecondaryColor3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4783;"	d
clSecondaryColor3ub	/usr/include/ClanLib/GL/opengl_wrap.h	4784;"	d
clSecondaryColor3ubv	/usr/include/ClanLib/GL/opengl_wrap.h	4785;"	d
clSecondaryColor3ui	/usr/include/ClanLib/GL/opengl_wrap.h	4786;"	d
clSecondaryColor3uiv	/usr/include/ClanLib/GL/opengl_wrap.h	4787;"	d
clSecondaryColor3us	/usr/include/ClanLib/GL/opengl_wrap.h	4788;"	d
clSecondaryColor3usv	/usr/include/ClanLib/GL/opengl_wrap.h	4789;"	d
clSecondaryColorPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4790;"	d
clSelectBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4598;"	d
clSeparableFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	4699;"	d
clShadeModel	/usr/include/ClanLib/GL/opengl_wrap.h	4599;"	d
clShaderSource	/usr/include/ClanLib/GL/opengl_wrap.h	4832;"	d
clStencilFunc	/usr/include/ClanLib/GL/opengl_wrap.h	4600;"	d
clStencilFuncSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	4917;"	d
clStencilMask	/usr/include/ClanLib/GL/opengl_wrap.h	4601;"	d
clStencilOp	/usr/include/ClanLib/GL/opengl_wrap.h	4602;"	d
clStencilOpSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	4918;"	d
clTexCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	4603;"	d
clTexCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	4604;"	d
clTexCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	4605;"	d
clTexCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	4606;"	d
clTexCoord1i	/usr/include/ClanLib/GL/opengl_wrap.h	4607;"	d
clTexCoord1iv	/usr/include/ClanLib/GL/opengl_wrap.h	4608;"	d
clTexCoord1s	/usr/include/ClanLib/GL/opengl_wrap.h	4609;"	d
clTexCoord1sv	/usr/include/ClanLib/GL/opengl_wrap.h	4610;"	d
clTexCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	4611;"	d
clTexCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4612;"	d
clTexCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	4613;"	d
clTexCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4614;"	d
clTexCoord2i	/usr/include/ClanLib/GL/opengl_wrap.h	4615;"	d
clTexCoord2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4616;"	d
clTexCoord2s	/usr/include/ClanLib/GL/opengl_wrap.h	4617;"	d
clTexCoord2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4618;"	d
clTexCoord3d	/usr/include/ClanLib/GL/opengl_wrap.h	4619;"	d
clTexCoord3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4620;"	d
clTexCoord3f	/usr/include/ClanLib/GL/opengl_wrap.h	4621;"	d
clTexCoord3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4622;"	d
clTexCoord3i	/usr/include/ClanLib/GL/opengl_wrap.h	4623;"	d
clTexCoord3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4624;"	d
clTexCoord3s	/usr/include/ClanLib/GL/opengl_wrap.h	4625;"	d
clTexCoord3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4626;"	d
clTexCoord4d	/usr/include/ClanLib/GL/opengl_wrap.h	4627;"	d
clTexCoord4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4628;"	d
clTexCoord4f	/usr/include/ClanLib/GL/opengl_wrap.h	4629;"	d
clTexCoord4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4630;"	d
clTexCoord4i	/usr/include/ClanLib/GL/opengl_wrap.h	4631;"	d
clTexCoord4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4632;"	d
clTexCoord4s	/usr/include/ClanLib/GL/opengl_wrap.h	4633;"	d
clTexCoord4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4634;"	d
clTexCoordPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4635;"	d
clTexEnvf	/usr/include/ClanLib/GL/opengl_wrap.h	4636;"	d
clTexEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	4637;"	d
clTexEnvi	/usr/include/ClanLib/GL/opengl_wrap.h	4638;"	d
clTexEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	4639;"	d
clTexGend	/usr/include/ClanLib/GL/opengl_wrap.h	4640;"	d
clTexGendv	/usr/include/ClanLib/GL/opengl_wrap.h	4641;"	d
clTexGenf	/usr/include/ClanLib/GL/opengl_wrap.h	4642;"	d
clTexGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	4643;"	d
clTexGeni	/usr/include/ClanLib/GL/opengl_wrap.h	4644;"	d
clTexGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	4645;"	d
clTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4646;"	d
clTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4647;"	d
clTexImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	4684;"	d
clTexParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	4648;"	d
clTexParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	4649;"	d
clTexParameteri	/usr/include/ClanLib/GL/opengl_wrap.h	4650;"	d
clTexParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	4651;"	d
clTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	4652;"	d
clTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	4653;"	d
clTexSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	4654;"	d
clTranslated	/usr/include/ClanLib/GL/opengl_wrap.h	4655;"	d
clTranslatef	/usr/include/ClanLib/GL/opengl_wrap.h	4656;"	d
clUniform1f	/usr/include/ClanLib/GL/opengl_wrap.h	4839;"	d
clUniform1fv	/usr/include/ClanLib/GL/opengl_wrap.h	4847;"	d
clUniform1i	/usr/include/ClanLib/GL/opengl_wrap.h	4843;"	d
clUniform1iv	/usr/include/ClanLib/GL/opengl_wrap.h	4851;"	d
clUniform2f	/usr/include/ClanLib/GL/opengl_wrap.h	4840;"	d
clUniform2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4848;"	d
clUniform2i	/usr/include/ClanLib/GL/opengl_wrap.h	4844;"	d
clUniform2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4852;"	d
clUniform3f	/usr/include/ClanLib/GL/opengl_wrap.h	4841;"	d
clUniform3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4849;"	d
clUniform3i	/usr/include/ClanLib/GL/opengl_wrap.h	4845;"	d
clUniform3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4853;"	d
clUniform4f	/usr/include/ClanLib/GL/opengl_wrap.h	4842;"	d
clUniform4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4850;"	d
clUniform4i	/usr/include/ClanLib/GL/opengl_wrap.h	4846;"	d
clUniform4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4854;"	d
clUniformMatrix2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4855;"	d
clUniformMatrix3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4856;"	d
clUniformMatrix4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4857;"	d
clUnmapBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	4816;"	d
clUseProgram	/usr/include/ClanLib/GL/opengl_wrap.h	4837;"	d
clValidateProgram	/usr/include/ClanLib/GL/opengl_wrap.h	4838;"	d
clVertex2d	/usr/include/ClanLib/GL/opengl_wrap.h	4657;"	d
clVertex2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4658;"	d
clVertex2f	/usr/include/ClanLib/GL/opengl_wrap.h	4659;"	d
clVertex2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4660;"	d
clVertex2i	/usr/include/ClanLib/GL/opengl_wrap.h	4661;"	d
clVertex2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4662;"	d
clVertex2s	/usr/include/ClanLib/GL/opengl_wrap.h	4663;"	d
clVertex2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4664;"	d
clVertex3d	/usr/include/ClanLib/GL/opengl_wrap.h	4665;"	d
clVertex3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4666;"	d
clVertex3f	/usr/include/ClanLib/GL/opengl_wrap.h	4667;"	d
clVertex3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4668;"	d
clVertex3i	/usr/include/ClanLib/GL/opengl_wrap.h	4669;"	d
clVertex3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4670;"	d
clVertex3s	/usr/include/ClanLib/GL/opengl_wrap.h	4671;"	d
clVertex3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4672;"	d
clVertex4d	/usr/include/ClanLib/GL/opengl_wrap.h	4673;"	d
clVertex4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4674;"	d
clVertex4f	/usr/include/ClanLib/GL/opengl_wrap.h	4675;"	d
clVertex4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4676;"	d
clVertex4i	/usr/include/ClanLib/GL/opengl_wrap.h	4677;"	d
clVertex4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4678;"	d
clVertex4s	/usr/include/ClanLib/GL/opengl_wrap.h	4679;"	d
clVertex4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4680;"	d
clVertexAttrib1d	/usr/include/ClanLib/GL/opengl_wrap.h	4872;"	d
clVertexAttrib1dv	/usr/include/ClanLib/GL/opengl_wrap.h	4885;"	d
clVertexAttrib1f	/usr/include/ClanLib/GL/opengl_wrap.h	4870;"	d
clVertexAttrib1fv	/usr/include/ClanLib/GL/opengl_wrap.h	4883;"	d
clVertexAttrib1s	/usr/include/ClanLib/GL/opengl_wrap.h	4871;"	d
clVertexAttrib1sv	/usr/include/ClanLib/GL/opengl_wrap.h	4884;"	d
clVertexAttrib2d	/usr/include/ClanLib/GL/opengl_wrap.h	4875;"	d
clVertexAttrib2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4888;"	d
clVertexAttrib2f	/usr/include/ClanLib/GL/opengl_wrap.h	4873;"	d
clVertexAttrib2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4886;"	d
clVertexAttrib2s	/usr/include/ClanLib/GL/opengl_wrap.h	4874;"	d
clVertexAttrib2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4887;"	d
clVertexAttrib3d	/usr/include/ClanLib/GL/opengl_wrap.h	4878;"	d
clVertexAttrib3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4891;"	d
clVertexAttrib3f	/usr/include/ClanLib/GL/opengl_wrap.h	4876;"	d
clVertexAttrib3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4889;"	d
clVertexAttrib3s	/usr/include/ClanLib/GL/opengl_wrap.h	4877;"	d
clVertexAttrib3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4890;"	d
clVertexAttrib4Nbv	/usr/include/ClanLib/GL/opengl_wrap.h	4900;"	d
clVertexAttrib4Niv	/usr/include/ClanLib/GL/opengl_wrap.h	4902;"	d
clVertexAttrib4Nsv	/usr/include/ClanLib/GL/opengl_wrap.h	4901;"	d
clVertexAttrib4Nub	/usr/include/ClanLib/GL/opengl_wrap.h	4882;"	d
clVertexAttrib4Nubv	/usr/include/ClanLib/GL/opengl_wrap.h	4903;"	d
clVertexAttrib4Nuiv	/usr/include/ClanLib/GL/opengl_wrap.h	4905;"	d
clVertexAttrib4Nusv	/usr/include/ClanLib/GL/opengl_wrap.h	4904;"	d
clVertexAttrib4bv	/usr/include/ClanLib/GL/opengl_wrap.h	4896;"	d
clVertexAttrib4d	/usr/include/ClanLib/GL/opengl_wrap.h	4881;"	d
clVertexAttrib4dv	/usr/include/ClanLib/GL/opengl_wrap.h	4894;"	d
clVertexAttrib4f	/usr/include/ClanLib/GL/opengl_wrap.h	4879;"	d
clVertexAttrib4fv	/usr/include/ClanLib/GL/opengl_wrap.h	4892;"	d
clVertexAttrib4iv	/usr/include/ClanLib/GL/opengl_wrap.h	4895;"	d
clVertexAttrib4s	/usr/include/ClanLib/GL/opengl_wrap.h	4880;"	d
clVertexAttrib4sv	/usr/include/ClanLib/GL/opengl_wrap.h	4893;"	d
clVertexAttrib4ubv	/usr/include/ClanLib/GL/opengl_wrap.h	4897;"	d
clVertexAttrib4uiv	/usr/include/ClanLib/GL/opengl_wrap.h	4899;"	d
clVertexAttrib4usv	/usr/include/ClanLib/GL/opengl_wrap.h	4898;"	d
clVertexAttribPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4906;"	d
clVertexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	4681;"	d
clViewport	/usr/include/ClanLib/GL/opengl_wrap.h	4682;"	d
clWindowPos2d	/usr/include/ClanLib/GL/opengl_wrap.h	4792;"	d
clWindowPos2dv	/usr/include/ClanLib/GL/opengl_wrap.h	4793;"	d
clWindowPos2f	/usr/include/ClanLib/GL/opengl_wrap.h	4794;"	d
clWindowPos2fv	/usr/include/ClanLib/GL/opengl_wrap.h	4795;"	d
clWindowPos2i	/usr/include/ClanLib/GL/opengl_wrap.h	4796;"	d
clWindowPos2iv	/usr/include/ClanLib/GL/opengl_wrap.h	4797;"	d
clWindowPos2s	/usr/include/ClanLib/GL/opengl_wrap.h	4798;"	d
clWindowPos2sv	/usr/include/ClanLib/GL/opengl_wrap.h	4799;"	d
clWindowPos3d	/usr/include/ClanLib/GL/opengl_wrap.h	4800;"	d
clWindowPos3dv	/usr/include/ClanLib/GL/opengl_wrap.h	4801;"	d
clWindowPos3f	/usr/include/ClanLib/GL/opengl_wrap.h	4802;"	d
clWindowPos3fv	/usr/include/ClanLib/GL/opengl_wrap.h	4803;"	d
clWindowPos3i	/usr/include/ClanLib/GL/opengl_wrap.h	4804;"	d
clWindowPos3iv	/usr/include/ClanLib/GL/opengl_wrap.h	4805;"	d
clWindowPos3s	/usr/include/ClanLib/GL/opengl_wrap.h	4806;"	d
clWindowPos3sv	/usr/include/ClanLib/GL/opengl_wrap.h	4807;"	d
cl_assert	/usr/include/ClanLib/Core/System/cl_assert.h	55;"	d
cl_assert	/usr/include/ClanLib/Core/System/cl_assert.h	57;"	d
cl_comparefunc_always	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_always,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_equal	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_equal,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_gequal	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_gequal,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_greater	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_greater,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_lequal	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_lequal,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_less	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_less,$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_never	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_never$/;"	e	enum:CL_TextureCompareFunction
cl_comparefunc_notequal	/usr/include/ClanLib/GL/texture.h	/^	cl_comparefunc_notequal,$/;"	e	enum:CL_TextureCompareFunction
cl_comparemode_compare_r_to_texture	/usr/include/ClanLib/GL/texture.h	/^	cl_comparemode_compare_r_to_texture$/;"	e	enum:CL_TextureCompareMode
cl_comparemode_none	/usr/include/ClanLib/GL/texture.h	/^	cl_comparemode_none,$/;"	e	enum:CL_TextureCompareMode
cl_depthmode_alpha	/usr/include/ClanLib/GL/texture.h	/^	cl_depthmode_alpha$/;"	e	enum:CL_TextureDepthMode
cl_depthmode_intensity	/usr/include/ClanLib/GL/texture.h	/^	cl_depthmode_intensity,$/;"	e	enum:CL_TextureDepthMode
cl_depthmode_luminance	/usr/include/ClanLib/GL/texture.h	/^	cl_depthmode_luminance,$/;"	e	enum:CL_TextureDepthMode
cl_filter_linear	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_linear,$/;"	e	enum:CL_TextureFilter
cl_filter_linear_mipmap_linear	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_linear_mipmap_linear$/;"	e	enum:CL_TextureFilter
cl_filter_linear_mipmap_nearest	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_linear_mipmap_nearest,$/;"	e	enum:CL_TextureFilter
cl_filter_nearest	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_nearest,$/;"	e	enum:CL_TextureFilter
cl_filter_nearest_mipmap_linear	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_nearest_mipmap_linear,$/;"	e	enum:CL_TextureFilter
cl_filter_nearest_mipmap_nearest	/usr/include/ClanLib/GL/texture.h	/^	cl_filter_nearest_mipmap_nearest,$/;"	e	enum:CL_TextureFilter
cl_int16	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef __int16            cl_int16;$/;"	t
cl_int16	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef short              cl_int16;$/;"	t
cl_int32	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef __int32            cl_int32;$/;"	t
cl_int32	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef int                cl_int32;$/;"	t
cl_int64	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef __int64            cl_int64;$/;"	t
cl_int64	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef long long          cl_int64;$/;"	t
cl_int8	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef __int8             cl_int8;$/;"	t
cl_int8	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef char               cl_int8;$/;"	t
cl_priority_above_normal	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_above_normal,$/;"	e	enum:EThreadPriority
cl_priority_below_normal	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_below_normal,$/;"	e	enum:EThreadPriority
cl_priority_highest	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_highest,$/;"	e	enum:EThreadPriority
cl_priority_idle	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_idle,$/;"	e	enum:EThreadPriority
cl_priority_lowest	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_lowest,$/;"	e	enum:EThreadPriority
cl_priority_normal	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_normal,$/;"	e	enum:EThreadPriority
cl_priority_time_critical	/usr/include/ClanLib/Core/System/thread.h	/^	cl_priority_time_critical$/;"	e	enum:EThreadPriority
cl_shadertype_fragment	/usr/include/ClanLib/GL/shader_object.h	/^	cl_shadertype_fragment$/;"	e	enum:CL_ShaderType
cl_shadertype_vertex	/usr/include/ClanLib/GL/shader_object.h	/^	cl_shadertype_vertex,$/;"	e	enum:CL_ShaderType
cl_uint16	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned __int16   cl_uint16;$/;"	t
cl_uint16	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned short     cl_uint16;$/;"	t
cl_uint32	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned __int32   cl_uint32;$/;"	t
cl_uint32	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned int       cl_uint32;$/;"	t
cl_uint64	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned __int64   cl_uint64;$/;"	t
cl_uint64	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned long long cl_uint64;$/;"	t
cl_uint8	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned __int8    cl_uint8;$/;"	t
cl_uint8	/usr/include/ClanLib/Core/IOData/datatypes.h	/^typedef unsigned char      cl_uint8;$/;"	t
cl_wrap_clamp	/usr/include/ClanLib/GL/texture.h	/^	cl_wrap_clamp,$/;"	e	enum:CL_TextureWrapMode
cl_wrap_clamp_to_border	/usr/include/ClanLib/GL/texture.h	/^	cl_wrap_clamp_to_border,$/;"	e	enum:CL_TextureWrapMode
cl_wrap_clamp_to_edge	/usr/include/ClanLib/GL/texture.h	/^	cl_wrap_clamp_to_edge,$/;"	e	enum:CL_TextureWrapMode
cl_wrap_mirrored_repeat	/usr/include/ClanLib/GL/texture.h	/^	cl_wrap_mirrored_repeat$/;"	e	enum:CL_TextureWrapMode
cl_wrap_repeat	/usr/include/ClanLib/GL/texture.h	/^	cl_wrap_repeat,$/;"	e	enum:CL_TextureWrapMode
clanlib_clonable_header	/usr/include/ClanLib/Core/System/clonable.h	34;"	d
clanlib_lazycopyptr_header	/usr/include/ClanLib/Core/System/lazycopyptr.h	34;"	d
clanlib_mutexsharedptr_header	/usr/include/ClanLib/Core/System/mutexsharedptr.h	34;"	d
clanlib_mutexweakptr_header	/usr/include/ClanLib/Core/System/mutexweakptr.h	34;"	d
clanlib_owningptr_header	/usr/include/ClanLib/Core/System/owningptr.h	34;"	d
clanlib_sharedptr_header	/usr/include/ClanLib/Core/System/sharedptr.h	34;"	d
clanlib_weakptr_header	/usr/include/ClanLib/Core/System/weakptr.h	34;"	d
clear	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClear clear;$/;"	m	class:CL_GLFunctions
clearAccum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClearAccum clearAccum;$/;"	m	class:CL_GLFunctions
clearColor	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClearColor clearColor;$/;"	m	class:CL_GLFunctions
clearDepth	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClearDepth clearDepth;$/;"	m	class:CL_GLFunctions
clearIndex	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClearIndex clearIndex;$/;"	m	class:CL_GLFunctions
clearStencil	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClearStencil clearStencil;$/;"	m	class:CL_GLFunctions
clientActiveTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClientActiveTextureARB clientActiveTexture;$/;"	m	class:CL_GLFunctions
clipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glClipPlane clipPlane;$/;"	m	class:CL_GLFunctions
close_button	/usr/include/ClanLib/GUI/window.h	/^		close_button = 1,$/;"	e	enum:CL_Window::TitlebarButtons
code	/usr/include/ClanLib/Core/XML/dom_exception.h	/^	unsigned short code;$/;"	m	class:CL_DomException
collide	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	bool collide(const CL_OutlineCircle &other) const$/;"	f	class:CL_OutlineCircle
color	/usr/include/ClanLib/Display/color.h	/^	unsigned int color;$/;"	m	class:CL_Color
color	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		CL_Color color;$/;"	m	struct:CL_RichEdit_Paragraph::Item
color3b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3b color3b;$/;"	m	class:CL_GLFunctions
color3bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3bv color3bv;$/;"	m	class:CL_GLFunctions
color3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3d color3d;$/;"	m	class:CL_GLFunctions
color3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3dv color3dv;$/;"	m	class:CL_GLFunctions
color3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3f color3f;$/;"	m	class:CL_GLFunctions
color3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3fv color3fv;$/;"	m	class:CL_GLFunctions
color3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3i color3i;$/;"	m	class:CL_GLFunctions
color3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3iv color3iv;$/;"	m	class:CL_GLFunctions
color3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3s color3s;$/;"	m	class:CL_GLFunctions
color3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3sv color3sv;$/;"	m	class:CL_GLFunctions
color3ub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3ub color3ub;$/;"	m	class:CL_GLFunctions
color3ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3ubv color3ubv;$/;"	m	class:CL_GLFunctions
color3ui	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3ui color3ui;$/;"	m	class:CL_GLFunctions
color3uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3uiv color3uiv;$/;"	m	class:CL_GLFunctions
color3us	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3us color3us;$/;"	m	class:CL_GLFunctions
color3usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor3usv color3usv;$/;"	m	class:CL_GLFunctions
color4b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4b color4b;$/;"	m	class:CL_GLFunctions
color4bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4bv color4bv;$/;"	m	class:CL_GLFunctions
color4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4d color4d;$/;"	m	class:CL_GLFunctions
color4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4dv color4dv;$/;"	m	class:CL_GLFunctions
color4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4f color4f;$/;"	m	class:CL_GLFunctions
color4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4fv color4fv;$/;"	m	class:CL_GLFunctions
color4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4i color4i;$/;"	m	class:CL_GLFunctions
color4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4iv color4iv;$/;"	m	class:CL_GLFunctions
color4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4s color4s;$/;"	m	class:CL_GLFunctions
color4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4sv color4sv;$/;"	m	class:CL_GLFunctions
color4ub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4ub color4ub;$/;"	m	class:CL_GLFunctions
color4ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4ubv color4ubv;$/;"	m	class:CL_GLFunctions
color4ui	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4ui color4ui;$/;"	m	class:CL_GLFunctions
color4uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4uiv color4uiv;$/;"	m	class:CL_GLFunctions
color4us	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4us color4us;$/;"	m	class:CL_GLFunctions
color4usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColor4usv color4usv;$/;"	m	class:CL_GLFunctions
colorMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorMask colorMask;$/;"	m	class:CL_GLFunctions
colorMaterial	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorMaterial colorMaterial;$/;"	m	class:CL_GLFunctions
colorPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorPointer colorPointer;$/;"	m	class:CL_GLFunctions
colorSubTable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorSubTableEXT colorSubTable;$/;"	m	class:CL_GLFunctions
colorTable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorTableSGI colorTable;$/;"	m	class:CL_GLFunctions
colorTableParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorTableParameterfvSGI colorTableParameterfv;$/;"	m	class:CL_GLFunctions
colorTableParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glColorTableParameterivSGI colorTableParameteriv;$/;"	m	class:CL_GLFunctions
color_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, CL_Color> color_effects;$/;"	m	class:CL_GlyphBuffer
colorkey	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int colorkey;$/;"	m	class:CL_PixelFormat
colorkey_enabled	/usr/include/ClanLib/Display/pixel_format.h	/^	bool colorkey_enabled;$/;"	m	class:CL_PixelFormat
colors	/usr/include/ClanLib/Display/palette.h	/^	CL_Color colors[256];$/;"	m	class:CL_Palette
comp	/usr/include/ClanLib/GUI/component_style.h	/^	CL_Component *comp;$/;"	m	class:CL_ComponentStyle
compileShader	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompileShaderARB compileShader;$/;"	m	class:CL_GLFunctions
component_types	/usr/include/ClanLib/GUI/component_type.h	/^	static std::map<std::string, CL_ComponentType *> component_types;$/;"	m	class:CL_ComponentType
compressedTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexImage1DARB compressedTexImage1D;$/;"	m	class:CL_GLFunctions
compressedTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexImage2DARB compressedTexImage2D;$/;"	m	class:CL_GLFunctions
compressedTexImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexImage3DARB compressedTexImage3D;$/;"	m	class:CL_GLFunctions
compressedTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexSubImage1DARB compressedTexSubImage1D;$/;"	m	class:CL_GLFunctions
compressedTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexSubImage2DARB compressedTexSubImage2D;$/;"	m	class:CL_GLFunctions
compressedTexSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCompressedTexSubImage3DARB compressedTexSubImage3D;$/;"	m	class:CL_GLFunctions
connect	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v0
connect	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect(CallbackClass *cb_class, void (CallbackClass::*callback)())$/;"	f	class:CL_Signal_v0
connect	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v0
connect	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect(void (*callback)())$/;"	f	class:CL_Signal_v0
connect	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v1
connect	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v1
connect	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Slot connect(void (*callback)(PARAM1))$/;"	f	class:CL_Signal_v1
connect	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v2
connect	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v2
connect	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Slot connect(void (*callback)(PARAM1, PARAM2))$/;"	f	class:CL_Signal_v2
connect	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v3
connect	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v3
connect	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3))$/;"	f	class:CL_Signal_v3
connect	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v4
connect	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v4
connect	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3, PARAM4))$/;"	f	class:CL_Signal_v4
connect	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Slot connect($/;"	f	class:CL_Signal_v5
connect	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Slot connect(Slot slot)$/;"	f	class:CL_Signal_v5
connect	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5))$/;"	f	class:CL_Signal_v5
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)())$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3, Param4))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3, Param4, Param5))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3, Param4, Param5, UserData user_data), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3, Param4, UserData user_data), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, Param3, UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, Param2, UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(Param1, UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, Class *self, void(Class::*func)(UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, void (*func)())$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, void (*func)(UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, void(*func)(Param1, UserData), UserData user_data)$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect(SigClass &sig, void(func)(Param1))$/;"	f	class:CL_SlotContainer
connect	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	void connect(CL_Signal_v0 &signal)$/;"	f	class:CL_SlotBuffer_v0
connect	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	void connect(CL_Signal_v1<PARAM1> &signal)$/;"	f	class:CL_SlotBuffer_v1
connect_functor	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v0
connect_functor	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v1
connect_functor	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v2
connect_functor	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v3
connect_functor	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v4
connect_functor	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Slot connect_functor(const Functor &functor)$/;"	f	class:CL_Signal_v5
connect_functor	/usr/include/ClanLib/Signals/slot_container.h	/^	void connect_functor(SigClass &sig, const Functor &functor)$/;"	f	class:CL_SlotContainer
connect_functor_virtual	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect_functor_virtual(const Functor &functor)$/;"	f	class:CL_Signal_v0
connect_virtual	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect_virtual($/;"	f	class:CL_Signal_v0
connect_virtual	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect_virtual(CallbackClass *cb_class, void (CallbackClass::*virtual_callback)(CL_SlotParent_v0 &))$/;"	f	class:CL_Signal_v0
connect_virtual	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Slot connect_virtual(void (*virtual_callback)(CL_SlotParent_v0 &))$/;"	f	class:CL_Signal_v0
connected_signals	/usr/include/ClanLib/Signals/slot_generic.h	/^	std::list<CL_Signal *> connected_signals;$/;"	m	class:CL_Slot_Generic
connecting	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^		connecting,$/;"	e	enum:CL_DCCDownload::DCCStatus
connection_lost	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^		connection_lost,$/;"	e	enum:CL_DCCDownload::DCCStatus
constant_attenuation	/usr/include/ClanLib/GL/light_source.h	/^	float constant_attenuation;$/;"	m	class:CL_LightSource
contour1	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	const CL_Contour *contour1;$/;"	m	struct:CL_CollidingContours
contour1_deep_point	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Pointf contour1_deep_point;$/;"	m	struct:CL_CollidingContours
contour1_line_end	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	int contour1_line_start, contour2_line_start, contour1_line_end, contour2_line_end;$/;"	m	struct:CL_CollisionPoint
contour1_line_start	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	int contour1_line_start, contour2_line_start, contour1_line_end, contour2_line_end;$/;"	m	struct:CL_CollisionPoint
contour2	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	const CL_Contour *contour2;$/;"	m	struct:CL_CollidingContours
contour2_deep_point	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Pointf contour2_deep_point;$/;"	m	struct:CL_CollidingContours
contour2_line_end	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	int contour1_line_start, contour2_line_start, contour1_line_end, contour2_line_end;$/;"	m	struct:CL_CollisionPoint
contour2_line_start	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	int contour1_line_start, contour2_line_start, contour1_line_end, contour2_line_end;$/;"	m	struct:CL_CollisionPoint
convolutionFilter1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionFilter1DEXT convolutionFilter1D;$/;"	m	class:CL_GLFunctions
convolutionFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionFilter2DEXT convolutionFilter2D;$/;"	m	class:CL_GLFunctions
convolutionParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionParameterfEXT convolutionParameterf;$/;"	m	class:CL_GLFunctions
convolutionParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionParameterfvEXT convolutionParameterfv;$/;"	m	class:CL_GLFunctions
convolutionParameteri	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionParameteriEXT convolutionParameteri;$/;"	m	class:CL_GLFunctions
convolutionParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glConvolutionParameterivEXT convolutionParameteriv;$/;"	m	class:CL_GLFunctions
copyColorSubTable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyColorSubTableEXT copyColorSubTable;$/;"	m	class:CL_GLFunctions
copyColorTable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyColorTableSGI copyColorTable;$/;"	m	class:CL_GLFunctions
copyConvolutionFilter1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyConvolutionFilter1DEXT copyConvolutionFilter1D;$/;"	m	class:CL_GLFunctions
copyConvolutionFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyConvolutionFilter2DEXT copyConvolutionFilter2D;$/;"	m	class:CL_GLFunctions
copyPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyPixels copyPixels;$/;"	m	class:CL_GLFunctions
copyTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyTexImage1D copyTexImage1D;$/;"	m	class:CL_GLFunctions
copyTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyTexImage2D copyTexImage2D;$/;"	m	class:CL_GLFunctions
copyTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyTexSubImage1D copyTexSubImage1D;$/;"	m	class:CL_GLFunctions
copyTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyTexSubImage2D copyTexSubImage2D;$/;"	m	class:CL_GLFunctions
copyTexSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCopyTexSubImage3DEXT copyTexSubImage3D;$/;"	m	class:CL_GLFunctions
coral	/usr/include/ClanLib/Display/color.h	/^	static CL_Color coral;$/;"	m	class:CL_Color
cornflowerblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color cornflowerblue;$/;"	m	class:CL_Color
cornsilk	/usr/include/ClanLib/Display/color.h	/^	static CL_Color cornsilk;$/;"	m	class:CL_Color
count	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	int count;$/;"	m	class:CL_SlotBuffer_v0
createProgram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCreateProgramObjectARB createProgram;$/;"	m	class:CL_GLFunctions
createShader	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCreateShaderObjectARB createShader;$/;"	m	class:CL_GLFunctions
create_thread_id	/usr/include/ClanLib/Core/System/keep_alive.h	/^	CL_ThreadId create_thread_id;$/;"	m	class:CL_KeepAlive
crimson	/usr/include/ClanLib/Display/color.h	/^	static CL_Color crimson;$/;"	m	class:CL_Color
cullFace	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glCullFace cullFace;$/;"	m	class:CL_GLFunctions
cursor_blink_time	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	unsigned int cursor_blink_time;$/;"	m	class:CL_InputBox_StyleBase
cut_range	/usr/include/ClanLib/Display/glyph_buffer.h	/^	static void cut_range(std::map<int, T>& target, int start, int end)$/;"	f	class:CL_GlyphBuffer
cyan	/usr/include/ClanLib/Display/color.h	/^	static CL_Color cyan;$/;"	m	class:CL_Color
darkblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkblue;$/;"	m	class:CL_Color
darkcyan	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkcyan;$/;"	m	class:CL_Color
darkgoldenrod	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkgoldenrod;$/;"	m	class:CL_Color
darkgray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkgray;$/;"	m	class:CL_Color
darkgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkgreen;$/;"	m	class:CL_Color
darkgrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkgrey;$/;"	m	class:CL_Color
darkkhaki	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkkhaki;$/;"	m	class:CL_Color
darkmagenta	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkmagenta;$/;"	m	class:CL_Color
darkolivegreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkolivegreen;$/;"	m	class:CL_Color
darkorange	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkorange;$/;"	m	class:CL_Color
darkorchid	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkorchid;$/;"	m	class:CL_Color
darkred	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkred;$/;"	m	class:CL_Color
darksalmon	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darksalmon;$/;"	m	class:CL_Color
darkseagreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkseagreen;$/;"	m	class:CL_Color
darkslateblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkslateblue;$/;"	m	class:CL_Color
darkslategray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkslategray;$/;"	m	class:CL_Color
darkslategrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkslategrey;$/;"	m	class:CL_Color
darkturquoise	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkturquoise;$/;"	m	class:CL_Color
darkviolet	/usr/include/ClanLib/Display/color.h	/^	static CL_Color darkviolet;$/;"	m	class:CL_Color
data	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	/^	unsigned char *data;$/;"	m	class:CL_InputSource_Memory
data	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	/^	std::string data;$/;"	m	class:CL_OutputSource_Memory
data	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	void *data;$/;"	m	class:CL_DelauneyTriangulator_Vertex
data	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	CL_ResourceData_Raw *data;$/;"	m	class:CL_Raw
data_size	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	/^	int data_size;$/;"	m	class:CL_InputSource_Memory
decrement	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	void decrement()$/;"	f	class:CL_MutexSharedPtr
decrement	/usr/include/ClanLib/Core/System/sharedptr.h	/^	void decrement()$/;"	f	class:CL_SharedPtr
deeppink	/usr/include/ClanLib/Display/color.h	/^	static CL_Color deeppink;$/;"	m	class:CL_Color
deepskyblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color deepskyblue;$/;"	m	class:CL_Color
default_value	/usr/include/ClanLib/GUI/component_type.h	/^		std::string default_value;$/;"	m	struct:CL_ComponentType::SOptionType
deleteBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteBuffersARB deleteBuffers;$/;"	m	class:CL_GLFunctions
deleteLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteLists deleteLists;$/;"	m	class:CL_GLFunctions
deleteProgram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteObjectARB deleteProgram;$/;"	m	class:CL_GLFunctions
deleteQueries	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteQueriesARB deleteQueries;$/;"	m	class:CL_GLFunctions
deleteShader	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteObjectARB deleteShader;$/;"	m	class:CL_GLFunctions
deleteTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDeleteTextures deleteTextures;$/;"	m	class:CL_GLFunctions
delete_font	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_font;$/;"	m	class:CL_Button_Silver
delete_font	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_font;$/;"	m	class:CL_CheckBox_Silver
delete_font_disabled	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_font_disabled;$/;"	m	class:CL_Button_Silver
delete_font_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_font_disabled;$/;"	m	class:CL_CheckBox_Silver
delete_item	/usr/include/ClanLib/GUI/listitem.h	/^	bool delete_item;$/;"	m	class:CL_ListItem
delete_sur_checked	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_sur_checked;$/;"	m	class:CL_CheckBox_Silver
delete_sur_checked_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_sur_checked_disabled;$/;"	m	class:CL_CheckBox_Silver
delete_sur_disabled	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_sur_disabled;$/;"	m	class:CL_Button_Silver
delete_sur_down	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_sur_down;$/;"	m	class:CL_Button_Silver
delete_sur_highlighted	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_sur_highlighted;$/;"	m	class:CL_Button_Silver
delete_sur_icon	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	bool delete_sur_icon;$/;"	m	class:CL_MenuItem_Silver
delete_sur_unchecked	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_sur_unchecked;$/;"	m	class:CL_CheckBox_Silver
delete_sur_unchecked_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	bool delete_sur_unchecked_disabled;$/;"	m	class:CL_CheckBox_Silver
delete_sur_up	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool delete_sur_up;$/;"	m	class:CL_Button_Silver
deleted	/usr/include/ClanLib/Signals/signal_v0.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v0::CL_Signal_v0_Generic
deleted	/usr/include/ClanLib/Signals/signal_v1.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v1::CL_Signal_v1_Generic
deleted	/usr/include/ClanLib/Signals/signal_v2.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v2::CL_Signal_v2_Generic
deleted	/usr/include/ClanLib/Signals/signal_v3.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v3::CL_Signal_v3_Generic
deleted	/usr/include/ClanLib/Signals/signal_v4.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v4::CL_Signal_v4_Generic
deleted	/usr/include/ClanLib/Signals/signal_v5.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v5::CL_Signal_v5_Generic
depth	/usr/include/ClanLib/Display/pixel_format.h	/^	int depth;$/;"	m	class:CL_PixelFormat
depthFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDepthFunc depthFunc;$/;"	m	class:CL_GLFunctions
depthMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDepthMask depthMask;$/;"	m	class:CL_GLFunctions
depthRange	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDepthRange depthRange;$/;"	m	class:CL_GLFunctions
destX	/usr/include/ClanLib/Display/surface.h	/^	double destX;$/;"	m	struct:CL_Surface_DrawParams2
destX	/usr/include/ClanLib/Display/surface.h	/^	double destX[4];$/;"	m	struct:CL_Surface_DrawParams1
destY	/usr/include/ClanLib/Display/surface.h	/^	double destY;$/;"	m	struct:CL_Surface_DrawParams2
destY	/usr/include/ClanLib/Display/surface.h	/^	double destY[4];$/;"	m	struct:CL_Surface_DrawParams1
destZ	/usr/include/ClanLib/Display/surface.h	/^	double destZ;$/;"	m	struct:CL_Surface_DrawParams1
destZ	/usr/include/ClanLib/Display/surface.h	/^	double destZ;$/;"	m	struct:CL_Surface_DrawParams2
detachShader	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDetachObjectARB detachShader;$/;"	m	class:CL_GLFunctions
device	/usr/include/ClanLib/Display/input_event.h	/^	CL_InputDevice device;$/;"	m	class:CL_InputEvent
diffuse	/usr/include/ClanLib/GL/light_source.h	/^	float diffuse[4];$/;"	m	class:CL_LightSource
dimgray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color dimgray;$/;"	m	class:CL_Color
dimgrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color dimgrey;$/;"	m	class:CL_Color
dir	/usr/include/ClanLib/GL/viewpoint.h	/^	CL_Vector dir;$/;"	m	class:CL_Viewpoint
disable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDisable disable;$/;"	m	class:CL_GLFunctions
disableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDisableClientState disableClientState;$/;"	m	class:CL_GLFunctions
disableVertexAttribArray	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDisableVertexAttribArrayARB disableVertexAttribArray;$/;"	m	class:CL_GLFunctions
disable_fuzz	/usr/include/ClanLib/Core/Math/vector2.h	/^	void disable_fuzz() { FUZZ = 0.0; }$/;"	f	class:CL_Vector2
disconnect	/usr/include/ClanLib/Signals/signal_v0.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v0
disconnect	/usr/include/ClanLib/Signals/signal_v1.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v1
disconnect	/usr/include/ClanLib/Signals/signal_v2.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v2
disconnect	/usr/include/ClanLib/Signals/signal_v3.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v3
disconnect	/usr/include/ClanLib/Signals/signal_v4.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v4
disconnect	/usr/include/ClanLib/Signals/signal_v5.h	/^	void disconnect(CL_Slot &disconnect_slot)$/;"	f	class:CL_Signal_v5
disconnect	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	void disconnect(CL_Signal_v0 &signal)$/;"	f	class:CL_SlotBuffer_v0
disconnect	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	void disconnect(CL_Signal_v1<PARAM1> &signal)$/;"	f	class:CL_SlotBuffer_v1
distance	/usr/include/ClanLib/Core/Math/point.h	/^	float distance( const CL_Pointf &p ) const$/;"	f	class:CL_Pointf
distance	/usr/include/ClanLib/Core/Math/point.h	/^	int distance( const CL_Point &p ) const$/;"	f	class:CL_Point
dodgerblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color dodgerblue;$/;"	m	class:CL_Color
down	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	bool down;$/;"	m	class:CL_MenuNode_Silver
downloading	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^		downloading,$/;"	e	enum:CL_DCCDownload::DCCStatus
draw	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void draw($/;"	f	class:CL_GlyphBuffer
draw	/usr/include/ClanLib/Display/text_styler.h	/^	int draw($/;"	f	class:CL_TextStyler
drawArrays	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawArrays drawArrays;$/;"	m	class:CL_GLFunctions
drawBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawBuffer drawBuffer;$/;"	m	class:CL_GLFunctions
drawBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawBuffersARB drawBuffers;$/;"	m	class:CL_GLFunctions
drawElements	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawElements drawElements;$/;"	m	class:CL_GLFunctions
drawPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawPixels drawPixels;$/;"	m	class:CL_GLFunctions
drawRangeElements	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glDrawRangeElementsEXT drawRangeElements;$/;"	m	class:CL_GLFunctions
draw_from	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	int draw_from;$/;"	m	class:CL_InputBox_StyleBase
draw_only_surfaces	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	bool draw_only_surfaces;$/;"	m	class:CL_Button_Silver
draw_to_gb	/usr/include/ClanLib/Display/text_styler.h	/^	int draw_to_gb($/;"	f	class:CL_TextStyler
dummy	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	void dummy() {ptr->must_be_derived_from_cl_clonable();}$/;"	f	class:CL_LazyCopyPtr
dummy	/usr/include/ClanLib/Core/System/owningptr.h	/^		void dummy() { ptr->must_be_derived_from_cl_clonable(); }$/;"	f	class:CL_OwningPtr
edgeFlag	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEdgeFlag edgeFlag;$/;"	m	class:CL_GLFunctions
edgeFlagPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEdgeFlagPointer edgeFlagPointer;$/;"	m	class:CL_GLFunctions
edgeFlagv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEdgeFlagv edgeFlagv;$/;"	m	class:CL_GLFunctions
enable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEnable enable;$/;"	m	class:CL_GLFunctions
enableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEnableClientState enableClientState;$/;"	m	class:CL_GLFunctions
enableVertexAttribArray	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEnableVertexAttribArrayARB enableVertexAttribArray;$/;"	m	class:CL_GLFunctions
enable_colorkey	/usr/include/ClanLib/Display/pixel_format.h	/^	void enable_colorkey(bool enable = true) { colorkey_enabled = enable; }$/;"	f	class:CL_PixelFormat
enabled	/usr/include/ClanLib/Core/System/timer.h	/^	bool enabled;$/;"	m	class:CL_Timer
end	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	unsigned int end;$/;"	m	class:CL_OutlineCircle
end	/usr/include/ClanLib/Display/glyph_buffer.h	/^		int end;$/;"	m	struct:CL_GlyphBuffer::Range
end	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEnd end;$/;"	m	class:CL_GLFunctions
end	/usr/include/ClanLib/Signals/slot_v0.h	/^	SlotIterator pos, end;$/;"	m	class:CL_SlotParent_v0
endList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEndList endList;$/;"	m	class:CL_GLFunctions
endQuery	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEndQueryARB endQuery;$/;"	m	class:CL_GLFunctions
enter	/usr/include/ClanLib/Core/System/mutex.h	/^	void enter()$/;"	f	class:CL_MutexSection
equal	/usr/include/ClanLib/GUI/listitem.h	/^	virtual bool equal(const CL_ListItem & item) const$/;"	f	class:CL_ListItem
evalCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord1d evalCoord1d;$/;"	m	class:CL_GLFunctions
evalCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord1dv evalCoord1dv;$/;"	m	class:CL_GLFunctions
evalCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord1f evalCoord1f;$/;"	m	class:CL_GLFunctions
evalCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord1fv evalCoord1fv;$/;"	m	class:CL_GLFunctions
evalCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord2d evalCoord2d;$/;"	m	class:CL_GLFunctions
evalCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord2dv evalCoord2dv;$/;"	m	class:CL_GLFunctions
evalCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord2f evalCoord2f;$/;"	m	class:CL_GLFunctions
evalCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalCoord2fv evalCoord2fv;$/;"	m	class:CL_GLFunctions
evalMesh1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalMesh1 evalMesh1;$/;"	m	class:CL_GLFunctions
evalMesh2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalMesh2 evalMesh2;$/;"	m	class:CL_GLFunctions
evalPoint1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalPoint1 evalPoint1;$/;"	m	class:CL_GLFunctions
evalPoint2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glEvalPoint2 evalPoint2;$/;"	m	class:CL_GLFunctions
feedbackBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFeedbackBuffer feedbackBuffer;$/;"	m	class:CL_GLFunctions
file	/usr/include/ClanLib/Core/IOData/outputsource_file.h	/^	FILE *file;$/;"	m	class:CL_OutputSource_File
filehandle	/usr/include/ClanLib/Core/IOData/inputsource_file.h	/^	FILE *filehandle;$/;"	m	class:CL_InputSource_File
filename	/usr/include/ClanLib/Core/IOData/inputsource_file.h	/^	std::string filename;$/;"	m	class:CL_InputSource_File
filename	/usr/include/ClanLib/Core/IOData/outputsource_file.h	/^	std::string filename;$/;"	m	class:CL_OutputSource_File
filename	/usr/include/ClanLib/Core/System/cl_library.h	/^	std::string filename;$/;"	m	class:CL_LibraryLoader
filesize	/usr/include/ClanLib/Core/IOData/inputsource_file.h	/^	int filesize;$/;"	m	class:CL_InputSource_File
finish	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFinish finish;$/;"	m	class:CL_GLFunctions
finished	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^		finished$/;"	e	enum:CL_DCCDownload::DCCStatus
firebrick	/usr/include/ClanLib/Display/color.h	/^	static CL_Color firebrick;$/;"	m	class:CL_Color
fixed_draw	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void fixed_draw($/;"	f	class:CL_GlyphBuffer
flag_force_16bit	/usr/include/ClanLib/Display/surface.h	/^		flag_force_16bit = 2$/;"	e	enum:CL_Surface::Flag
flag_keep_pixelbuffer	/usr/include/ClanLib/Display/surface.h	/^		flag_keep_pixelbuffer = 1,$/;"	e	enum:CL_Surface::Flag
flag_none	/usr/include/ClanLib/Display/surface.h	/^		flag_none = 0,$/;"	e	enum:CL_Surface::Flag
floralwhite	/usr/include/ClanLib/Display/color.h	/^	static CL_Color floralwhite;$/;"	m	class:CL_Color
flush	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFlush flush;$/;"	m	class:CL_GLFunctions
fogCoordPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogCoordPointerEXT fogCoordPointer;$/;"	m	class:CL_GLFunctions
fogCoordd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogCoorddEXT fogCoordd;$/;"	m	class:CL_GLFunctions
fogCoorddv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogCoorddvEXT fogCoorddv;$/;"	m	class:CL_GLFunctions
fogCoordf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogCoordfEXT fogCoordf;$/;"	m	class:CL_GLFunctions
fogCoordfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogCoordfvEXT fogCoordfv;$/;"	m	class:CL_GLFunctions
fogf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogf fogf;$/;"	m	class:CL_GLFunctions
fogfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogfv fogfv;$/;"	m	class:CL_GLFunctions
fogi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogi fogi;$/;"	m	class:CL_GLFunctions
fogiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFogiv fogiv;$/;"	m	class:CL_GLFunctions
font	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	CL_Font *font;$/;"	m	class:CL_InputBox_StyleBase
font	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		CL_Font const * font;$/;"	m	struct:CL_RichEdit_Paragraph::Item
font	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Font *font;$/;"	m	class:CL_Button_Silver
font	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Font *font;$/;"	m	class:CL_CheckBox_Silver
font	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_Font *font;$/;"	m	class:CL_Label_Silver
font	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_Font *font;$/;"	m	class:CL_ListBox_Silver
font	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Font *font;$/;"	m	class:CL_MenuItem_Silver
font	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Font *font;$/;"	m	class:CL_RadioButton_Silver
font	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_Font *font;$/;"	m	class:CL_RichEdit_Silver
font	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^	CL_Font *font;$/;"	m	class:CL_TreeItem_Silver
font	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_Font *font;$/;"	m	class:CL_TreeView_Silver
font	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Font *font;$/;"	m	class:CL_Window_Silver
font_disabled	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Font *font_disabled;$/;"	m	class:CL_Button_Silver
font_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Font *font_disabled;$/;"	m	class:CL_CheckBox_Silver
font_disabled	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	/^	CL_Font *font_disabled;$/;"	m	class:CL_InputBox_Silver
font_disabled	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Font *font_disabled;$/;"	m	class:CL_MenuItem_Silver
font_disabled	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Font *font_disabled;$/;"	m	class:CL_Window_Silver
font_markers	/usr/include/ClanLib/Display/glyph_buffer.h	/^	mutable std::map<int, CL_Font> font_markers;$/;"	m	class:CL_GlyphBuffer
fonts	/usr/include/ClanLib/Display/text_styler.h	/^	std::map<std::string, CL_Font> fonts;$/;"	m	class:CL_TextStyler
forestgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color forestgreen;$/;"	m	class:CL_Color
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2, const Param3 &p3)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6)$/;"	f	class:CL_String
format	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string format(const std::string &str_format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6, const Param7 &p7)$/;"	f	class:CL_String
frame	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_Frame *frame;$/;"	m	class:CL_Frame_Silver
from	/usr/include/ClanLib/Core/System/clanstring.h	/^	static bool from(const std::string& rep, T& x)$/;"	f	class:CL_String
frontFace	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFrontFace frontFace;$/;"	m	class:CL_GLFunctions
frustum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glFrustum frustum;$/;"	m	class:CL_GLFunctions
fuchsia	/usr/include/ClanLib/Display/color.h	/^	static CL_Color fuchsia;$/;"	m	class:CL_Color
func	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^	MemberFunc func;$/;"	m	class:CL_ThreadFunc_Runnable_v0
func	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	MemberFunc func;$/;"	m	class:CL_ThreadFunc_Runnable_v1
func	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	MemberFunc func;$/;"	m	class:CL_ThreadFunc_Runnable_v2
functions	/usr/include/ClanLib/GL/opengl.h	/^	static CL_GLFunctions *functions;$/;"	m	class:CL_OpenGL
functor	/usr/include/ClanLib/Signals/slot_v0.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v0
functor	/usr/include/ClanLib/Signals/slot_v0.h	/^	Functor functor;$/;"	m	class:CL_FunctorVirtualSlot_v0
functor	/usr/include/ClanLib/Signals/slot_v1.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v1
functor	/usr/include/ClanLib/Signals/slot_v2.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v2
functor	/usr/include/ClanLib/Signals/slot_v3.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v3
functor	/usr/include/ClanLib/Signals/slot_v4.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v4
functor	/usr/include/ClanLib/Signals/slot_v5.h	/^	Functor functor;$/;"	m	class:CL_FunctorSlot_v5
gainsboro	/usr/include/ClanLib/Display/color.h	/^	static CL_Color gainsboro;$/;"	m	class:CL_Color
genBuffers	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGenBuffersARB genBuffers;$/;"	m	class:CL_GLFunctions
genLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGenLists genLists;$/;"	m	class:CL_GLFunctions
genQueries	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGenQueriesARB genQueries;$/;"	m	class:CL_GLFunctions
genTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGenTextures genTextures;$/;"	m	class:CL_GLFunctions
get	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U* get() {return ptr.get();}$/;"	f	class:CL_LazyCopyPtr
get	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	const U* get() const {return ptr.get();}$/;"	f	class:CL_LazyCopyPtr
get	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	U* get() { return (U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexSharedPtr
get	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	const U* get() const { return (const U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexSharedPtr
get	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	U* get() { return (U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexWeakPtr
get	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	const U* get() const { return (const U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexWeakPtr
get	/usr/include/ClanLib/Core/System/owningptr.h	/^		U* get() {return (U*)ptr;}$/;"	f	class:CL_OwningPtr
get	/usr/include/ClanLib/Core/System/owningptr.h	/^		const U* get() const {return (const U*)ptr;}$/;"	f	class:CL_OwningPtr
get	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U const* get() const { return (const U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_SharedPtr
get	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U* get() { return (U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_SharedPtr
get	/usr/include/ClanLib/Core/System/weakptr.h	/^	U* get() { return (U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_WeakPtr
get	/usr/include/ClanLib/Core/System/weakptr.h	/^	const U* get() const { return (const U*) ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_WeakPtr
getActiveAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetActiveAttribARB getActiveAttrib;$/;"	m	class:CL_GLFunctions
getActiveUniform	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetActiveUniformARB getActiveUniform;$/;"	m	class:CL_GLFunctions
getAttachedShaders	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetAttachedObjectsARB getAttachedShaders;$/;"	m	class:CL_GLFunctions
getAttribLocation	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetAttribLocationARB getAttribLocation;$/;"	m	class:CL_GLFunctions
getBooleanv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetBooleanv getBooleanv;$/;"	m	class:CL_GLFunctions
getBufferParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetBufferParameterivARB getBufferParameteriv;$/;"	m	class:CL_GLFunctions
getBufferPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetBufferPointervARB getBufferPointerv;$/;"	m	class:CL_GLFunctions
getBufferSubData	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetBufferSubDataARB getBufferSubData;$/;"	m	class:CL_GLFunctions
getClipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetClipPlane getClipPlane;$/;"	m	class:CL_GLFunctions
getColorTable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetColorTableSGI getColorTable;$/;"	m	class:CL_GLFunctions
getColorTableParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetColorTableParameterfvSGI getColorTableParameterfv;$/;"	m	class:CL_GLFunctions
getColorTableParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetColorTableParameterivSGI getColorTableParameteriv;$/;"	m	class:CL_GLFunctions
getCompressedTexImage	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetCompressedTexImageARB getCompressedTexImage;$/;"	m	class:CL_GLFunctions
getConvolutionFilter	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetConvolutionFilterEXT getConvolutionFilter;$/;"	m	class:CL_GLFunctions
getConvolutionParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetConvolutionParameterfvEXT getConvolutionParameterfv;$/;"	m	class:CL_GLFunctions
getConvolutionParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetConvolutionParameterivEXT getConvolutionParameteriv;$/;"	m	class:CL_GLFunctions
getDoublev	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetDoublev getDoublev;$/;"	m	class:CL_GLFunctions
getError	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetError getError;$/;"	m	class:CL_GLFunctions
getFloatv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetFloatv getFloatv;$/;"	m	class:CL_GLFunctions
getHandle	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetHandleARB getHandle;$/;"	m	class:CL_GLFunctions
getHistogram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetHistogramEXT getHistogram;$/;"	m	class:CL_GLFunctions
getHistogramParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetHistogramParameterfvEXT getHistogramParameterfv;$/;"	m	class:CL_GLFunctions
getHistogramParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetHistogramParameterivEXT getHistogramParameteriv;$/;"	m	class:CL_GLFunctions
getIntegerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetIntegerv getIntegerv;$/;"	m	class:CL_GLFunctions
getLightfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetLightfv getLightfv;$/;"	m	class:CL_GLFunctions
getLightiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetLightiv getLightiv;$/;"	m	class:CL_GLFunctions
getMapdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMapdv getMapdv;$/;"	m	class:CL_GLFunctions
getMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMapfv getMapfv;$/;"	m	class:CL_GLFunctions
getMapiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMapiv getMapiv;$/;"	m	class:CL_GLFunctions
getMaterialfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMaterialfv getMaterialfv;$/;"	m	class:CL_GLFunctions
getMaterialiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMaterialiv getMaterialiv;$/;"	m	class:CL_GLFunctions
getMinmax	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMinmaxEXT getMinmax;$/;"	m	class:CL_GLFunctions
getMinmaxParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMinmaxParameterfvEXT getMinmaxParameterfv;$/;"	m	class:CL_GLFunctions
getMinmaxParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetMinmaxParameterivEXT getMinmaxParameteriv;$/;"	m	class:CL_GLFunctions
getPixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetPixelMapfv getPixelMapfv;$/;"	m	class:CL_GLFunctions
getPixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetPixelMapuiv getPixelMapuiv;$/;"	m	class:CL_GLFunctions
getPixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetPixelMapusv getPixelMapusv;$/;"	m	class:CL_GLFunctions
getPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetPointerv getPointerv;$/;"	m	class:CL_GLFunctions
getPolygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetPolygonStipple getPolygonStipple;$/;"	m	class:CL_GLFunctions
getProgramInfoLog	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetInfoLogARB getProgramInfoLog;$/;"	m	class:CL_GLFunctions
getProgramfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetObjectParameterfvARB getProgramfv;$/;"	m	class:CL_GLFunctions
getProgramiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetObjectParameterivARB getProgramiv;$/;"	m	class:CL_GLFunctions
getQueryObjectiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetQueryObjectivARB getQueryObjectiv;$/;"	m	class:CL_GLFunctions
getQueryObjectuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetQueryObjectuivARB getQueryObjectuiv;$/;"	m	class:CL_GLFunctions
getQueryiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetQueryivARB getQueryiv;$/;"	m	class:CL_GLFunctions
getSeparableFilter	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetSeparableFilterEXT getSeparableFilter;$/;"	m	class:CL_GLFunctions
getShaderInfoLog	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetInfoLogARB getShaderInfoLog;$/;"	m	class:CL_GLFunctions
getShaderSource	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetShaderSourceARB getShaderSource;$/;"	m	class:CL_GLFunctions
getShaderfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetObjectParameterfvARB getShaderfv;$/;"	m	class:CL_GLFunctions
getShaderiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetObjectParameterivARB getShaderiv;$/;"	m	class:CL_GLFunctions
getString	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetString getString;$/;"	m	class:CL_GLFunctions
getTexEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexEnvfv getTexEnvfv;$/;"	m	class:CL_GLFunctions
getTexEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexEnviv getTexEnviv;$/;"	m	class:CL_GLFunctions
getTexGendv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexGendv getTexGendv;$/;"	m	class:CL_GLFunctions
getTexGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexGenfv getTexGenfv;$/;"	m	class:CL_GLFunctions
getTexGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexGeniv getTexGeniv;$/;"	m	class:CL_GLFunctions
getTexImage	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexImage getTexImage;$/;"	m	class:CL_GLFunctions
getTexLevelParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexLevelParameterfv getTexLevelParameterfv;$/;"	m	class:CL_GLFunctions
getTexLevelParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexLevelParameteriv getTexLevelParameteriv;$/;"	m	class:CL_GLFunctions
getTexParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexParameterfv getTexParameterfv;$/;"	m	class:CL_GLFunctions
getTexParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetTexParameteriv getTexParameteriv;$/;"	m	class:CL_GLFunctions
getUniformLocation	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetUniformLocationARB getUniformLocation;$/;"	m	class:CL_GLFunctions
getUniformfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetUniformfvARB getUniformfv;$/;"	m	class:CL_GLFunctions
getUniformiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetUniformivARB getUniformiv;$/;"	m	class:CL_GLFunctions
getVertexAttribPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetVertexAttribPointervARB getVertexAttribPointerv;$/;"	m	class:CL_GLFunctions
getVertexAttribdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetVertexAttribdvARB getVertexAttribdv;$/;"	m	class:CL_GLFunctions
getVertexAttribfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetVertexAttribfvARB getVertexAttribfv;$/;"	m	class:CL_GLFunctions
getVertexAttribiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glGetVertexAttribivARB getVertexAttribiv;$/;"	m	class:CL_GLFunctions
get_alignment	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void get_alignment(CL_Origin &origin, int &x, int &y) const$/;"	f	class:CL_GlyphBuffer
get_alignment	/usr/include/ClanLib/Display/text_styler.h	/^	void get_alignment(CL_Origin &origin, int &x, int &y) const$/;"	f	class:CL_TextStyler
get_alpha	/usr/include/ClanLib/Display/color.h	/^	unsigned int get_alpha() const { return (color >> 24) & 0xff; }$/;"	f	class:CL_Color
get_alpha_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int get_alpha_mask() const { return alpha_mask; }$/;"	f	class:CL_PixelFormat
get_angle	/usr/include/ClanLib/Display/glyph_buffer.h	/^	float get_angle() const$/;"	f	class:CL_GlyphBuffer
get_angle_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::map<int, float>& get_angle_effects() const {return angle_effects;}$/;"	f	class:CL_GlyphBuffer
get_angle_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float>& get_angle_effects() {return angle_effects;}$/;"	f	class:CL_GlyphBuffer
get_blue	/usr/include/ClanLib/Display/color.h	/^	unsigned int get_blue() const { return color & 0xff; }$/;"	f	class:CL_Color
get_blue_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int get_blue_mask() const { return blue_mask; }$/;"	f	class:CL_PixelFormat
get_color	/usr/include/ClanLib/Display/sprite.h	/^	CL_Color get_color() const {float r,g,b,a; get_color(r,g,b,a); return CL_Color(int(r*255.0f),int(g*255.0f),int(b*255.0f),int(a*255.0f));}$/;"	f	class:CL_Sprite
get_color	/usr/include/ClanLib/Display/surface.h	/^	CL_Color get_color() const {float r,g,b,a; get_color(r,g,b,a); return CL_Color(int(r*255.0f),int(g*255.0f),int(b*255.0f),int(a*255.0f));}$/;"	f	class:CL_Surface
get_color_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::map<int, CL_Color>& get_color_effects() const {return color_effects;}$/;"	f	class:CL_GlyphBuffer
get_color_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, CL_Color>& get_color_effects() {return color_effects;}$/;"	f	class:CL_GlyphBuffer
get_colorkey	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int get_colorkey() const { return colorkey; }$/;"	f	class:CL_PixelFormat
get_component	/usr/include/ClanLib/GUI/component_manager.h	/^	void get_component(const std::string &name, Comp **component) const$/;"	f	class:CL_ComponentManager
get_component	/usr/include/ClanLib/GUI/component_style.h	/^	CL_Component *get_component() { return comp; }$/;"	f	class:CL_ComponentStyle
get_component	/usr/include/ClanLib/GUI/component_style.h	/^	const CL_Component *get_component() const { return comp; }$/;"	f	class:CL_ComponentStyle
get_data	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	const std::vector<unsigned char> &get_data() const$/;"	f	class:CL_Raw
get_data	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	std::vector<unsigned char> &get_data()$/;"	f	class:CL_Raw
get_depth	/usr/include/ClanLib/Display/pixel_format.h	/^	int get_depth() const { return depth; }$/;"	f	class:CL_PixelFormat
get_font_markers	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::map<int, CL_Font>& get_font_markers() const {return font_markers;}$/;"	f	class:CL_GlyphBuffer
get_font_markers	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, CL_Font>& get_font_markers() {return font_markers;}$/;"	f	class:CL_GlyphBuffer
get_fonts	/usr/include/ClanLib/Display/text_styler.h	/^	const std::map<std::string, CL_Font>& get_fonts() const$/;"	f	class:CL_TextStyler
get_fonts	/usr/include/ClanLib/Display/text_styler.h	/^	std::map<std::string, CL_Font>& get_fonts()$/;"	f	class:CL_TextStyler
get_fuzz	/usr/include/ClanLib/Core/Math/vector2.h	/^	bool get_fuzz() { return (FUZZ > 0.0)? true : false ;}$/;"	f	class:CL_Vector2
get_glyph_num	/usr/include/ClanLib/Display/glyph_buffer.h	/^			int get_glyph_num() const {return glyph_num;}$/;"	f	class:CL_GlyphBuffer::Iter
get_glyphs	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::vector<Glyph>& get_glyphs() const {return glyphs;}$/;"	f	class:CL_GlyphBuffer
get_glyphs	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::vector<Glyph>& get_glyphs() {return glyphs;}$/;"	f	class:CL_GlyphBuffer
get_green	/usr/include/ClanLib/Display/color.h	/^	unsigned int get_green() const { return (color >> 8) & 0xff; }$/;"	f	class:CL_Color
get_green_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int get_green_mask() const { return green_mask; }$/;"	f	class:CL_PixelFormat
get_height	/usr/include/ClanLib/Core/Math/rect.h	/^	float get_height() const { return bottom - top; }$/;"	f	class:CL_Rectf
get_height	/usr/include/ClanLib/Core/Math/rect.h	/^	int get_height() const { return bottom - top; }$/;"	f	class:CL_Rect
get_height	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_height(Range range, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_height	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_height(bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_height	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_height(int idx, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_height	/usr/include/ClanLib/Display/text_styler.h	/^	int get_height($/;"	f	class:CL_TextStyler
get_impl	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr_Generic<T> *get_impl() { return impl; }$/;"	f	class:CL_MutexSharedPtr
get_impl	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr_Generic<T> *get_impl() { return impl; }$/;"	f	class:CL_SharedPtr
get_lines	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::vector<Range> get_lines() const$/;"	f	class:CL_GlyphBuffer
get_red	/usr/include/ClanLib/Display/color.h	/^	unsigned int get_red() const { return (color >> 16) & 0xff; }$/;"	f	class:CL_Color
get_red_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int get_red_mask() const { return red_mask; }$/;"	f	class:CL_PixelFormat
get_ref_count	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	int get_ref_count() const {return ptr.ptr_ref_count();}$/;"	f	class:CL_LazyCopyPtr
get_ref_count	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	int get_ref_count() const { if (impl == 0) return 0; return impl->ref_count; }$/;"	f	class:CL_MutexSharedPtr
get_ref_count	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	int get_ref_count() const { if (impl == 0) return 0; return impl->ref_count; }$/;"	f	class:CL_MutexWeakPtr
get_ref_count	/usr/include/ClanLib/Core/System/sharedptr.h	/^	int get_ref_count() const { if (impl == 0) return 0; return impl->ref_count; }$/;"	f	class:CL_SharedPtr
get_ref_count	/usr/include/ClanLib/Core/System/weakptr.h	/^	int get_ref_count() const { if (impl == 0) return 0; return impl->ref_count; }$/;"	f	class:CL_WeakPtr
get_rotation_hotspot	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void get_rotation_hotspot(CL_Origin &origin, int &x, int &y) const$/;"	f	class:CL_GlyphBuffer
get_scale	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void get_scale(float &x, float &y) const$/;"	f	class:CL_GlyphBuffer
get_scale	/usr/include/ClanLib/Display/text_styler.h	/^	void get_scale(float &x, float &y) const$/;"	f	class:CL_TextStyler
get_scale_x_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::map<int, float>& get_scale_x_effects() const {return scale_x_effects;}$/;"	f	class:CL_GlyphBuffer
get_scale_x_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float>& get_scale_x_effects() {return scale_x_effects;}$/;"	f	class:CL_GlyphBuffer
get_scale_y_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	const std::map<int, float>& get_scale_y_effects() const {return scale_y_effects;}$/;"	f	class:CL_GlyphBuffer
get_scale_y_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float>& get_scale_y_effects() {return scale_y_effects;}$/;"	f	class:CL_GlyphBuffer
get_size	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Size get_size() const { return CL_Size(get_width(), get_height()); }$/;"	f	class:CL_Quad
get_size	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Size get_size() const { return CL_Size(right - left, bottom - top); }$/;"	f	class:CL_Rect
get_size	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Sizef get_size() const { return CL_Sizef(right - left, bottom - top); }$/;"	f	class:CL_Rectf
get_size	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Size get_size(Range range, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_size	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Size get_size(bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_size	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Size get_size(int idx, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_size	/usr/include/ClanLib/Display/text_styler.h	/^	CL_Size get_size($/;"	f	class:CL_TextStyler
get_type	/usr/include/ClanLib/Display/pixel_format.h	/^	CL_PixelFormatType get_type() const { return type; }$/;"	f	class:CL_PixelFormat
get_width	/usr/include/ClanLib/Core/Math/rect.h	/^	float get_width() const { return right - left; }$/;"	f	class:CL_Rectf
get_width	/usr/include/ClanLib/Core/Math/rect.h	/^	int get_width() const { return right - left; }$/;"	f	class:CL_Rect
get_width	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_width(Range range, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_width	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_width(bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_width	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int get_width(int idx, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
get_width	/usr/include/ClanLib/Display/text_styler.h	/^	int get_width($/;"	f	class:CL_TextStyler
ghostwhite	/usr/include/ClanLib/Display/color.h	/^	static CL_Color ghostwhite;$/;"	m	class:CL_Color
glLoadTransposeMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadTransposeMatrixdARB glLoadTransposeMatrixd;$/;"	m	class:CL_GLFunctions
glLoadTransposeMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadTransposeMatrixfARB glLoadTransposeMatrixf;$/;"	m	class:CL_GLFunctions
glMultTransposeMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultTransposeMatrixdARB glMultTransposeMatrixd;$/;"	m	class:CL_GLFunctions
glMultTransposeMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultTransposeMatrixfARB glMultTransposeMatrixf;$/;"	m	class:CL_GLFunctions
glyph_num	/usr/include/ClanLib/Display/glyph_buffer.h	/^			int glyph_num;$/;"	m	class:CL_GlyphBuffer::Iter
glyphs	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::vector<Glyph> glyphs;$/;"	m	class:CL_GlyphBuffer
gold	/usr/include/ClanLib/Display/color.h	/^	static CL_Color gold;$/;"	m	class:CL_Color
goldenrod	/usr/include/ClanLib/Display/color.h	/^	static CL_Color goldenrod;$/;"	m	class:CL_Color
gray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color gray;$/;"	m	class:CL_Color
green	/usr/include/ClanLib/Display/color.h	/^	float green;$/;"	m	class:CL_Colorf
green	/usr/include/ClanLib/Display/color.h	/^	static CL_Color green;$/;"	m	class:CL_Color
green	/usr/include/ClanLib/Display/surface.h	/^	double green;$/;"	m	struct:CL_Surface_DrawParams2
green	/usr/include/ClanLib/Display/surface.h	/^	double green[4];$/;"	m	struct:CL_Surface_DrawParams1
green_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int green_mask;$/;"	m	class:CL_PixelFormat
greenyellow	/usr/include/ClanLib/Display/color.h	/^	static CL_Color greenyellow;$/;"	m	class:CL_Color
grey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color grey;$/;"	m	class:CL_Color
handle	/usr/include/ClanLib/Core/System/cl_library.h	/^	HINSTANCE handle;$/;"	m	class:CL_LibraryLoader
handle	/usr/include/ClanLib/Core/System/cl_library.h	/^	void *handle;$/;"	m	class:CL_LibraryLoader
has_colorkey	/usr/include/ClanLib/Display/pixel_format.h	/^	bool has_colorkey() const { return colorkey_enabled; }$/;"	f	class:CL_PixelFormat
has_slots_connected	/usr/include/ClanLib/Signals/signal_v1.h	/^	bool has_slots_connected() const$/;"	f	class:CL_Signal_v1
has_slots_connected	/usr/include/ClanLib/Signals/signal_v2.h	/^	bool has_slots_connected() const$/;"	f	class:CL_Signal_v2
has_slots_connected	/usr/include/ClanLib/Signals/signal_v3.h	/^	bool has_slots_connected() const$/;"	f	class:CL_Signal_v3
has_slots_connected	/usr/include/ClanLib/Signals/signal_v4.h	/^	bool has_slots_connected() const$/;"	f	class:CL_Signal_v4
has_slots_connected	/usr/include/ClanLib/Signals/signal_v5.h	/^	bool has_slots_connected() const$/;"	f	class:CL_Signal_v5
header_application	/usr/include/ClanLib/application.h	36;"	d
header_area	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_Component *header_area;$/;"	m	class:CL_TreeView_Silver
header_blend_func	/usr/include/ClanLib/Display/blend_func.h	34;"	d
header_bmp_provider	/usr/include/ClanLib/Display/Providers/bmp_provider.h	34;"	d
header_button	/usr/include/ClanLib/GUI/button.h	34;"	d
header_button_silver	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	35;"	d
header_call_stack	/usr/include/ClanLib/Core/System/call_stack.h	34;"	d
header_canvas	/usr/include/ClanLib/Display/canvas.h	34;"	d
header_cd_drive	/usr/include/ClanLib/Sound/cd_drive.h	34;"	d
header_checkbox	/usr/include/ClanLib/GUI/checkbox.h	34;"	d
header_checkbox_silver	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	34;"	d
header_circle	/usr/include/ClanLib/Core/Math/circle.h	34;"	d
header_cl_assert	/usr/include/ClanLib/Core/System/cl_assert.h	34;"	d
header_cl_library	/usr/include/ClanLib/Core/System/cl_library.h	34;"	d
header_cl_vector	/usr/include/ClanLib/Core/Math/cl_vector.h	34;"	d
header_clanapp	/usr/include/ClanLib/Application/clanapp.h	34;"	d
header_clanstring	/usr/include/ClanLib/Core/System/clanstring.h	34;"	d
header_clipboard	/usr/include/ClanLib/Core/System/clipboard.h	34;"	d
header_collision_outline	/usr/include/ClanLib/Display/Collision/collision_outline.h	37;"	d
header_color	/usr/include/ClanLib/Display/color.h	34;"	d
header_component	/usr/include/ClanLib/GUI/component.h	34;"	d
header_component_manager	/usr/include/ClanLib/GUI/component_manager.h	34;"	d
header_component_move_handler	/usr/include/ClanLib/GUI/component_move_handler.h	34;"	d
header_component_resize_handler	/usr/include/ClanLib/GUI/component_resize_handler.h	34;"	d
header_component_style	/usr/include/ClanLib/GUI/component_style.h	34;"	d
header_component_type	/usr/include/ClanLib/GUI/component_type.h	34;"	d
header_console_window	/usr/include/ClanLib/Core/System/console_window.h	34;"	d
header_contour	/usr/include/ClanLib/Display/Collision/contour.h	35;"	d
header_core	/usr/include/ClanLib/core.h	37;"	d
header_core_iostream	/usr/include/ClanLib/Core/core_iostream.h	31;"	d
header_core_system_command_line	/usr/include/ClanLib/Core/System/command_line.h	34;"	d
header_crash_reporter	/usr/include/ClanLib/Core/System/crash_reporter.h	34;"	d
header_dc_buffer	/usr/include/ClanLib/Display/Providers/dc_buffer.h	34;"	d
header_dcc_download	/usr/include/ClanLib/Network/IRC/dcc_download.h	34;"	d
header_deck	/usr/include/ClanLib/GUI/deck.h	34;"	d
header_delauney_triangulator	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	34;"	d
header_directory	/usr/include/ClanLib/Core/IOData/directory.h	34;"	d
header_directory_scanner	/usr/include/ClanLib/Core/IOData/directory_scanner.h	34;"	d
header_display	/usr/include/ClanLib/Display/display.h	34;"	d
header_display_include	/usr/include/ClanLib/display.h	35;"	d
header_display_iostream	/usr/include/ClanLib/Display/display_iostream.h	31;"	d
header_display_mode	/usr/include/ClanLib/Display/display_mode.h	34;"	d
header_display_window	/usr/include/ClanLib/Display/display_window.h	34;"	d
header_display_window_description	/usr/include/ClanLib/Display/display_window_description.h	34;"	d
header_dom_attr	/usr/include/ClanLib/Core/XML/dom_attr.h	34;"	d
header_dom_cdata_section	/usr/include/ClanLib/Core/XML/dom_cdata_section.h	34;"	d
header_dom_character_data	/usr/include/ClanLib/Core/XML/dom_character_data.h	34;"	d
header_dom_comment	/usr/include/ClanLib/Core/XML/dom_comment.h	34;"	d
header_dom_document	/usr/include/ClanLib/Core/XML/dom_document.h	34;"	d
header_dom_document_fragment	/usr/include/ClanLib/Core/XML/dom_document_fragment.h	34;"	d
header_dom_document_type	/usr/include/ClanLib/Core/XML/dom_document_type.h	34;"	d
header_dom_element	/usr/include/ClanLib/Core/XML/dom_element.h	34;"	d
header_dom_entity	/usr/include/ClanLib/Core/XML/dom_entity.h	34;"	d
header_dom_entity_reference	/usr/include/ClanLib/Core/XML/dom_entity_reference.h	34;"	d
header_dom_exception	/usr/include/ClanLib/Core/XML/dom_exception.h	34;"	d
header_dom_implementation	/usr/include/ClanLib/Core/XML/dom_implementation.h	34;"	d
header_dom_named_node_map	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	34;"	d
header_dom_node	/usr/include/ClanLib/Core/XML/dom_node.h	34;"	d
header_dom_node_list	/usr/include/ClanLib/Core/XML/dom_node_list.h	34;"	d
header_dom_notation	/usr/include/ClanLib/Core/XML/dom_notation.h	34;"	d
header_dom_processing_instruction	/usr/include/ClanLib/Core/XML/dom_processing_instruction.h	34;"	d
header_dom_text	/usr/include/ClanLib/Core/XML/dom_text.h	34;"	d
header_echofilter	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	34;"	d
header_endian	/usr/include/ClanLib/Core/IOData/cl_endian.h	34;"	d
header_error	/usr/include/ClanLib/Core/System/error.h	34;"	d
header_event_listener	/usr/include/ClanLib/Core/System/event_listener.h	34;"	d
header_event_trigger	/usr/include/ClanLib/Core/System/event_trigger.h	34;"	d
header_fadefilter	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	34;"	d
header_file_dialog	/usr/include/ClanLib/GUI/filedialog.h	34;"	d
header_font	/usr/include/ClanLib/Display/font.h	34;"	d
header_frame	/usr/include/ClanLib/GUI/frame.h	34;"	d
header_frame_silver	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	34;"	d
header_frameratecounter	/usr/include/ClanLib/Display/frameratecounter.h	34;"	d
header_gl	/usr/include/ClanLib/gl.h	35;"	d
header_glyph_buffer	/usr/include/ClanLib/Display/glyph_buffer.h	34;"	d
header_gradient	/usr/include/ClanLib/Display/gradient.h	34;"	d
header_graphic_context	/usr/include/ClanLib/Display/graphic_context.h	34;"	d
header_gui	/usr/include/ClanLib/gui.h	35;"	d
header_gui_manager	/usr/include/ClanLib/GUI/gui_manager.h	34;"	d
header_guistylesilver	/usr/include/ClanLib/guistylesilver.h	35;"	d
header_image	/usr/include/ClanLib/GUI/image.h	34;"	d
header_image_silver	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	34;"	d
header_input_context	/usr/include/ClanLib/Display/input_context.h	34;"	d
header_inputbox	/usr/include/ClanLib/GUI/inputbox.h	34;"	d
header_inputbox_silver	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	34;"	d
header_inputbox_stylebase	/usr/include/ClanLib/GUI/inputbox_stylebase.h	31;"	d
header_inputbuffer	/usr/include/ClanLib/Display/input_buffer.h	34;"	d
header_inputbutton	/usr/include/ClanLib/Display/input_button.h	34;"	d
header_inputdevice	/usr/include/ClanLib/Display/input_device.h	34;"	d
header_inputdialog	/usr/include/ClanLib/GUI/inputdialog.h	34;"	d
header_inputevent	/usr/include/ClanLib/Display/input_event.h	34;"	d
header_inputsource	/usr/include/ClanLib/Core/IOData/inputsource.h	34;"	d
header_inputsource_file	/usr/include/ClanLib/Core/IOData/inputsource_file.h	34;"	d
header_inputsource_memory	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	34;"	d
header_inputsource_netpacket	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	34;"	d
header_inputsource_netstream	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	34;"	d
header_inputsource_provider	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	34;"	d
header_inputsource_provider_file	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	34;"	d
header_inputsource_socket	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	34;"	d
header_inputsource_zipped	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	34;"	d
header_inverse_echofilter	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	34;"	d
header_iotypes	/usr/include/ClanLib/Core/IOData/datatypes.h	34;"	d
header_ip_address	/usr/include/ClanLib/Network/Socket/ip_address.h	34;"	d
header_irc_connection	/usr/include/ClanLib/Network/IRC/irc_connection.h	34;"	d
header_joystick	/usr/include/ClanLib/Display/joystick.h	34;"	d
header_jpeg_provider	/usr/include/ClanLib/Display/Providers/jpeg_provider.h	34;"	d
header_keepalive	/usr/include/ClanLib/Core/System/keep_alive.h	34;"	d
header_keybinding	/usr/include/ClanLib/Display/key_binding.h	34;"	d
header_keyboard	/usr/include/ClanLib/Display/keyboard.h	34;"	d
header_keys	/usr/include/ClanLib/Display/keys.h	34;"	d
header_label	/usr/include/ClanLib/GUI/label.h	34;"	d
header_label_silver	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	34;"	d
header_layout	/usr/include/ClanLib/GUI/layout.h	34;"	d
header_light_source	/usr/include/ClanLib/GL/light_source.h	34;"	d
header_line_math	/usr/include/ClanLib/Core/Math/line_math.h	34;"	d
header_listbox	/usr/include/ClanLib/GUI/listbox.h	34;"	d
header_listbox_item	/usr/include/ClanLib/GUI/listitem.h	34;"	d
header_listbox_silver	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	34;"	d
header_log	/usr/include/ClanLib/Core/System/log.h	34;"	d
header_math	/usr/include/ClanLib/Core/Math/math.h	31;"	d
header_matrix4x4	/usr/include/ClanLib/Core/Math/matrix4x4.h	34;"	d
header_menu	/usr/include/ClanLib/GUI/menu.h	34;"	d
header_menu_item	/usr/include/ClanLib/GUI/menu_item.h	34;"	d
header_menu_item_silver	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	34;"	d
header_menu_node	/usr/include/ClanLib/GUI/menu_node.h	34;"	d
header_menu_node_silver	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	34;"	d
header_menu_silver	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	34;"	d
header_messagebox	/usr/include/ClanLib/GUI/messagebox.h	34;"	d
header_mikmod	/usr/include/ClanLib/mikmod.h	35;"	d
header_mouse	/usr/include/ClanLib/Display/mouse.h	34;"	d
header_mutex	/usr/include/ClanLib/Core/System/mutex.h	34;"	d
header_netcomputer	/usr/include/ClanLib/Network/NetSession/netcomputer.h	34;"	d
header_netgroup	/usr/include/ClanLib/Network/NetSession/netgroup.h	34;"	d
header_netobject_client	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	34;"	d
header_netobject_controller	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	34;"	d
header_netobject_server	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	34;"	d
header_netpacket	/usr/include/ClanLib/Network/NetSession/netpacket.h	34;"	d
header_netsession	/usr/include/ClanLib/Network/NetSession/netsession.h	34;"	d
header_netstream	/usr/include/ClanLib/Network/NetSession/netstream.h	34;"	d
header_netvariables	/usr/include/ClanLib/Network/NetVariables/netvariables.h	34;"	d
header_network_api	/usr/include/ClanLib/network.h	35;"	d
header_number_pool	/usr/include/ClanLib/Core/Math/number_pool.h	34;"	d
header_opengl	/usr/include/ClanLib/GL/opengl.h	34;"	d
header_opengl_state	/usr/include/ClanLib/GL/opengl_state.h	34;"	d
header_opengl_state_data	/usr/include/ClanLib/GL/opengl_state_data.h	34;"	d
header_opengl_surface	/usr/include/ClanLib/GL/opengl_surface.h	34;"	d
header_opengl_window	/usr/include/ClanLib/GL/opengl_window.h	34;"	d
header_opengl_window_description	/usr/include/ClanLib/GL/opengl_window_description.h	34;"	d
header_opengl_wrap	/usr/include/ClanLib/GL/opengl_wrap.h	34;"	d
header_origin	/usr/include/ClanLib/Core/Math/origin.h	34;"	d
header_outline_accuracy	/usr/include/ClanLib/Display/Collision/outline_accuracy.h	35;"	d
header_outline_circle	/usr/include/ClanLib/Display/Collision/outline_circle.h	35;"	d
header_outline_math	/usr/include/ClanLib/Display/Collision/outline_math.h	34;"	d
header_outline_provider	/usr/include/ClanLib/Display/Collision/outline_provider.h	35;"	d
header_outline_provider_bitmap	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	35;"	d
header_outline_provider_file	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	35;"	d
header_outline_triangulator	/usr/include/ClanLib/Core/Math/outline_triangulator.h	34;"	d
header_outputsource	/usr/include/ClanLib/Core/IOData/outputsource.h	34;"	d
header_outputsource_file	/usr/include/ClanLib/Core/IOData/outputsource_file.h	34;"	d
header_outputsource_memory	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	34;"	d
header_outputsource_netpacket	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	34;"	d
header_outputsource_netstream	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	34;"	d
header_outputsource_provider	/usr/include/ClanLib/Core/IOData/outputsource_provider.h	34;"	d
header_outputsource_socket	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	34;"	d
header_outputsource_zipped	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	34;"	d
header_palette	/usr/include/ClanLib/Display/palette.h	34;"	d
header_pcx_provider	/usr/include/ClanLib/Display/Providers/pcx_provider.h	34;"	d
header_pixel_buffer	/usr/include/ClanLib/Display/pixel_buffer.h	34;"	d
header_pixel_format_type	/usr/include/ClanLib/Display/pixel_format_type.h	34;"	d
header_pixelformat	/usr/include/ClanLib/Display/pixel_format.h	34;"	d
header_png_provider	/usr/include/ClanLib/Display/Providers/png_provider.h	34;"	d
header_point	/usr/include/ClanLib/Core/Math/point.h	34;"	d
header_pointset_math	/usr/include/ClanLib/Core/Math/pointset_math.h	34;"	d
header_program_attribute	/usr/include/ClanLib/GL/program_attribute.h	34;"	d
header_program_object	/usr/include/ClanLib/GL/program_object.h	34;"	d
header_program_uniform	/usr/include/ClanLib/GL/program_uniform.h	34;"	d
header_progressbar	/usr/include/ClanLib/GUI/progressbar.h	34;"	d
header_progressbar_silver	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	34;"	d
header_provider_factory	/usr/include/ClanLib/Display/Providers/provider_factory.h	34;"	d
header_provider_type	/usr/include/ClanLib/Display/Providers/provider_type.h	34;"	d
header_provider_type_register	/usr/include/ClanLib/Display/Providers/provider_type_register.h	34;"	d
header_quad	/usr/include/ClanLib/Core/Math/quad.h	34;"	d
header_radiobutton	/usr/include/ClanLib/GUI/radiobutton.h	34;"	d
header_radiobutton_silver	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	34;"	d
header_radiogroup	/usr/include/ClanLib/GUI/radiogroup.h	34;"	d
header_rect	/usr/include/ClanLib/Core/Math/rect.h	34;"	d
header_resource	/usr/include/ClanLib/Core/Resources/resource.h	34;"	d
header_resource_manager	/usr/include/ClanLib/Core/Resources/resource_manager.h	34;"	d
header_resourcedata	/usr/include/ClanLib/Core/Resources/resourcedata.h	34;"	d
header_resourcetype_boolean	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	34;"	d
header_resourcetype_float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	34;"	d
header_resourcetype_integer	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	34;"	d
header_resourcetype_raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	34;"	d
header_resourcetype_string	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	34;"	d
header_richedit	/usr/include/ClanLib/GUI/richedit.h	34;"	d
header_richedit_item	/usr/include/ClanLib/GUI/richedit_paragraph.h	34;"	d
header_richedit_silver	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	34;"	d
header_rle_surface	/usr/include/ClanLib/Display/rle_surface.h	34;"	d
header_scrollbar	/usr/include/ClanLib/GUI/scrollbar.h	34;"	d
header_scrollbar_silver	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	35;"	d
header_sdl	/usr/include/ClanLib/sdl.h	35;"	d
header_setupcore	/usr/include/ClanLib/Core/System/setupcore.h	34;"	d
header_setupdisplay	/usr/include/ClanLib/Display/setupdisplay.h	34;"	d
header_setupgl	/usr/include/ClanLib/GL/setupgl.h	34;"	d
header_setupgui	/usr/include/ClanLib/GUI/setupgui.h	34;"	d
header_setupmikmod	/usr/include/ClanLib/MikMod/setupmikmod.h	34;"	d
header_setupnetwork	/usr/include/ClanLib/Network/setupnetwork.h	34;"	d
header_setupsdl	/usr/include/ClanLib/SDL/setupsdl.h	34;"	d
header_setupsound	/usr/include/ClanLib/Sound/setupsound.h	34;"	d
header_setupvorbis	/usr/include/ClanLib/Vorbis/setupvorbis.h	34;"	d
header_shader_object	/usr/include/ClanLib/GL/shader_object.h	34;"	d
header_signal	/usr/include/ClanLib/Signals/signal.h	34;"	d
header_signal_v0	/usr/include/ClanLib/Signals/signal_v0.h	34;"	d
header_signal_v1	/usr/include/ClanLib/Signals/signal_v1.h	34;"	d
header_signal_v2	/usr/include/ClanLib/Signals/signal_v2.h	34;"	d
header_signal_v3	/usr/include/ClanLib/Signals/signal_v3.h	34;"	d
header_signal_v4	/usr/include/ClanLib/Signals/signal_v4.h	34;"	d
header_signal_v5	/usr/include/ClanLib/Signals/signal_v5.h	34;"	d
header_signals	/usr/include/ClanLib/signals.h	38;"	d
header_size	/usr/include/ClanLib/Core/Math/size.h	34;"	d
header_slot	/usr/include/ClanLib/Signals/slot.h	34;"	d
header_slot_container	/usr/include/ClanLib/Signals/slot_container.h	34;"	d
header_slot_generic	/usr/include/ClanLib/Signals/slot_generic.h	34;"	d
header_slot_v0	/usr/include/ClanLib/Signals/slot_v0.h	34;"	d
header_slot_v1	/usr/include/ClanLib/Signals/slot_v1.h	34;"	d
header_slot_v2	/usr/include/ClanLib/Signals/slot_v2.h	34;"	d
header_slot_v3	/usr/include/ClanLib/Signals/slot_v3.h	34;"	d
header_slot_v4	/usr/include/ClanLib/Signals/slot_v4.h	34;"	d
header_slot_v5	/usr/include/ClanLib/Signals/slot_v5.h	34;"	d
header_slotbuffer_v0	/usr/include/ClanLib/Signals/slotbuffer_v0.h	34;"	d
header_slotbuffer_v1	/usr/include/ClanLib/Signals/slotbuffer_v1.h	34;"	d
header_socket	/usr/include/ClanLib/Network/Socket/socket.h	34;"	d
header_sound	/usr/include/ClanLib/Sound/sound.h	34;"	d
header_sound_api	/usr/include/ClanLib/sound.h	35;"	d
header_sound_provider_mikmod	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	34;"	d
header_sound_provider_raw	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	34;"	d
header_sound_provider_recorder	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	34;"	d
header_sound_provider_vorbis	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	34;"	d
header_sound_provider_wave	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	34;"	d
header_soundbuffer	/usr/include/ClanLib/Sound/soundbuffer.h	34;"	d
header_soundbuffer_session	/usr/include/ClanLib/Sound/soundbuffer_session.h	34;"	d
header_soundfilter	/usr/include/ClanLib/Sound/soundfilter.h	34;"	d
header_soundformat	/usr/include/ClanLib/Sound/soundformat.h	34;"	d
header_soundoutput	/usr/include/ClanLib/Sound/soundoutput.h	34;"	d
header_soundoutput_description	/usr/include/ClanLib/Sound/soundoutput_description.h	34;"	d
header_soundprovider	/usr/include/ClanLib/Sound/soundprovider.h	34;"	d
header_soundprovider_factory	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	34;"	d
header_soundprovider_session	/usr/include/ClanLib/Sound/soundprovider_session.h	34;"	d
header_soundprovider_type	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type.h	34;"	d
header_soundprovider_type_register	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type_register.h	34;"	d
header_sprite	/usr/include/ClanLib/Display/sprite.h	34;"	d
header_sprite_description	/usr/include/ClanLib/Display/sprite_description.h	34;"	d
header_sprite_packer	/usr/include/ClanLib/Display/sprite_packer.h	34;"	d
header_stencil_func	/usr/include/ClanLib/Display/stencil_func.h	34;"	d
header_stylemanager	/usr/include/ClanLib/GUI/stylemanager.h	34;"	d
header_stylemanager_silver	/usr/include/ClanLib/GUIStyleSilver/stylemanager_silver.h	34;"	d
header_surface	/usr/include/ClanLib/Display/surface.h	34;"	d
header_system	/usr/include/ClanLib/Core/System/system.h	34;"	d
header_targaprovider	/usr/include/ClanLib/Display/Providers/targa_provider.h	34;"	d
header_text_styler	/usr/include/ClanLib/Display/text_styler.h	34;"	d
header_texture	/usr/include/ClanLib/GL/texture.h	34;"	d
header_thread	/usr/include/ClanLib/Core/System/thread.h	34;"	d
header_threadfunc_v0	/usr/include/ClanLib/Core/System/threadfunc_v0.h	31;"	d
header_threadfunc_v1	/usr/include/ClanLib/Core/System/threadfunc_v1.h	31;"	d
header_threadfunc_v2	/usr/include/ClanLib/Core/System/threadfunc_v2.h	31;"	d
header_timer	/usr/include/ClanLib/Core/System/timer.h	34;"	d
header_treeitem	/usr/include/ClanLib/GUI/treeitem.h	34;"	d
header_treeitem_silver	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	34;"	d
header_treenode	/usr/include/ClanLib/GUI/treenode.h	34;"	d
header_treeview	/usr/include/ClanLib/GUI/treeview.h	34;"	d
header_treeview_silver	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	34;"	d
header_triangle_math	/usr/include/ClanLib/Core/Math/triangle_math.h	34;"	d
header_vector2d	/usr/include/ClanLib/Core/Math/vector2.h	33;"	d
header_viewpoint	/usr/include/ClanLib/GL/viewpoint.h	34;"	d
header_vorbis	/usr/include/ClanLib/vorbis.h	37;"	d
header_window	/usr/include/ClanLib/GUI/window.h	35;"	d
header_window_silver	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	35;"	d
header_xml_token	/usr/include/ClanLib/Core/XML/xml_token.h	34;"	d
header_xml_tokenizer	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	34;"	d
header_xml_writer	/usr/include/ClanLib/Core/XML/xml_writer.h	34;"	d
header_zip_archive	/usr/include/ClanLib/Core/IOData/zip_archive.h	34;"	d
header_zip_file_entry	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	34;"	d
height	/usr/include/ClanLib/Core/Math/size.h	/^	float height;$/;"	m	class:CL_Sizef
height	/usr/include/ClanLib/Core/Math/size.h	/^	int height;$/;"	m	class:CL_Size
height	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		int height;$/;"	m	struct:CL_RichEdit_Paragraph::OneLineInfo
help_button	/usr/include/ClanLib/GUI/window.h	/^		help_button = 8$/;"	e	enum:CL_Window::TitlebarButtons
hint	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glHint hint;$/;"	m	class:CL_GLFunctions
histogram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glHistogramEXT histogram;$/;"	m	class:CL_GLFunctions
honeydew	/usr/include/ClanLib/Display/color.h	/^	static CL_Color honeydew;$/;"	m	class:CL_Color
hotpink	/usr/include/ClanLib/Display/color.h	/^	static CL_Color hotpink;$/;"	m	class:CL_Color
id	/usr/include/ClanLib/Display/input_event.h	/^	int id;$/;"	m	class:CL_InputEvent
image	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^	CL_Image *image;$/;"	m	class:CL_Image_Silver
img	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		CL_Sprite * img;$/;"	m	struct:CL_RichEdit_Paragraph::Item
impl	/usr/include/ClanLib/Core/IOData/directory_scanner.h	/^	CL_SharedPtr<CL_DirectoryScanner_Generic> impl;$/;"	m	class:CL_DirectoryScanner
impl	/usr/include/ClanLib/Core/IOData/inputsource_zipped.h	/^	CL_InputSource_Zipped_Generic *impl;$/;"	m	class:CL_InputSource_Zipped
impl	/usr/include/ClanLib/Core/IOData/outputsource_zipped.h	/^	CL_OutputSource_Zipped_Generic *impl;$/;"	m	class:CL_OutputSource_Zipped
impl	/usr/include/ClanLib/Core/IOData/zip_archive.h	/^	CL_SharedPtr<CL_Zip_Archive_Generic> impl;$/;"	m	class:CL_Zip_Archive
impl	/usr/include/ClanLib/Core/IOData/zip_file_entry.h	/^	CL_Zip_FileEntry_Generic *impl;$/;"	m	class:CL_Zip_FileEntry
impl	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	CL_SharedPtr<CL_DelauneyTriangulator_Generic> impl;$/;"	m	class:CL_DelauneyTriangulator
impl	/usr/include/ClanLib/Core/Math/outline_triangulator.h	/^	CL_SharedPtr<CL_OutlineTriangulator_Generic> impl;$/;"	m	class:CL_OutlineTriangulator
impl	/usr/include/ClanLib/Core/Resources/resource.h	/^	CL_SharedPtr<CL_Resource_Generic> impl;$/;"	m	class:CL_Resource
impl	/usr/include/ClanLib/Core/Resources/resource_manager.h	/^	CL_SharedPtr<CL_ResourceManager_Generic> impl;$/;"	m	class:CL_ResourceManager
impl	/usr/include/ClanLib/Core/Resources/resourcedata.h	/^	CL_ResourceData_Generic *impl;$/;"	m	class:CL_ResourceData
impl	/usr/include/ClanLib/Core/System/call_stack.h	/^	CL_SharedPtr<CL_CallStack_Generic> impl;$/;"	m	class:CL_CallStack
impl	/usr/include/ClanLib/Core/System/command_line.h	/^	CL_CommandLine_Generic* impl;$/;"	m	class:CL_CommandLine
impl	/usr/include/ClanLib/Core/System/console_window.h	/^	CL_ConsoleWindow_Generic *impl;$/;"	m	class:CL_ConsoleWindow
impl	/usr/include/ClanLib/Core/System/crash_reporter.h	/^	CL_SharedPtr<CL_CrashReporter_Generic> impl;$/;"	m	class:CL_CrashReporter
impl	/usr/include/ClanLib/Core/System/event_listener.h	/^	CL_EventListener_Generic *impl;$/;"	m	class:CL_EventListener
impl	/usr/include/ClanLib/Core/System/event_trigger.h	/^	CL_SharedPtr<CL_EventTrigger_Generic> impl;$/;"	m	class:CL_EventTrigger
impl	/usr/include/ClanLib/Core/System/mutex.h	/^	CL_Mutex_Generic *impl;$/;"	m	class:CL_Mutex
impl	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr_Generic<T> *impl;$/;"	m	class:CL_MutexSharedPtr
impl	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	CL_MutexSharedPtr_Generic<T> *impl;$/;"	m	class:CL_MutexWeakPtr
impl	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr_Generic<T> *impl;$/;"	m	class:CL_SharedPtr
impl	/usr/include/ClanLib/Core/System/thread.h	/^	CL_ThreadId_Generic *impl;$/;"	m	class:CL_ThreadId
impl	/usr/include/ClanLib/Core/System/thread.h	/^	CL_Thread_Generic *impl;$/;"	m	class:CL_Thread
impl	/usr/include/ClanLib/Core/System/weakptr.h	/^	CL_SharedPtr_Generic<T> *impl;$/;"	m	class:CL_WeakPtr
impl	/usr/include/ClanLib/Core/XML/dom_implementation.h	/^	CL_SharedPtr<CL_DomImplementation_Generic> impl;$/;"	m	class:CL_DomImplementation
impl	/usr/include/ClanLib/Core/XML/dom_named_node_map.h	/^	CL_SharedPtr<CL_DomNamedNodeMap_Generic> impl;$/;"	m	class:CL_DomNamedNodeMap
impl	/usr/include/ClanLib/Core/XML/dom_node.h	/^	CL_SharedPtr<CL_DomNode_Generic> impl;$/;"	m	class:CL_DomNode
impl	/usr/include/ClanLib/Core/XML/xml_tokenizer.h	/^	CL_SharedPtr<CL_XMLTokenizer_Generic> impl;$/;"	m	class:CL_XMLTokenizer
impl	/usr/include/ClanLib/Core/XML/xml_writer.h	/^	CL_SharedPtr<CL_XMLWriter_Generic> impl;$/;"	m	class:CL_XMLWriter
impl	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_CollisionOutline_Generic *impl;$/;"	m	class:CL_CollisionOutline
impl	/usr/include/ClanLib/Display/Collision/outline_provider_bitmap.h	/^	CL_OutlineProviderBitmap_Generic *impl;$/;"	m	class:CL_OutlineProviderBitmap
impl	/usr/include/ClanLib/Display/Collision/outline_provider_file.h	/^	CL_OutlineProviderFile_Generic *impl;$/;"	m	class:CL_OutlineProviderFile
impl	/usr/include/ClanLib/Display/canvas.h	/^	CL_SharedPtr<CL_Canvas_Generic> impl;$/;"	m	class:CL_Canvas
impl	/usr/include/ClanLib/Display/display_mode.h	/^	CL_DisplayMode_Generic *impl;$/;"	m	class:CL_DisplayMode
impl	/usr/include/ClanLib/Display/display_window.h	/^	CL_DisplayWindow_Generic *impl;$/;"	m	class:CL_DisplayWindow
impl	/usr/include/ClanLib/Display/display_window_description.h	/^	CL_SharedPtr<CL_DisplayWindowDescription_Generic> impl;$/;"	m	class:CL_DisplayWindowDescription
impl	/usr/include/ClanLib/Display/font.h	/^	CL_LazyCopyPtr<CL_Clonable, CL_Font_Generic> impl;$/;"	m	class:CL_Font
impl	/usr/include/ClanLib/Display/frameratecounter.h	/^	CL_FramerateCounter_Generic *impl;$/;"	m	class:CL_FramerateCounter
impl	/usr/include/ClanLib/Display/graphic_context.h	/^	CL_GraphicContext_Generic *impl;$/;"	m	class:CL_GraphicContext
impl	/usr/include/ClanLib/Display/input_buffer.h	/^	CL_InputBuffer_Generic *impl;$/;"	m	class:CL_InputBuffer
impl	/usr/include/ClanLib/Display/input_button.h	/^	CL_InputButton_Generic *impl;$/;"	m	class:CL_InputButton
impl	/usr/include/ClanLib/Display/input_context.h	/^	CL_InputContext_Generic *impl;$/;"	m	class:CL_InputContext
impl	/usr/include/ClanLib/Display/input_device.h	/^	CL_InputDevice_Generic *impl;$/;"	m	class:CL_InputDevice
impl	/usr/include/ClanLib/Display/key_binding.h	/^	CL_KeyBinding_Generic *impl;$/;"	m	class:CL_KeyBinding
impl	/usr/include/ClanLib/Display/pixel_buffer.h	/^	CL_PixelBuffer_Generic *impl;$/;"	m	class:CL_PixelBuffer
impl	/usr/include/ClanLib/Display/sprite.h	/^	CL_Sprite_Generic *impl;$/;"	m	class:CL_Sprite
impl	/usr/include/ClanLib/Display/sprite_description.h	/^	CL_SpriteDescription_Generic *impl;$/;"	m	class:CL_SpriteDescription
impl	/usr/include/ClanLib/Display/sprite_packer.h	/^	CL_SpritePacker_Generic *impl;$/;"	m	class:CL_SpritePacker
impl	/usr/include/ClanLib/Display/surface.h	/^	CL_Surface_Generic *impl;$/;"	m	class:CL_Surface
impl	/usr/include/ClanLib/GL/opengl_state.h	/^	CL_SharedPtr<CL_OpenGLState_Generic> impl;$/;"	m	class:CL_OpenGLState
impl	/usr/include/ClanLib/GL/opengl_state_data.h	/^	CL_OpenGLStateData_Generic *impl;$/;"	m	class:CL_OpenGLStateData
impl	/usr/include/ClanLib/GL/program_attribute.h	/^	CL_SharedPtr<CL_ProgramAttribute_Generic> impl;$/;"	m	class:CL_ProgramAttribute
impl	/usr/include/ClanLib/GL/program_object.h	/^	CL_SharedPtr<CL_ProgramObject_Generic> impl;$/;"	m	class:CL_ProgramObject
impl	/usr/include/ClanLib/GL/shader_object.h	/^	CL_SharedPtr<CL_ShaderObject_Generic> impl;$/;"	m	class:CL_ShaderObject
impl	/usr/include/ClanLib/GL/texture.h	/^	CL_SharedPtr<CL_Texture_Generic> impl;$/;"	m	class:CL_Texture
impl	/usr/include/ClanLib/GUI/button.h	/^	CL_Button_Generic *impl;$/;"	m	class:CL_Button
impl	/usr/include/ClanLib/GUI/component.h	/^	CL_Component_Generic *impl;$/;"	m	class:CL_Component
impl	/usr/include/ClanLib/GUI/component_manager.h	/^	CL_SharedPtr<CL_ComponentManager_Generic> impl;$/;"	m	class:CL_ComponentManager
impl	/usr/include/ClanLib/GUI/component_move_handler.h	/^	CL_ComponentMoveHandler_Generic *impl;$/;"	m	class:CL_ComponentMoveHandler
impl	/usr/include/ClanLib/GUI/component_resize_handler.h	/^	CL_ComponentResizeHandler_Generic *impl;$/;"	m	class:CL_ComponentResizeHandler
impl	/usr/include/ClanLib/GUI/component_type.h	/^	CL_ComponentType_Generic *impl;$/;"	m	class:CL_ComponentType
impl	/usr/include/ClanLib/GUI/deck.h	/^	CL_Deck_Generic *impl;$/;"	m	class:CL_Deck
impl	/usr/include/ClanLib/GUI/filedialog.h	/^	CL_FileDialog_Generic *impl;$/;"	m	class:CL_FileDialog
impl	/usr/include/ClanLib/GUI/frame.h	/^	CL_Frame_Generic *impl;$/;"	m	class:CL_Frame
impl	/usr/include/ClanLib/GUI/gui_manager.h	/^	CL_GUIManager_Generic *impl;$/;"	m	class:CL_GUIManager
impl	/usr/include/ClanLib/GUI/image.h	/^	CL_Image_Generic *impl;$/;"	m	class:CL_Image
impl	/usr/include/ClanLib/GUI/inputbox.h	/^	CL_InputBox_Generic *impl;$/;"	m	class:CL_InputBox
impl	/usr/include/ClanLib/GUI/inputdialog.h	/^	CL_InputDialog_Generic *impl;$/;"	m	class:CL_InputDialog
impl	/usr/include/ClanLib/GUI/label.h	/^	CL_Label_Generic *impl;$/;"	m	class:CL_Label
impl	/usr/include/ClanLib/GUI/layout.h	/^	CL_SharedPtr<CL_Layout_Generic> impl;$/;"	m	class:CL_Layout
impl	/usr/include/ClanLib/GUI/listbox.h	/^	CL_ListBox_Generic *impl;$/;"	m	class:CL_ListBox
impl	/usr/include/ClanLib/GUI/menu.h	/^	CL_Menu_Generic *impl;$/;"	m	class:CL_Menu
impl	/usr/include/ClanLib/GUI/menu_item.h	/^	CL_MenuItem_Generic *impl;$/;"	m	class:CL_MenuItem
impl	/usr/include/ClanLib/GUI/menu_node.h	/^	CL_MenuNode_Generic *impl;$/;"	m	class:CL_MenuNode
impl	/usr/include/ClanLib/GUI/messagebox.h	/^	CL_MessageBox_Generic *impl;$/;"	m	class:CL_MessageBox
impl	/usr/include/ClanLib/GUI/progressbar.h	/^	CL_ProgressBar_Generic *impl;$/;"	m	class:CL_ProgressBar
impl	/usr/include/ClanLib/GUI/radiogroup.h	/^	CL_RadioGroup_Generic *impl;$/;"	m	class:CL_RadioGroup
impl	/usr/include/ClanLib/GUI/richedit.h	/^	CL_RichEdit_Generic *impl;$/;"	m	class:CL_RichEdit
impl	/usr/include/ClanLib/GUI/scrollbar.h	/^	CL_ScrollBar_Generic *impl;$/;"	m	class:CL_ScrollBar
impl	/usr/include/ClanLib/GUI/stylemanager.h	/^	CL_StyleManager_Generic *impl;$/;"	m	class:CL_StyleManager
impl	/usr/include/ClanLib/GUI/treeitem.h	/^	CL_TreeItem_Generic *impl;$/;"	m	class:CL_TreeItem
impl	/usr/include/ClanLib/GUI/treenode.h	/^	CL_TreeNode_Generic *impl;$/;"	m	class:CL_TreeNode
impl	/usr/include/ClanLib/GUI/treeview.h	/^	CL_TreeView_Generic *impl;$/;"	m	class:CL_TreeView
impl	/usr/include/ClanLib/GUI/window.h	/^	CL_Window_Generic *impl;$/;"	m	class:CL_Window
impl	/usr/include/ClanLib/MikMod/soundprovider_mikmod.h	/^	CL_SoundProvider_MikMod_Generic *impl;$/;"	m	class:CL_SoundProvider_MikMod
impl	/usr/include/ClanLib/Network/IRC/dcc_download.h	/^	CL_DCCDownload_Generic *impl;$/;"	m	class:CL_DCCDownload
impl	/usr/include/ClanLib/Network/IRC/irc_connection.h	/^	CL_IRCConnection_Generic *impl;$/;"	m	class:CL_IRCConnection
impl	/usr/include/ClanLib/Network/NetObjects/netobject_client.h	/^	CL_NetObject_Client_Generic *impl;$/;"	m	class:CL_NetObject_Client
impl	/usr/include/ClanLib/Network/NetObjects/netobject_controller.h	/^	CL_NetObject_Controller_Generic *impl;$/;"	m	class:CL_NetObject_Controller
impl	/usr/include/ClanLib/Network/NetObjects/netobject_server.h	/^	CL_NetObject_Server_Generic *impl;$/;"	m	class:CL_NetObject_Server
impl	/usr/include/ClanLib/Network/NetSession/inputsource_netpacket.h	/^	CL_InputSource_NetPacket_Generic *impl;$/;"	m	class:CL_InputSource_NetPacket
impl	/usr/include/ClanLib/Network/NetSession/netcomputer.h	/^	CL_NetComputer_Generic *impl;$/;"	m	class:CL_NetComputer
impl	/usr/include/ClanLib/Network/NetSession/netpacket.h	/^	CL_NetPacket_Generic *impl;$/;"	m	class:CL_NetPacket
impl	/usr/include/ClanLib/Network/NetSession/netsession.h	/^	CL_NetSession_Generic *impl;$/;"	m	class:CL_NetSession
impl	/usr/include/ClanLib/Network/NetSession/netstream.h	/^	CL_NetStream_Generic *impl;$/;"	m	class:CL_NetStream
impl	/usr/include/ClanLib/Network/NetSession/outputsource_netpacket.h	/^	CL_OutputSource_NetPacket_Generic *impl;$/;"	m	class:CL_OutputSource_NetPacket
impl	/usr/include/ClanLib/Network/NetVariables/netvariables.h	/^	CL_NetVariables_Generic *impl;$/;"	m	class:CL_NetVariables
impl	/usr/include/ClanLib/Network/Socket/ip_address.h	/^	CL_IPAddress_Generic *impl;$/;"	m	class:CL_IPAddress
impl	/usr/include/ClanLib/Network/Socket/socket.h	/^	CL_Socket_Generic *impl;$/;"	m	class:CL_Socket
impl	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Signal_v0_Generic *impl;$/;"	m	class:CL_Signal_v0
impl	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Signal_v1_Generic *impl;$/;"	m	class:CL_Signal_v1
impl	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Signal_v2_Generic *impl;$/;"	m	class:CL_Signal_v2
impl	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Signal_v3_Generic *impl;$/;"	m	class:CL_Signal_v3
impl	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Signal_v4_Generic *impl;$/;"	m	class:CL_Signal_v4
impl	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Signal_v5_Generic *impl;$/;"	m	class:CL_Signal_v5
impl	/usr/include/ClanLib/Signals/slot.h	/^	CL_Slot_Generic *impl;$/;"	m	class:CL_Slot
impl	/usr/include/ClanLib/Sound/SoundFilters/echofilter.h	/^	CL_EchoFilter_Generic *impl;$/;"	m	class:CL_EchoFilter
impl	/usr/include/ClanLib/Sound/SoundFilters/fadefilter.h	/^	CL_FadeFilter_Generic *impl;$/;"	m	class:CL_FadeFilter
impl	/usr/include/ClanLib/Sound/SoundFilters/inverse_echofilter.h	/^	CL_InverseEchoFilter_Generic *impl;$/;"	m	class:CL_InverseEchoFilter
impl	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_raw.h	/^	CL_SoundProvider_Raw_Generic *impl;$/;"	m	class:CL_SoundProvider_Raw
impl	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_recorder.h	/^	CL_SoundProvider_Recorder_Generic *impl;$/;"	m	class:CL_SoundProvider_Recorder
impl	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_wave.h	/^	CL_SoundProvider_Wave_Generic *impl;$/;"	m	class:CL_SoundProvider_Wave
impl	/usr/include/ClanLib/Sound/cd_drive.h	/^	CL_SharedPtr<CL_CDDrive_Generic> impl;$/;"	m	class:CL_CDDrive
impl	/usr/include/ClanLib/Sound/soundbuffer.h	/^	CL_MutexSharedPtr<CL_SoundBuffer_Generic> impl;$/;"	m	class:CL_SoundBuffer
impl	/usr/include/ClanLib/Sound/soundbuffer_session.h	/^	CL_MutexSharedPtr<CL_SoundBuffer_Session_Generic> impl;$/;"	m	class:CL_SoundBuffer_Session
impl	/usr/include/ClanLib/Sound/soundfilter.h	/^	CL_SoundFilter_Generic *impl;$/;"	m	class:CL_SoundFilter
impl	/usr/include/ClanLib/Sound/soundoutput.h	/^	CL_SoundOutput_Generic *impl;$/;"	m	class:CL_SoundOutput
impl	/usr/include/ClanLib/Sound/soundoutput_description.h	/^	CL_SoundOutput_Description_Generic *impl;$/;"	m	class:CL_SoundOutput_Description
impl	/usr/include/ClanLib/Sound/soundprovider.h	/^	CL_MutexSharedPtr<CL_SoundProvider_Generic> impl;$/;"	m	class:CL_SoundProvider
impl	/usr/include/ClanLib/Sound/soundprovider_session.h	/^	CL_MutexSharedPtr<CL_SoundProvider_Session_Generic> impl;$/;"	m	class:CL_SoundProvider_Session
impl	/usr/include/ClanLib/Vorbis/soundprovider_vorbis.h	/^	CL_SoundProvider_Vorbis_Generic *impl;$/;"	m	class:CL_SoundProvider_Vorbis
in_call	/usr/include/ClanLib/Signals/signal_v0.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v0::CL_Signal_v0_Generic
in_call	/usr/include/ClanLib/Signals/signal_v1.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v1::CL_Signal_v1_Generic
in_call	/usr/include/ClanLib/Signals/signal_v2.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v2::CL_Signal_v2_Generic
in_call	/usr/include/ClanLib/Signals/signal_v3.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v3::CL_Signal_v3_Generic
in_call	/usr/include/ClanLib/Signals/signal_v4.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v4::CL_Signal_v4_Generic
in_call	/usr/include/ClanLib/Signals/signal_v5.h	/^		bool in_call, deleted;$/;"	m	class:CL_Signal_v5::CL_Signal_v5_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v0.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v0::CL_Signal_v0_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v1.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v1::CL_Signal_v1_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v2.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v2::CL_Signal_v2_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v3.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v3::CL_Signal_v3_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v4.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v4::CL_Signal_v4_Generic
in_call_remove_slots	/usr/include/ClanLib/Signals/signal_v5.h	/^		std::list<SlotIterator> *in_call_remove_slots;$/;"	m	class:CL_Signal_v5::CL_Signal_v5_Generic
increment	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	void increment()$/;"	f	class:CL_MutexSharedPtr
increment	/usr/include/ClanLib/Core/System/sharedptr.h	/^	void increment()$/;"	f	class:CL_SharedPtr
indexMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexMask indexMask;$/;"	m	class:CL_GLFunctions
indexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexPointer indexPointer;$/;"	m	class:CL_GLFunctions
indexd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexd indexd;$/;"	m	class:CL_GLFunctions
indexdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexdv indexdv;$/;"	m	class:CL_GLFunctions
indexf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexf indexf;$/;"	m	class:CL_GLFunctions
indexfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexfv indexfv;$/;"	m	class:CL_GLFunctions
indexi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexi indexi;$/;"	m	class:CL_GLFunctions
indexiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexiv indexiv;$/;"	m	class:CL_GLFunctions
indexs	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexs indexs;$/;"	m	class:CL_GLFunctions
indexsv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexsv indexsv;$/;"	m	class:CL_GLFunctions
indexub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexub indexub;$/;"	m	class:CL_GLFunctions
indexubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIndexubv indexubv;$/;"	m	class:CL_GLFunctions
indianred	/usr/include/ClanLib/Display/color.h	/^	static CL_Color indianred;$/;"	m	class:CL_Color
indigo	/usr/include/ClanLib/Display/color.h	/^	static CL_Color indigo;$/;"	m	class:CL_Color
initNames	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glInitNames initNames;$/;"	m	class:CL_GLFunctions
initial_number_range	/usr/include/ClanLib/Core/Math/number_pool.h	/^	unsigned short initial_number_range;$/;"	m	class:CL_NumberPool
input	/usr/include/ClanLib/Network/NetSession/netpacket.h	/^	CL_InputSource_NetPacket input;$/;"	m	class:CL_NetPacket
input	/usr/include/ClanLib/Network/NetSession/netstream.h	/^	CL_InputSource_NetStream input;$/;"	m	class:CL_NetStream
input	/usr/include/ClanLib/Network/Socket/socket.h	/^	CL_InputSource_Socket input;$/;"	m	class:CL_Socket
inputbox	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	CL_InputBox *inputbox;$/;"	m	class:CL_InputBox_StyleBase
inside	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	bool inside;$/;"	m	struct:CL_CollidingContours
interleavedArrays	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glInterleavedArrays interleavedArrays;$/;"	m	class:CL_GLFunctions
internal_rect	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Rect internal_rect(bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
internal_rect	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Rect internal_rect(int idx, bool ignore_invis = true) const$/;"	f	class:CL_GlyphBuffer
interval	/usr/include/ClanLib/Core/System/timer.h	/^	unsigned long interval;$/;"	m	class:CL_Timer
ipv4	/usr/include/ClanLib/Network/Socket/socket.h	/^		ipv4,$/;"	e	enum:CL_Socket::Protocol
ipv6	/usr/include/ClanLib/Network/Socket/socket.h	/^		ipv6$/;"	e	enum:CL_Socket::Protocol
irc_numerics	/usr/include/ClanLib/Network/IRC/irc_numerics.h	31;"	d
isBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIsBufferARB isBuffer;$/;"	m	class:CL_GLFunctions
isEnabled	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIsEnabled isEnabled;$/;"	m	class:CL_GLFunctions
isList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIsList isList;$/;"	m	class:CL_GLFunctions
isQuery	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIsQueryARB isQuery;$/;"	m	class:CL_GLFunctions
isTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glIsTexture isTexture;$/;"	m	class:CL_GLFunctions
is_entry	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	bool is_entry;$/;"	m	struct:CL_CollisionPoint
is_initialized	/usr/include/ClanLib/Core/System/thread.h	/^	inline bool is_initialized() {$/;"	f	class:CL_Thread
is_inside	/usr/include/ClanLib/Core/Math/rect.h	/^	bool is_inside(const CL_Point &p) const { return (p.x >= left && p.y >= top && p.x <= right && p.y <= bottom); }$/;"	f	class:CL_Rect
is_inside	/usr/include/ClanLib/Core/Math/rect.h	/^	bool is_inside(const CL_Pointf &p) const { return (p.x >= left && p.y >= top && p.x <= right && p.y <= bottom); }$/;"	f	class:CL_Rectf
is_inside_contour	/usr/include/ClanLib/Display/Collision/contour.h	/^	bool is_inside_contour;$/;"	m	class:CL_Contour
is_little_endian	/usr/include/ClanLib/Core/IOData/inputsource.h	/^	virtual bool is_little_endian() { return little_endian_mode; }$/;"	f	class:CL_InputSource
is_null	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	bool is_null() const {return ptr.is_null();}$/;"	f	class:CL_LazyCopyPtr
is_null	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	bool is_null() const { return impl ? (impl->ptr == 0) : true; }$/;"	f	class:CL_MutexSharedPtr
is_null	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	bool is_null() const { return impl ? (impl->ptr == 0) : true; }$/;"	f	class:CL_MutexWeakPtr
is_null	/usr/include/ClanLib/Core/System/owningptr.h	/^		bool is_null() const {if (ptr == 0) return true; return false;}$/;"	f	class:CL_OwningPtr
is_null	/usr/include/ClanLib/Core/System/sharedptr.h	/^	bool is_null() const { return impl ? (impl->ptr == 0) : true; }$/;"	f	class:CL_SharedPtr
is_null	/usr/include/ClanLib/Core/System/weakptr.h	/^	bool is_null() const { return impl ? (impl->ptr == 0) : true; }$/;"	f	class:CL_WeakPtr
is_overlapped	/usr/include/ClanLib/Core/Math/rect.h	/^	bool is_overlapped(const CL_Rect &r) const $/;"	f	class:CL_Rect
is_overlapped	/usr/include/ClanLib/Core/Math/rect.h	/^	bool is_overlapped(const CL_Rectf &r) const $/;"	f	class:CL_Rectf
item	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^	CL_TreeItem *item;$/;"	m	class:CL_TreeItem_Silver
item_idx	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		int item_idx;$/;"	m	struct:CL_RichEdit_Paragraph::OneLineInfo
item_type	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		} item_type;$/;"	m	struct:CL_RichEdit_Paragraph::Item	typeref:enum:CL_RichEdit_Paragraph::Item::ITEM_TYPE
items	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		std::vector<Item> items;$/;"	m	struct:CL_RichEdit_Paragraph::OneLineInfo
items	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	std::vector<Item> items;$/;"	m	class:CL_RichEdit_Paragraph
ivory	/usr/include/ClanLib/Display/color.h	/^	static CL_Color ivory;$/;"	m	class:CL_Color
joystick	/usr/include/ClanLib/Display/input_device.h	/^		joystick,$/;"	e	enum:CL_InputDevice::Type
justify_center	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void justify_center(int center = 0)$/;"	f	class:CL_GlyphBuffer
justify_left	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void justify_left(int left = 0)$/;"	f	class:CL_GlyphBuffer
justify_right	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void justify_right(int right = 0)$/;"	f	class:CL_GlyphBuffer
keyboard	/usr/include/ClanLib/Display/input_device.h	/^		keyboard,$/;"	e	enum:CL_InputDevice::Type
khaki	/usr/include/ClanLib/Display/color.h	/^	static CL_Color khaki;$/;"	m	class:CL_Color
label	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_Label *label;$/;"	m	class:CL_Label_Silver
last_error	/usr/include/ClanLib/Core/System/cl_library.h	/^	CL_Error *last_error;$/;"	m	class:CL_LibraryLoader
last_time	/usr/include/ClanLib/Core/System/timer.h	/^	unsigned long last_time;$/;"	m	class:CL_Timer
lavender	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lavender;$/;"	m	class:CL_Color
lavenderblush	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lavenderblush;$/;"	m	class:CL_Color
lawngreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lawngreen;$/;"	m	class:CL_Color
layout_expanding	/usr/include/ClanLib/GUI/component.h	/^	layout_expanding$/;"	e	enum:CL_LayoutPolicy
layout_grid	/usr/include/ClanLib/GUI/layout.h	/^	layout_grid$/;"	e	enum:CL_LayoutType
layout_horizontal	/usr/include/ClanLib/GUI/layout.h	/^	layout_horizontal,$/;"	e	enum:CL_LayoutType
layout_minimum	/usr/include/ClanLib/GUI/component.h	/^	layout_minimum,$/;"	e	enum:CL_LayoutPolicy
layout_vertical	/usr/include/ClanLib/GUI/layout.h	/^	layout_vertical,$/;"	e	enum:CL_LayoutType
leave	/usr/include/ClanLib/Core/System/mutex.h	/^	void leave()$/;"	f	class:CL_MutexSection
left	/usr/include/ClanLib/Core/Math/rect.h	/^	float left;$/;"	m	class:CL_Rectf
left	/usr/include/ClanLib/Core/Math/rect.h	/^	int left;$/;"	m	class:CL_Rect
lemonchiffon	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lemonchiffon;$/;"	m	class:CL_Color
less_than	/usr/include/ClanLib/GUI/listitem.h	/^	virtual bool less_than(const CL_ListItem & item) const$/;"	f	class:CL_ListItem
libraries	/usr/include/ClanLib/Core/System/cl_library.h	/^	static std::map<std::string, CL_LibraryFactoryMaker *, std::less<std::string> > libraries;$/;"	m	class:CL_LibraryManager
lightModelf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightModelf lightModelf;$/;"	m	class:CL_GLFunctions
lightModelfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightModelfv lightModelfv;$/;"	m	class:CL_GLFunctions
lightModeli	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightModeli lightModeli;$/;"	m	class:CL_GLFunctions
lightModeliv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightModeliv lightModeliv;$/;"	m	class:CL_GLFunctions
lightblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightblue;$/;"	m	class:CL_Color
lightcoral	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightcoral;$/;"	m	class:CL_Color
lightcyan	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightcyan;$/;"	m	class:CL_Color
lightf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightf lightf;$/;"	m	class:CL_GLFunctions
lightfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightfv lightfv;$/;"	m	class:CL_GLFunctions
lightgoldenrodyellow	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightgoldenrodyellow;$/;"	m	class:CL_Color
lightgray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightgray;$/;"	m	class:CL_Color
lightgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightgreen;$/;"	m	class:CL_Color
lightgrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightgrey;$/;"	m	class:CL_Color
lighti	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLighti lighti;$/;"	m	class:CL_GLFunctions
lightiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLightiv lightiv;$/;"	m	class:CL_GLFunctions
lightpink	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightpink;$/;"	m	class:CL_Color
lightsalmon	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightsalmon;$/;"	m	class:CL_Color
lightseagreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightseagreen;$/;"	m	class:CL_Color
lightskyblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightskyblue;$/;"	m	class:CL_Color
lightslategray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightslategray;$/;"	m	class:CL_Color
lightslategrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightslategrey;$/;"	m	class:CL_Color
lightsteelblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightsteelblue;$/;"	m	class:CL_Color
lightyellow	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lightyellow;$/;"	m	class:CL_Color
lime	/usr/include/ClanLib/Display/color.h	/^	static CL_Color lime;$/;"	m	class:CL_Color
limegreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color limegreen;$/;"	m	class:CL_Color
lineStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLineStipple lineStipple;$/;"	m	class:CL_GLFunctions
lineWidth	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLineWidth lineWidth;$/;"	m	class:CL_GLFunctions
linear_attenuation	/usr/include/ClanLib/GL/light_source.h	/^	float linear_attenuation;$/;"	m	class:CL_LightSource
linen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color linen;$/;"	m	class:CL_Color
lines	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	std::vector<OneLineInfo> lines; \/\/ lines.size() === amount of lines in this paragraph (depends on the textarea width)$/;"	m	class:CL_RichEdit_Paragraph
linkProgram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLinkProgramARB linkProgram;$/;"	m	class:CL_GLFunctions
listBase	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glListBase listBase;$/;"	m	class:CL_GLFunctions
listbox	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_ListBox *listbox;$/;"	m	class:CL_ListBox_Silver
little_endian_mode	/usr/include/ClanLib/Core/IOData/inputsource.h	/^	bool little_endian_mode;$/;"	m	class:CL_InputSource
little_endian_mode	/usr/include/ClanLib/Core/IOData/outputsource.h	/^	bool little_endian_mode;$/;"	m	class:CL_OutputSource
load	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	static bool load( const std::string &res_id, CL_ResourceManager *resources )$/;"	f	class:CL_Boolean
load	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	static bool load( const std::string &res_id, CL_ResourceManager *resources, bool def_value )$/;"	f	class:CL_Boolean
load	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	static int load( const std::string &res_id, CL_ResourceManager *resources )$/;"	f	class:CL_Integer
load	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	static int load( const std::string &res_id, CL_ResourceManager *resources, bool def_value )$/;"	f	class:CL_Integer
load	/usr/include/ClanLib/Display/Providers/provider_type_register.h	/^	virtual CL_PixelBuffer load($/;"	f	class:CL_ProviderType_Register
load	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_type_register.h	/^	virtual CL_SoundProvider *load($/;"	f	class:CL_SoundProviderType_Register
loadIdentity	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadIdentity loadIdentity;$/;"	m	class:CL_GLFunctions
loadMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadMatrixd loadMatrixd;$/;"	m	class:CL_GLFunctions
loadMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadMatrixf loadMatrixf;$/;"	m	class:CL_GLFunctions
loadName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLoadName loadName;$/;"	m	class:CL_GLFunctions
loaded	/usr/include/ClanLib/Core/System/cl_library.h	/^	bool loaded;$/;"	m	class:CL_LibraryLoader
lock_count	/usr/include/ClanLib/Core/System/mutex.h	/^	int lock_count;$/;"	m	class:CL_MutexSection
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6, const Param7 &p7)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6)$/;"	f	class:CL_Log
log	/usr/include/ClanLib/Core/System/log.h	/^	static void log(const std::string &group, int severity, const std::string &format, const Param1 &p1, const Param2 &p2, const Param3 &p3, const Param4 &p4, const Param5 &p5, const Param6 &p6, const Param7 &p7)$/;"	f	class:CL_Log
logicOp	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glLogicOp logicOp;$/;"	m	class:CL_GLFunctions
m_ignored_gl_extension	/usr/include/ClanLib/GL/opengl.h	/^	static std::vector<std::string> m_ignored_gl_extension;$/;"	m	class:CL_OpenGL
magenta	/usr/include/ClanLib/Display/color.h	/^	static CL_Color magenta;$/;"	m	class:CL_Color
map1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMap1d map1d;$/;"	m	class:CL_GLFunctions
map1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMap1f map1f;$/;"	m	class:CL_GLFunctions
map2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMap2d map2d;$/;"	m	class:CL_GLFunctions
map2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMap2f map2f;$/;"	m	class:CL_GLFunctions
mapBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMapBufferARB mapBuffer;$/;"	m	class:CL_GLFunctions
mapGrid1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMapGrid1d mapGrid1d;$/;"	m	class:CL_GLFunctions
mapGrid1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMapGrid1f mapGrid1f;$/;"	m	class:CL_GLFunctions
mapGrid2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMapGrid2d mapGrid2d;$/;"	m	class:CL_GLFunctions
mapGrid2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMapGrid2f mapGrid2f;$/;"	m	class:CL_GLFunctions
maroon	/usr/include/ClanLib/Display/color.h	/^	static CL_Color maroon;$/;"	m	class:CL_Color
materialf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMaterialf materialf;$/;"	m	class:CL_GLFunctions
materialfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMaterialfv materialfv;$/;"	m	class:CL_GLFunctions
materiali	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMateriali materiali;$/;"	m	class:CL_GLFunctions
materialiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMaterialiv materialiv;$/;"	m	class:CL_GLFunctions
matrix	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	double matrix[16];$/;"	m	class:CL_Matrix4x4
matrixMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMatrixMode matrixMode;$/;"	m	class:CL_GLFunctions
max	/usr/include/ClanLib/GUI/inputbox_stylebase.h	45;"	d
maximize_button	/usr/include/ClanLib/GUI/window.h	/^		maximize_button = 2,$/;"	e	enum:CL_Window::TitlebarButtons
mediumaquamarine	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumaquamarine;$/;"	m	class:CL_Color
mediumblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumblue;$/;"	m	class:CL_Color
mediumorchid	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumorchid;$/;"	m	class:CL_Color
mediumpurple	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumpurple;$/;"	m	class:CL_Color
mediumseagreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumseagreen;$/;"	m	class:CL_Color
mediumslateblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumslateblue;$/;"	m	class:CL_Color
mediumspringgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumspringgreen;$/;"	m	class:CL_Color
mediumturquoise	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumturquoise;$/;"	m	class:CL_Color
mediumvioletred	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mediumvioletred;$/;"	m	class:CL_Color
menu	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	/^	CL_Menu *menu;$/;"	m	class:CL_Menu_Silver
menu_item	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_MenuItem *menu_item;$/;"	m	class:CL_MenuItem_Silver
message	/usr/include/ClanLib/Core/System/error.h	/^	std::string message;$/;"	m	class:CL_Error
midnightblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color midnightblue;$/;"	m	class:CL_Color
min	/usr/include/ClanLib/GUI/inputbox_stylebase.h	41;"	d
minimize_button	/usr/include/ClanLib/GUI/window.h	/^		minimize_button = 4,$/;"	e	enum:CL_Window::TitlebarButtons
minmax	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMinmaxEXT minmax;$/;"	m	class:CL_GLFunctions
mintcream	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mintcream;$/;"	m	class:CL_Color
mistyrose	/usr/include/ClanLib/Display/color.h	/^	static CL_Color mistyrose;$/;"	m	class:CL_Color
moccasin	/usr/include/ClanLib/Display/color.h	/^	static CL_Color moccasin;$/;"	m	class:CL_Color
mode	/usr/include/ClanLib/GUI/image.h	/^	Mode mode;$/;"	m	class:CL_Image
mode	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	} mode;$/;"	m	class:CL_Frame_Silver	typeref:enum:CL_Frame_Silver::Mode
mouse	/usr/include/ClanLib/Display/input_device.h	/^		mouse,$/;"	e	enum:CL_InputDevice::Type
mouse_pos	/usr/include/ClanLib/Display/input_event.h	/^	CL_Point mouse_pos;$/;"	m	class:CL_InputEvent
move_handler	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_ComponentMoveHandler *move_handler;$/;"	m	class:CL_Window_Silver
moved	/usr/include/ClanLib/Display/input_event.h	/^		moved             = 4,$/;"	e	enum:CL_InputEvent::Type
multMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultMatrixd multMatrixd;$/;"	m	class:CL_GLFunctions
multMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultMatrixf multMatrixf;$/;"	m	class:CL_GLFunctions
multiDrawArrays	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiDrawArraysEXT multiDrawArrays;$/;"	m	class:CL_GLFunctions
multiDrawElementsEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiDrawElementsEXT multiDrawElementsEXT;$/;"	m	class:CL_GLFunctions
multiTexCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1dARB multiTexCoord1d;$/;"	m	class:CL_GLFunctions
multiTexCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1dvARB multiTexCoord1dv;$/;"	m	class:CL_GLFunctions
multiTexCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1fARB multiTexCoord1f;$/;"	m	class:CL_GLFunctions
multiTexCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1fvARB multiTexCoord1fv;$/;"	m	class:CL_GLFunctions
multiTexCoord1i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1iARB multiTexCoord1i;$/;"	m	class:CL_GLFunctions
multiTexCoord1iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1ivARB multiTexCoord1iv;$/;"	m	class:CL_GLFunctions
multiTexCoord1s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1sARB multiTexCoord1s;$/;"	m	class:CL_GLFunctions
multiTexCoord1sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord1svARB multiTexCoord1sv;$/;"	m	class:CL_GLFunctions
multiTexCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2dARB multiTexCoord2d;$/;"	m	class:CL_GLFunctions
multiTexCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2dvARB multiTexCoord2dv;$/;"	m	class:CL_GLFunctions
multiTexCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2fARB multiTexCoord2f;$/;"	m	class:CL_GLFunctions
multiTexCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2fvARB multiTexCoord2fv;$/;"	m	class:CL_GLFunctions
multiTexCoord2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2iARB multiTexCoord2i;$/;"	m	class:CL_GLFunctions
multiTexCoord2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2ivARB multiTexCoord2iv;$/;"	m	class:CL_GLFunctions
multiTexCoord2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2sARB multiTexCoord2s;$/;"	m	class:CL_GLFunctions
multiTexCoord2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord2svARB multiTexCoord2sv;$/;"	m	class:CL_GLFunctions
multiTexCoord3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3dARB multiTexCoord3d;$/;"	m	class:CL_GLFunctions
multiTexCoord3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3dvARB multiTexCoord3dv;$/;"	m	class:CL_GLFunctions
multiTexCoord3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3fARB multiTexCoord3f;$/;"	m	class:CL_GLFunctions
multiTexCoord3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3fvARB multiTexCoord3fv;$/;"	m	class:CL_GLFunctions
multiTexCoord3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3iARB multiTexCoord3i;$/;"	m	class:CL_GLFunctions
multiTexCoord3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3ivARB multiTexCoord3iv;$/;"	m	class:CL_GLFunctions
multiTexCoord3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3sARB multiTexCoord3s;$/;"	m	class:CL_GLFunctions
multiTexCoord3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord3svARB multiTexCoord3sv;$/;"	m	class:CL_GLFunctions
multiTexCoord4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4dARB multiTexCoord4d;$/;"	m	class:CL_GLFunctions
multiTexCoord4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4dvARB multiTexCoord4dv;$/;"	m	class:CL_GLFunctions
multiTexCoord4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4fARB multiTexCoord4f;$/;"	m	class:CL_GLFunctions
multiTexCoord4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4fvARB multiTexCoord4fv;$/;"	m	class:CL_GLFunctions
multiTexCoord4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4iARB multiTexCoord4i;$/;"	m	class:CL_GLFunctions
multiTexCoord4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4ivARB multiTexCoord4iv;$/;"	m	class:CL_GLFunctions
multiTexCoord4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4sARB multiTexCoord4s;$/;"	m	class:CL_GLFunctions
multiTexCoord4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glMultiTexCoord4svARB multiTexCoord4sv;$/;"	m	class:CL_GLFunctions
must_be_derived_from_cl_clonable	/usr/include/ClanLib/Core/System/clonable.h	/^	void must_be_derived_from_cl_clonable() const {}$/;"	f	class:CL_Clonable
mutex	/usr/include/ClanLib/Core/System/mutex.h	/^	CL_Mutex *mutex;$/;"	m	class:CL_MutexSection
mutex	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_Mutex mutex;$/;"	m	class:CL_MutexSharedPtr_Generic
name	/usr/include/ClanLib/GL/program_uniform.h	/^	std::string name;$/;"	m	class:CL_ProgramUniform
navajowhite	/usr/include/ClanLib/Display/color.h	/^	static CL_Color navajowhite;$/;"	m	class:CL_Color
navy	/usr/include/ClanLib/Display/color.h	/^	static CL_Color navy;$/;"	m	class:CL_Color
netstream	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	/^	CL_NetStream_Generic *netstream;$/;"	m	class:CL_InputSource_NetStream
netstream	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	/^	CL_NetStream_Generic *netstream;$/;"	m	class:CL_OutputSource_NetStream
newList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNewList newList;$/;"	m	class:CL_GLFunctions
no_buttons	/usr/include/ClanLib/GUI/window.h	/^		no_buttons = 0,$/;"	e	enum:CL_Window::TitlebarButtons
no_key	/usr/include/ClanLib/Display/input_event.h	/^		no_key            = 0,$/;"	e	enum:CL_InputEvent::Type
node	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	CL_MenuNode *node;$/;"	m	class:CL_MenuNode_Silver
node_delete_list	/usr/include/ClanLib/GUI/treeview.h	/^	std::list<CL_TreeNode *> node_delete_list;$/;"	m	class:CL_TreeView
node_list	/usr/include/ClanLib/Core/XML/dom_node_list.h	/^	std::vector<CL_DomNode> node_list;$/;"	m	class:CL_DomNodeList
normal	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Pointf normal;$/;"	m	struct:CL_CollisionPoint
normal	/usr/include/ClanLib/GUI/image.h	/^		normal,$/;"	e	enum:CL_Image::Mode
normal3b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3b normal3b;$/;"	m	class:CL_GLFunctions
normal3bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3bv normal3bv;$/;"	m	class:CL_GLFunctions
normal3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3d normal3d;$/;"	m	class:CL_GLFunctions
normal3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3dv normal3dv;$/;"	m	class:CL_GLFunctions
normal3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3f normal3f;$/;"	m	class:CL_GLFunctions
normal3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3fv normal3fv;$/;"	m	class:CL_GLFunctions
normal3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3i normal3i;$/;"	m	class:CL_GLFunctions
normal3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3iv normal3iv;$/;"	m	class:CL_GLFunctions
normal3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3s normal3s;$/;"	m	class:CL_GLFunctions
normal3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormal3sv normal3sv;$/;"	m	class:CL_GLFunctions
normalPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glNormalPointer normalPointer;$/;"	m	class:CL_GLFunctions
normalize	/usr/include/ClanLib/Core/Math/rect.h	/^	void normalize()$/;"	f	class:CL_Rect
normalize	/usr/include/ClanLib/Core/Math/rect.h	/^	void normalize()$/;"	f	class:CL_Rectf
normalize	/usr/include/ClanLib/Display/color.h	/^	void normalize() $/;"	f	class:CL_Colorf
oldlace	/usr/include/ClanLib/Display/color.h	/^	static CL_Color oldlace;$/;"	m	class:CL_Color
olive	/usr/include/ClanLib/Display/color.h	/^	static CL_Color olive;$/;"	m	class:CL_Color
olivedrab	/usr/include/ClanLib/Display/color.h	/^	static CL_Color olivedrab;$/;"	m	class:CL_Color
on_load	/usr/include/ClanLib/Core/Resources/resourcedata.h	/^	virtual void on_load() { return; }$/;"	f	class:CL_ResourceData
on_unload	/usr/include/ClanLib/Core/Resources/resourcedata.h	/^	virtual void on_unload() { return; }$/;"	f	class:CL_ResourceData
operator !=	/usr/include/ClanLib/Core/Math/point.h	/^	bool operator!=(const CL_Point &p) const$/;"	f	class:CL_Point
operator !=	/usr/include/ClanLib/Core/Math/point.h	/^	bool operator!=(const CL_Pointf &p) const$/;"	f	class:CL_Pointf
operator !=	/usr/include/ClanLib/Core/Math/quad.h	/^	bool operator!=(const CL_Quad &q) const$/;"	f	class:CL_Quad
operator !=	/usr/include/ClanLib/Core/Math/rect.h	/^	bool operator!=(const CL_Rect &r) const$/;"	f	class:CL_Rect
operator !=	/usr/include/ClanLib/Core/Math/rect.h	/^	bool operator!=(const CL_Rect &r) const$/;"	f	class:CL_Rectf
operator !=	/usr/include/ClanLib/Core/Math/size.h	/^	bool operator!=(const CL_Size &s) const$/;"	f	class:CL_Size
operator !=	/usr/include/ClanLib/Core/Math/size.h	/^	bool operator!=(const CL_Size &s) const$/;"	f	class:CL_Sizef
operator !=	/usr/include/ClanLib/Display/color.h	/^	bool operator!=(const CL_Color &c) const$/;"	f	class:CL_Color
operator !=	/usr/include/ClanLib/Display/color.h	/^	bool operator!=(const CL_Colorf &c) const$/;"	f	class:CL_Colorf
operator ()	/usr/include/ClanLib/Signals/signal_v0.h	/^	void operator() ()$/;"	f	class:CL_Signal_v0
operator ()	/usr/include/ClanLib/Signals/signal_v1.h	/^	void operator() (PARAM1 param1)$/;"	f	class:CL_Signal_v1
operator ()	/usr/include/ClanLib/Signals/signal_v2.h	/^	void operator() (PARAM1 param1, PARAM2 param2)$/;"	f	class:CL_Signal_v2
operator ()	/usr/include/ClanLib/Signals/signal_v3.h	/^	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3)$/;"	f	class:CL_Signal_v3
operator ()	/usr/include/ClanLib/Signals/signal_v4.h	/^	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4)$/;"	f	class:CL_Signal_v4
operator ()	/usr/include/ClanLib/Signals/signal_v5.h	/^	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5)$/;"	f	class:CL_Signal_v5
operator ()	/usr/include/ClanLib/Signals/slot_v0.h	/^	void operator() ()$/;"	f	class:CL_SlotParent_v0
operator *	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U const& operator*() const {return *ptr;}$/;"	f	class:CL_LazyCopyPtr
operator *	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U& operator*() {uniquify(); return *ptr;}$/;"	f	class:CL_LazyCopyPtr
operator *	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	U const& operator*() const { return *((const U*) impl->ptr); }$/;"	f	class:CL_MutexSharedPtr
operator *	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	U& operator*() { return *((U*) impl->ptr); }$/;"	f	class:CL_MutexSharedPtr
operator *	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	U const& operator*() const { return *((const U*) impl->ptr); }$/;"	f	class:CL_MutexWeakPtr
operator *	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	U& operator*() { return *((U*) impl->ptr); }$/;"	f	class:CL_MutexWeakPtr
operator *	/usr/include/ClanLib/Core/System/owningptr.h	/^		U const& operator*() const {return *((const U*)ptr);}$/;"	f	class:CL_OwningPtr
operator *	/usr/include/ClanLib/Core/System/owningptr.h	/^		U& operator*() {return *((U*)ptr);}$/;"	f	class:CL_OwningPtr
operator *	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U const& operator*() const { return *((const U*) impl->ptr); }$/;"	f	class:CL_SharedPtr
operator *	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U& operator*() { return *((U*) impl->ptr); }$/;"	f	class:CL_SharedPtr
operator *	/usr/include/ClanLib/Core/System/weakptr.h	/^	U const& operator*() const { return *((const U*) impl->ptr); }$/;"	f	class:CL_WeakPtr
operator *	/usr/include/ClanLib/Core/System/weakptr.h	/^	U& operator*() { return *((U*) impl->ptr); }$/;"	f	class:CL_WeakPtr
operator +	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point operator+(const CL_Point &p) const$/;"	f	class:CL_Point
operator +	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf operator+(const CL_Pointf &p) const$/;"	f	class:CL_Pointf
operator +	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad operator+(const CL_Point &p) const$/;"	f	class:CL_Quad
operator +	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad operator+(const CL_Quad &q) const$/;"	f	class:CL_Quad
operator +	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect operator+(const CL_Point &p) const$/;"	f	class:CL_Rect
operator +	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect operator+(const CL_Rect &r) const$/;"	f	class:CL_Rect
operator +	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf operator+(const CL_Pointf &p) const$/;"	f	class:CL_Rectf
operator +	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf operator+(const CL_Rectf &r) const$/;"	f	class:CL_Rectf
operator +	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size operator+(const CL_Size &s) const$/;"	f	class:CL_Size
operator +	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef operator+(const CL_Sizef &s) const$/;"	f	class:CL_Sizef
operator ++	/usr/include/ClanLib/Display/glyph_buffer.h	/^			Iter& operator ++() {++glyph_num; return *this;}$/;"	f	class:CL_GlyphBuffer::Iter
operator ++	/usr/include/ClanLib/Display/glyph_buffer.h	/^			const Iter operator ++(int) {Iter old = *this; ++(*this); return old;}$/;"	f	class:CL_GlyphBuffer::Iter
operator +=	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point &operator+=(const CL_Point &p)$/;"	f	class:CL_Point
operator +=	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf &operator+=(const CL_Pointf &p)$/;"	f	class:CL_Pointf
operator +=	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad &operator+=(const CL_Point &p)$/;"	f	class:CL_Quad
operator +=	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad &operator+=(const CL_Quad &q)$/;"	f	class:CL_Quad
operator +=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect &operator+=(const CL_Point &p)$/;"	f	class:CL_Rect
operator +=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect &operator+=(const CL_Rect &r)$/;"	f	class:CL_Rect
operator +=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf &operator+=(const CL_Pointf &p)$/;"	f	class:CL_Rectf
operator +=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf &operator+=(const CL_Rectf &r)$/;"	f	class:CL_Rectf
operator +=	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size &operator+=(const CL_Size &s)$/;"	f	class:CL_Size
operator +=	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef &operator+=(const CL_Sizef &s)$/;"	f	class:CL_Sizef
operator -	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point operator-(const CL_Point &p) const$/;"	f	class:CL_Point
operator -	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf operator-(const CL_Pointf &p) const$/;"	f	class:CL_Pointf
operator -	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad operator-(const CL_Point &p) const$/;"	f	class:CL_Quad
operator -	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad operator-(const CL_Quad &q) const$/;"	f	class:CL_Quad
operator -	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect operator-(const CL_Point &p) const$/;"	f	class:CL_Rect
operator -	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect operator-(const CL_Rect &r) const$/;"	f	class:CL_Rect
operator -	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf operator-(const CL_Pointf &p) const$/;"	f	class:CL_Rectf
operator -	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf operator-(const CL_Rectf &r) const$/;"	f	class:CL_Rectf
operator -	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size operator-(const CL_Size &s) const$/;"	f	class:CL_Size
operator -	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef operator-(const CL_Sizef &s) const$/;"	f	class:CL_Sizef
operator -=	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point &operator-=(const CL_Point &p)$/;"	f	class:CL_Point
operator -=	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf &operator-=(const CL_Pointf &p)$/;"	f	class:CL_Pointf
operator -=	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad &operator-=(const CL_Point &p)$/;"	f	class:CL_Quad
operator -=	/usr/include/ClanLib/Core/Math/quad.h	/^	CL_Quad &operator-=(const CL_Quad &q)$/;"	f	class:CL_Quad
operator -=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect &operator-=(const CL_Point &p)$/;"	f	class:CL_Rect
operator -=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rect &operator-=(const CL_Rect &r)$/;"	f	class:CL_Rect
operator -=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf &operator-=(const CL_Pointf &p)$/;"	f	class:CL_Rectf
operator -=	/usr/include/ClanLib/Core/Math/rect.h	/^	CL_Rectf &operator-=(const CL_Rectf &r)$/;"	f	class:CL_Rectf
operator -=	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Size &operator-=(const CL_Size &s)$/;"	f	class:CL_Size
operator -=	/usr/include/ClanLib/Core/Math/size.h	/^	CL_Sizef &operator-=(const CL_Sizef &s)$/;"	f	class:CL_Sizef
operator ->	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U const* operator->() const {return ptr.operator->();}$/;"	f	class:CL_LazyCopyPtr
operator ->	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	U* operator->() {uniquify(); return ptr.operator->();}$/;"	f	class:CL_LazyCopyPtr
operator ->	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	U const* operator->() const { return (const U*) impl->ptr; }$/;"	f	class:CL_MutexSharedPtr
operator ->	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	U* operator->() { return (U*) impl->ptr; }$/;"	f	class:CL_MutexSharedPtr
operator ->	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	U const* operator->() const { return (const U*) impl->ptr; }$/;"	f	class:CL_MutexWeakPtr
operator ->	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	U* operator->() { return (U*) impl->ptr; }$/;"	f	class:CL_MutexWeakPtr
operator ->	/usr/include/ClanLib/Core/System/owningptr.h	/^		U const* operator->() const {return (const U*)ptr;}$/;"	f	class:CL_OwningPtr
operator ->	/usr/include/ClanLib/Core/System/owningptr.h	/^		U* operator->() {return (U*)ptr;}$/;"	f	class:CL_OwningPtr
operator ->	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U const* operator->() const { return (const U*) impl->ptr; }$/;"	f	class:CL_SharedPtr
operator ->	/usr/include/ClanLib/Core/System/sharedptr.h	/^	U* operator->() { return (U*) impl->ptr; }$/;"	f	class:CL_SharedPtr
operator ->	/usr/include/ClanLib/Core/System/weakptr.h	/^	U const* operator->() const { return (const U*) impl->ptr; }$/;"	f	class:CL_WeakPtr
operator ->	/usr/include/ClanLib/Core/System/weakptr.h	/^	U* operator->() { return (U*) impl->ptr; }$/;"	f	class:CL_WeakPtr
operator <	/usr/include/ClanLib/GUI/listitem.h	/^	bool operator< ( const CL_ListItem &item ) const$/;"	f	class:CL_ListItem
operator =	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	CL_LazyCopyPtr<T, U>& operator=(T* t) {ptr = t; return *this; }$/;"	f	class:CL_LazyCopyPtr
operator =	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr<T, U>& operator=(D* t)$/;"	f	class:CL_MutexSharedPtr
operator =	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	CL_MutexSharedPtr<T, U>& operator=(const CL_MutexSharedPtr<T, U>& other)$/;"	f	class:CL_MutexSharedPtr
operator =	/usr/include/ClanLib/Core/System/owningptr.h	/^		CL_OwningPtr<T, U>& operator=(T* t)$/;"	f	class:CL_OwningPtr
operator =	/usr/include/ClanLib/Core/System/owningptr.h	/^		CL_OwningPtr<T, U>& operator=(const CL_OwningPtr<T, U>& other)$/;"	f	class:CL_OwningPtr
operator =	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr<T, U>& operator=(D* t)$/;"	f	class:CL_SharedPtr
operator =	/usr/include/ClanLib/Core/System/sharedptr.h	/^	CL_SharedPtr<T, U>& operator=(const CL_SharedPtr<T, U>& other)$/;"	f	class:CL_SharedPtr
operator =	/usr/include/ClanLib/Signals/signal_v0.h	/^	CL_Signal_v0 &operator =(const CL_Signal_v0 &copy)$/;"	f	class:CL_Signal_v0
operator =	/usr/include/ClanLib/Signals/signal_v1.h	/^	CL_Signal_v1 &operator =(const CL_Signal_v1 &copy)$/;"	f	class:CL_Signal_v1
operator =	/usr/include/ClanLib/Signals/signal_v2.h	/^	CL_Signal_v2 &operator =(const CL_Signal_v2 &copy)$/;"	f	class:CL_Signal_v2
operator =	/usr/include/ClanLib/Signals/signal_v3.h	/^	CL_Signal_v3 &operator =(const CL_Signal_v3 &copy)$/;"	f	class:CL_Signal_v3
operator =	/usr/include/ClanLib/Signals/signal_v4.h	/^	CL_Signal_v4 &operator =(const CL_Signal_v4 &copy)$/;"	f	class:CL_Signal_v4
operator =	/usr/include/ClanLib/Signals/signal_v5.h	/^	CL_Signal_v5 &operator =(const CL_Signal_v5 &copy)$/;"	f	class:CL_Signal_v5
operator ==	/usr/include/ClanLib/Core/Math/point.h	/^	bool operator==(const CL_Point &p) const$/;"	f	class:CL_Point
operator ==	/usr/include/ClanLib/Core/Math/point.h	/^	bool operator==(const CL_Pointf &p) const$/;"	f	class:CL_Pointf
operator ==	/usr/include/ClanLib/Core/Math/quad.h	/^	bool operator==(const CL_Quad &q) const$/;"	f	class:CL_Quad
operator ==	/usr/include/ClanLib/Core/Math/rect.h	/^	bool operator==(const CL_Rect &r) const$/;"	f	class:CL_Rect
operator ==	/usr/include/ClanLib/Core/Math/rect.h	/^	bool operator==(const CL_Rectf &r) const$/;"	f	class:CL_Rectf
operator ==	/usr/include/ClanLib/Core/Math/size.h	/^	bool operator==(const CL_Size &s) const$/;"	f	class:CL_Size
operator ==	/usr/include/ClanLib/Core/Math/size.h	/^	bool operator==(const CL_Sizef &s) const$/;"	f	class:CL_Sizef
operator ==	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	bool operator==(const CL_MutexSharedPtr<T, U>& other) const { return other.impl == impl; }$/;"	f	class:CL_MutexSharedPtr
operator ==	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	bool operator==(const T* other) const { return other == ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexSharedPtr
operator ==	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	bool operator==(const CL_MutexSharedPtr<T, U>& other) const { return other.impl == impl; }$/;"	f	class:CL_MutexWeakPtr
operator ==	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	bool operator==(const T* other) const { return other == ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_MutexWeakPtr
operator ==	/usr/include/ClanLib/Core/System/sharedptr.h	/^	bool operator==(const CL_SharedPtr<T, U>& other) const { return other.impl == impl; }$/;"	f	class:CL_SharedPtr
operator ==	/usr/include/ClanLib/Core/System/sharedptr.h	/^	bool operator==(const T* other) const { return other == ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_SharedPtr
operator ==	/usr/include/ClanLib/Core/System/weakptr.h	/^	bool operator==(const CL_SharedPtr<T, U>& other) const { return other.impl == impl; }$/;"	f	class:CL_WeakPtr
operator ==	/usr/include/ClanLib/Core/System/weakptr.h	/^	bool operator==(const T* other) const { return other == ((impl != 0) ? impl->ptr : 0); }$/;"	f	class:CL_WeakPtr
operator ==	/usr/include/ClanLib/Display/color.h	/^	bool operator==(const CL_Color &c) const$/;"	f	class:CL_Color
operator ==	/usr/include/ClanLib/Display/color.h	/^	bool operator==(const CL_Colorf &c) const$/;"	f	class:CL_Colorf
operator ==	/usr/include/ClanLib/GUI/listitem.h	/^	bool operator== ( const CL_ListItem &item ) const$/;"	f	class:CL_ListItem
operator CL_MutexSharedPtr<T, U>	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	operator CL_MutexSharedPtr<T, U>() const { return CL_MutexSharedPtr<T, U>(impl); }$/;"	f	class:CL_MutexWeakPtr
operator CL_SharedPtr<T, U>	/usr/include/ClanLib/Core/System/weakptr.h	/^	operator CL_SharedPtr<T, U>() const { return CL_SharedPtr<T, U>(impl); }$/;"	f	class:CL_WeakPtr
operator U const*	/usr/include/ClanLib/Core/System/sharedptr.h	/^	operator U const*() const { return get(); }$/;"	f	class:CL_SharedPtr
operator U*	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	operator U*() { return get(); }$/;"	f	class:CL_MutexSharedPtr
operator U*	/usr/include/ClanLib/Core/System/sharedptr.h	/^	operator U*() { return get(); }$/;"	f	class:CL_SharedPtr
operator []	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	const double &operator[](int i) const { return matrix[i]; }$/;"	f	class:CL_Matrix4x4
operator []	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	const double &operator[](unsigned int i) const { return matrix[i]; }$/;"	f	class:CL_Matrix4x4
operator []	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	double &operator[](int i) { return matrix[i]; }$/;"	f	class:CL_Matrix4x4
operator []	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	double &operator[](unsigned int i) { return matrix[i]; }$/;"	f	class:CL_Matrix4x4
operator []	/usr/include/ClanLib/Display/palette.h	/^	CL_Color &operator[](int index) { return colors[index]; }$/;"	f	class:CL_Palette
operator []	/usr/include/ClanLib/Display/palette.h	/^	const CL_Color &operator[](int index) const { return colors[index]; }$/;"	f	class:CL_Palette
operator []	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	Params &operator[](int index)$/;"	f	class:CL_SlotBuffer_v1
operator bool	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	operator bool() const$/;"	f	class:CL_Boolean
operator bool	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	operator bool()$/;"	f	class:CL_SlotBuffer_v0
operator bool	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	operator bool()$/;"	f	class:CL_SlotBuffer_v1
operator const U*	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	operator const U*() const { return get(); }$/;"	f	class:CL_MutexSharedPtr
operator const U*	/usr/include/ClanLib/Core/System/mutexweakptr.h	/^	operator const U*() const { return get(); }$/;"	f	class:CL_MutexWeakPtr
operator const U*	/usr/include/ClanLib/Core/System/weakptr.h	/^	operator const U*() const { return get(); }$/;"	f	class:CL_WeakPtr
operator const unsigned int*	/usr/include/ClanLib/Display/palette.h	/^	operator const unsigned int*() const { return (const unsigned int *) colors; }$/;"	f	class:CL_Palette
operator double *	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	operator double *() { return matrix; }$/;"	f	class:CL_Matrix4x4
operator double const*	/usr/include/ClanLib/Core/Math/matrix4x4.h	/^	operator double const*() const { return matrix; }$/;"	f	class:CL_Matrix4x4
operator float	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^	operator float() const$/;"	f	class:CL_Float
operator int	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	operator int() const$/;"	f	class:CL_Integer
operator unsigned int*	/usr/include/ClanLib/Display/palette.h	/^	operator unsigned int*() { return (unsigned int *) colors; }$/;"	f	class:CL_Palette
orange	/usr/include/ClanLib/Display/color.h	/^	static CL_Color orange;$/;"	m	class:CL_Color
orangered	/usr/include/ClanLib/Display/color.h	/^	static CL_Color orangered;$/;"	m	class:CL_Color
orchid	/usr/include/ClanLib/Display/color.h	/^	static CL_Color orchid;$/;"	m	class:CL_Color
origin_bottom_center	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_bottom_center,$/;"	e	enum:CL_Origin
origin_bottom_left	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_bottom_left,$/;"	e	enum:CL_Origin
origin_bottom_right	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_bottom_right$/;"	e	enum:CL_Origin
origin_center	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_center,$/;"	e	enum:CL_Origin
origin_center_left	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_center_left,$/;"	e	enum:CL_Origin
origin_center_right	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_center_right,$/;"	e	enum:CL_Origin
origin_top_center	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_top_center,$/;"	e	enum:CL_Origin
origin_top_left	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_top_left,$/;"	e	enum:CL_Origin
origin_top_right	/usr/include/ClanLib/Core/Math/origin.h	/^	origin_top_right,$/;"	e	enum:CL_Origin
ortho	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glOrtho ortho;$/;"	m	class:CL_GLFunctions
output	/usr/include/ClanLib/Network/NetSession/netpacket.h	/^	CL_OutputSource_NetPacket output;$/;"	m	class:CL_NetPacket
output	/usr/include/ClanLib/Network/NetSession/netstream.h	/^	CL_OutputSource_NetStream output;$/;"	m	class:CL_NetStream
output	/usr/include/ClanLib/Network/Socket/socket.h	/^	CL_OutputSource_Socket output;$/;"	m	class:CL_Socket
owner	/usr/include/ClanLib/Signals/signal_v0.h	/^		CL_Signal_v0 *owner;$/;"	m	class:CL_Signal_v0::CL_Signal_v0_Generic
owner	/usr/include/ClanLib/Signals/signal_v1.h	/^		CL_Signal_v1 *owner;$/;"	m	class:CL_Signal_v1::CL_Signal_v1_Generic
owner	/usr/include/ClanLib/Signals/signal_v2.h	/^		CL_Signal_v2 *owner;$/;"	m	class:CL_Signal_v2::CL_Signal_v2_Generic
owner	/usr/include/ClanLib/Signals/signal_v3.h	/^		CL_Signal_v3 *owner;$/;"	m	class:CL_Signal_v3::CL_Signal_v3_Generic
owner	/usr/include/ClanLib/Signals/signal_v4.h	/^		CL_Signal_v4 *owner;$/;"	m	class:CL_Signal_v4::CL_Signal_v4_Generic
owner	/usr/include/ClanLib/Signals/signal_v5.h	/^		CL_Signal_v5 *owner;$/;"	m	class:CL_Signal_v5::CL_Signal_v5_Generic
p1	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^		PARAM1 p1;$/;"	m	struct:CL_SlotBuffer_v1::Params
palegoldenrod	/usr/include/ClanLib/Display/color.h	/^	static CL_Color palegoldenrod;$/;"	m	class:CL_Color
palegreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color palegreen;$/;"	m	class:CL_Color
paleturquoise	/usr/include/ClanLib/Display/color.h	/^	static CL_Color paleturquoise;$/;"	m	class:CL_Color
palevioletred	/usr/include/ClanLib/Display/color.h	/^	static CL_Color palevioletred;$/;"	m	class:CL_Color
papayawhip	/usr/include/ClanLib/Display/color.h	/^	static CL_Color papayawhip;$/;"	m	class:CL_Color
param	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	Param param;$/;"	m	class:CL_ThreadFunc_Runnable_v1
param1	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	Param1 param1;$/;"	m	class:CL_ThreadFunc_Runnable_v2
param2	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	Param2 param2;$/;"	m	class:CL_ThreadFunc_Runnable_v2
params	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	std::vector<Params> params;$/;"	m	class:CL_SlotBuffer_v1
passThrough	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPassThrough passThrough;$/;"	m	class:CL_GLFunctions
peachpuff	/usr/include/ClanLib/Display/color.h	/^	static CL_Color peachpuff;$/;"	m	class:CL_Color
penetration_depth	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	float penetration_depth;$/;"	m	struct:CL_CollidingContours
penetration_normal	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Pointf penetration_normal;$/;"	m	struct:CL_CollidingContours
persistent	/usr/include/ClanLib/Signals/slot_generic.h	/^	bool persistent;$/;"	m	class:CL_Slot_Generic
peru	/usr/include/ClanLib/Display/color.h	/^	static CL_Color peru;$/;"	m	class:CL_Color
pgb	/usr/include/ClanLib/Display/glyph_buffer.h	/^			const CL_GlyphBuffer* pgb;$/;"	m	class:CL_GlyphBuffer::Iter
pink	/usr/include/ClanLib/Display/color.h	/^	static CL_Color pink;$/;"	m	class:CL_Color
pixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelMapfv pixelMapfv;$/;"	m	class:CL_GLFunctions
pixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelMapuiv pixelMapuiv;$/;"	m	class:CL_GLFunctions
pixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelMapusv pixelMapusv;$/;"	m	class:CL_GLFunctions
pixelStoref	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelStoref pixelStoref;$/;"	m	class:CL_GLFunctions
pixelStorei	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelStorei pixelStorei;$/;"	m	class:CL_GLFunctions
pixelTransferf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelTransferf pixelTransferf;$/;"	m	class:CL_GLFunctions
pixelTransferi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelTransferi pixelTransferi;$/;"	m	class:CL_GLFunctions
pixelZoom	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPixelZoom pixelZoom;$/;"	m	class:CL_GLFunctions
pixelformat_index	/usr/include/ClanLib/Display/pixel_format_type.h	/^	pixelformat_index$/;"	e	enum:CL_PixelFormatType
pixelformat_rgba	/usr/include/ClanLib/Display/pixel_format_type.h	/^	pixelformat_rgba,$/;"	e	enum:CL_PixelFormatType
plum	/usr/include/ClanLib/Display/color.h	/^	static CL_Color plum;$/;"	m	class:CL_Color
point	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Pointf point;$/;"	m	struct:CL_CollisionPoint
pointParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPointParameterfARB pointParameterf;$/;"	m	class:CL_GLFunctions
pointParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPointParameterfvARB pointParameterfv;$/;"	m	class:CL_GLFunctions
pointSize	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPointSize pointSize;$/;"	m	class:CL_GLFunctions
pointer_moved	/usr/include/ClanLib/Display/input_event.h	/^		pointer_moved     = 4,$/;"	e	enum:CL_InputEvent::Type
points	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	std::vector<CL_CollisionPoint> points;$/;"	m	struct:CL_CollidingContours
points	/usr/include/ClanLib/Display/Collision/contour.h	/^	std::vector<CL_Pointf> points;$/;"	m	class:CL_Contour
polygonMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPolygonMode polygonMode;$/;"	m	class:CL_GLFunctions
polygonOffset	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPolygonOffset polygonOffset;$/;"	m	class:CL_GLFunctions
polygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPolygonStipple polygonStipple;$/;"	m	class:CL_GLFunctions
popAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPopAttrib popAttrib;$/;"	m	class:CL_GLFunctions
popClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPopClientAttrib popClientAttrib;$/;"	m	class:CL_GLFunctions
popMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPopMatrix popMatrix;$/;"	m	class:CL_GLFunctions
popName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPopName popName;$/;"	m	class:CL_GLFunctions
pos	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	/^	int pos;$/;"	m	class:CL_InputSource_Memory
pos	/usr/include/ClanLib/Core/IOData/outputsource_file.h	/^	unsigned int pos;$/;"	m	class:CL_OutputSource_File
pos	/usr/include/ClanLib/Core/IOData/outputsource_memory.h	/^	unsigned int pos;$/;"	m	class:CL_OutputSource_Memory
pos	/usr/include/ClanLib/Display/glyph_buffer.h	/^		CL_Point pos;$/;"	m	struct:CL_GlyphBuffer::Glyph
pos	/usr/include/ClanLib/GL/viewpoint.h	/^	CL_Vector pos;$/;"	m	class:CL_Viewpoint
pos	/usr/include/ClanLib/Signals/slot_v0.h	/^	SlotIterator pos, end;$/;"	m	class:CL_SlotParent_v0
position	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Point position;$/;"	m	class:CL_Circle
position	/usr/include/ClanLib/Core/Math/circle.h	/^	CL_Pointf position;$/;"	m	class:CL_Circlef
position	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	CL_Pointf position;$/;"	m	class:CL_OutlineCircle
position	/usr/include/ClanLib/GL/light_source.h	/^	CL_Vector position;$/;"	m	class:CL_LightSource
powderblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color powderblue;$/;"	m	class:CL_Color
pressed	/usr/include/ClanLib/Display/input_event.h	/^		pressed           = 1,$/;"	e	enum:CL_InputEvent::Type
prioritizeTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPrioritizeTextures prioritizeTextures;$/;"	m	class:CL_GLFunctions
progressbar	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	CL_ProgressBar *progressbar;$/;"	m	class:CL_ProgressBar_Silver
proto	/usr/include/ClanLib/Network/Socket/socket.h	/^	Type proto;$/;"	m	class:CL_Socket
provider_path	/usr/include/ClanLib/Core/IOData/inputsource_provider_file.h	/^	std::string provider_path;$/;"	m	class:CL_InputSourceProvider_File
ptr	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	CL_SharedPtr<T, U> ptr;$/;"	m	class:CL_LazyCopyPtr
ptr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	TEvil *ptr;$/;"	m	class:CL_MutexSharedPtr_Generic
ptr	/usr/include/ClanLib/Core/System/owningptr.h	/^		T* ptr;$/;"	m	class:CL_OwningPtr
ptr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	TEvil *ptr;$/;"	m	class:CL_SharedPtr_Generic
ptr_glAccum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glAccum)(CLenum op, CLfloat value);$/;"	t	class:CL_GLFunctions
ptr_glActiveStencilFaceEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glActiveStencilFaceEXT)(CLenum face);$/;"	t	class:CL_GLFunctions
ptr_glActiveTextureARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glActiveTextureARB)(CLenum);$/;"	t	class:CL_GLFunctions
ptr_glAlphaFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glAlphaFunc)(CLenum func, CLclampf ref);$/;"	t	class:CL_GLFunctions
ptr_glAreTexturesResident	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glAreTexturesResident)(CLsizei n, const CLuint *textures, CLboolean *residences);$/;"	t	class:CL_GLFunctions
ptr_glArrayElement	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glArrayElement)(CLint i);$/;"	t	class:CL_GLFunctions
ptr_glAttachObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glAttachObjectARB)(CLuint containerObj, CLuint attachedObj);$/;"	t	class:CL_GLFunctions
ptr_glBegin	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBegin)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glBeginQueryARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBeginQueryARB)(CLenum target, CLuint id);$/;"	t	class:CL_GLFunctions
ptr_glBindAttribLocationARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBindAttribLocationARB)(CLuint programObj, CLuint index, const char *name);$/;"	t	class:CL_GLFunctions
ptr_glBindBufferARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBindBufferARB)(CLenum target, CLuint buffer);$/;"	t	class:CL_GLFunctions
ptr_glBindTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBindTexture)(CLenum target, CLuint texture);$/;"	t	class:CL_GLFunctions
ptr_glBitmap	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBitmap)(CLsizei width, CLsizei height, CLfloat xorig, CLfloat yorig, CLfloat xmove, CLfloat ymove, const CLubyte *bitmap);$/;"	t	class:CL_GLFunctions
ptr_glBlendColorEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBlendColorEXT)(CLclampf red, CLclampf green, CLclampf blue, CLclampf alpha);$/;"	t	class:CL_GLFunctions
ptr_glBlendEquationEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBlendEquationEXT)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glBlendFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBlendFunc)(CLenum sfactor, CLenum dfactor);$/;"	t	class:CL_GLFunctions
ptr_glBlendFuncSeparateEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBlendFuncSeparateEXT)(CLenum, CLenum, CLenum, CLenum);$/;"	t	class:CL_GLFunctions
ptr_glBufferDataARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBufferDataARB)(CLenum target, CLsizeiptr size, const void *data, CLenum usage);$/;"	t	class:CL_GLFunctions
ptr_glBufferSubDataARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glBufferSubDataARB)(CLenum target, CLintptr offset, CLsizeiptr size, const void *data);$/;"	t	class:CL_GLFunctions
ptr_glCallList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCallList)(CLuint list);$/;"	t	class:CL_GLFunctions
ptr_glCallLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCallLists)(CLsizei n, CLenum type, const void *lists);$/;"	t	class:CL_GLFunctions
ptr_glClear	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClear)(CLbitfield mask);$/;"	t	class:CL_GLFunctions
ptr_glClearAccum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClearAccum)(CLfloat red, CLfloat green, CLfloat blue, CLfloat alpha);$/;"	t	class:CL_GLFunctions
ptr_glClearColor	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClearColor)(CLclampf red, CLclampf green, CLclampf blue, CLclampf alpha);$/;"	t	class:CL_GLFunctions
ptr_glClearDepth	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClearDepth)(CLclampd depth);$/;"	t	class:CL_GLFunctions
ptr_glClearIndex	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClearIndex)(CLfloat c);$/;"	t	class:CL_GLFunctions
ptr_glClearStencil	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClearStencil)(CLint s);$/;"	t	class:CL_GLFunctions
ptr_glClientActiveTextureARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClientActiveTextureARB)(CLenum);$/;"	t	class:CL_GLFunctions
ptr_glClipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glClipPlane)(CLenum plane, const CLdouble *equation);$/;"	t	class:CL_GLFunctions
ptr_glColor3b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3b)(CLbyte red, CLbyte green, CLbyte blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3bv)(const CLbyte *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3d)(CLdouble red, CLdouble green, CLdouble blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3f)(CLfloat red, CLfloat green, CLfloat blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3i)(CLint red, CLint green, CLint blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3s)(CLshort red, CLshort green, CLshort blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3ub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3ub)(CLubyte red, CLubyte green, CLubyte blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3ubv)(const CLubyte *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3ui	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3ui)(CLuint red, CLuint green, CLuint blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3uiv)(const CLuint *v);$/;"	t	class:CL_GLFunctions
ptr_glColor3us	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3us)(CLushort red, CLushort green, CLushort blue);$/;"	t	class:CL_GLFunctions
ptr_glColor3usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor3usv)(const CLushort *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4b)(CLbyte red, CLbyte green, CLbyte blue, CLbyte alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4bv)(const CLbyte *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4d)(CLdouble red, CLdouble green, CLdouble blue, CLdouble alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4f)(CLfloat red, CLfloat green, CLfloat blue, CLfloat alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4i)(CLint red, CLint green, CLint blue, CLint alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4s)(CLshort red, CLshort green, CLshort blue, CLshort alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4ub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4ub)(CLubyte red, CLubyte green, CLubyte blue, CLubyte alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4ubv)(const CLubyte *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4ui	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4ui)(CLuint red, CLuint green, CLuint blue, CLuint alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4uiv)(const CLuint *v);$/;"	t	class:CL_GLFunctions
ptr_glColor4us	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4us)(CLushort red, CLushort green, CLushort blue, CLushort alpha);$/;"	t	class:CL_GLFunctions
ptr_glColor4usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColor4usv)(const CLushort *v);$/;"	t	class:CL_GLFunctions
ptr_glColorMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorMask)(CLboolean red, CLboolean green, CLboolean blue, CLboolean alpha);$/;"	t	class:CL_GLFunctions
ptr_glColorMaterial	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorMaterial)(CLenum face, CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glColorPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorPointer)(CLint size, CLenum type, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glColorSubTableEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorSubTableEXT)(CLenum target, CLsizei start, CLsizei count, CLenum format, CLenum type, const void *data);$/;"	t	class:CL_GLFunctions
ptr_glColorTableParameterfvSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorTableParameterfvSGI)(CLenum target, CLenum pname, const CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glColorTableParameterivSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorTableParameterivSGI)(CLenum target, CLenum pname, const CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glColorTableSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glColorTableSGI)(CLenum target, CLenum internalformat, CLsizei width, CLenum format, CLenum type, const void* table);$/;"	t	class:CL_GLFunctions
ptr_glCompileShaderARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompileShaderARB)(CLuint shaderObj);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexImage1DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexImage1DARB)(CLenum, CLint, CLenum, CLsizei, CLint, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexImage2DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexImage2DARB)(CLenum, CLint, CLenum, CLsizei, CLsizei, CLint, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexImage3DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexImage3DARB)(CLenum, CLint, CLenum, CLsizei, CLsizei, CLsizei, CLint, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexSubImage1DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexSubImage1DARB)(CLenum, CLint, CLint, CLsizei, CLenum, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexSubImage2DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexSubImage2DARB)(CLenum, CLint, CLint, CLint, CLsizei, CLsizei, CLenum, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glCompressedTexSubImage3DARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCompressedTexSubImage3DARB)(CLenum, CLint, CLint, CLint, CLint, CLsizei, CLsizei, CLsizei, CLenum, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionFilter1DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionFilter1DEXT)(CLenum target, CLenum internalformat, CLsizei width, CLenum format, CLenum type, const void* image);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionFilter2DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionFilter2DEXT)(CLenum target, CLenum internalformat, CLsizei width, CLsizei height, CLenum format, CLenum type, const void* image);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionParameterfEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionParameterfEXT)(CLenum target, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionParameterfvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionParameterfvEXT)(CLenum target, CLenum pname, const CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionParameteriEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionParameteriEXT)(CLenum target, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glConvolutionParameterivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glConvolutionParameterivEXT)(CLenum target, CLenum pname, const CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glCopyColorSubTableEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyColorSubTableEXT)(CLenum target, CLsizei start, CLint x, CLint y, CLsizei width);$/;"	t	class:CL_GLFunctions
ptr_glCopyColorTableSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyColorTableSGI)(CLenum target, CLenum internalformat, CLint x, CLint y, CLsizei width);$/;"	t	class:CL_GLFunctions
ptr_glCopyConvolutionFilter1DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyConvolutionFilter1DEXT)(CLenum target, CLenum internalformat, CLint x, CLint y, CLsizei width);$/;"	t	class:CL_GLFunctions
ptr_glCopyConvolutionFilter2DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyConvolutionFilter2DEXT)(CLenum target, CLenum internalformat, CLint x, CLint y, CLsizei width, CLsizei height);$/;"	t	class:CL_GLFunctions
ptr_glCopyPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyPixels)(CLint x, CLint y, CLsizei width, CLsizei height, CLenum type);$/;"	t	class:CL_GLFunctions
ptr_glCopyTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyTexImage1D)(CLenum target, CLint level, CLenum internalformat, CLint x, CLint y, CLsizei width, CLint border);$/;"	t	class:CL_GLFunctions
ptr_glCopyTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyTexImage2D)(CLenum target, CLint level, CLenum internalformat, CLint x, CLint y, CLsizei width, CLsizei height, CLint border);$/;"	t	class:CL_GLFunctions
ptr_glCopyTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyTexSubImage1D)(CLenum target, CLint level, CLint xoffset, CLint x, CLint y, CLsizei width);$/;"	t	class:CL_GLFunctions
ptr_glCopyTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyTexSubImage2D)(CLenum target, CLint level, CLint xoffset, CLint yoffset, CLint x, CLint y, CLsizei width, CLsizei height);$/;"	t	class:CL_GLFunctions
ptr_glCopyTexSubImage3DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCopyTexSubImage3DEXT)(CLenum target, CLint level, CLint xoffset, CLint yoffset, CLint zoffset, CLint x, CLint y, CLsizei width, CLsizei height);$/;"	t	class:CL_GLFunctions
ptr_glCreateProgramObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLuint (CL_GLFUNC *ptr_glCreateProgramObjectARB)();$/;"	t	class:CL_GLFunctions
ptr_glCreateShaderObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLuint (CL_GLFUNC *ptr_glCreateShaderObjectARB )(CLenum shaderType);$/;"	t	class:CL_GLFunctions
ptr_glCullFace	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glCullFace)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glDeleteBuffersARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDeleteBuffersARB)(CLsizei n, const CLuint *buffers);$/;"	t	class:CL_GLFunctions
ptr_glDeleteLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDeleteLists)(CLuint list, CLsizei range);$/;"	t	class:CL_GLFunctions
ptr_glDeleteObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDeleteObjectARB)(CLuint obj);$/;"	t	class:CL_GLFunctions
ptr_glDeleteQueriesARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDeleteQueriesARB)(CLsizei n, const CLuint *ids);$/;"	t	class:CL_GLFunctions
ptr_glDeleteTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDeleteTextures)(CLsizei n, const CLuint *textures);$/;"	t	class:CL_GLFunctions
ptr_glDepthFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDepthFunc)(CLenum func);$/;"	t	class:CL_GLFunctions
ptr_glDepthMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDepthMask)(CLboolean flag);$/;"	t	class:CL_GLFunctions
ptr_glDepthRange	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDepthRange)(CLclampd zNear, CLclampd zFar);$/;"	t	class:CL_GLFunctions
ptr_glDetachObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDetachObjectARB)(CLuint containerObj, CLuint attachedObj);$/;"	t	class:CL_GLFunctions
ptr_glDisable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDisable)(CLenum cap);$/;"	t	class:CL_GLFunctions
ptr_glDisableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDisableClientState)(CLenum array);$/;"	t	class:CL_GLFunctions
ptr_glDisableVertexAttribArrayARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDisableVertexAttribArrayARB)(CLuint index);$/;"	t	class:CL_GLFunctions
ptr_glDrawArrays	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawArrays)(CLenum mode, CLint first, CLsizei count);$/;"	t	class:CL_GLFunctions
ptr_glDrawBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawBuffer)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glDrawBuffersARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawBuffersARB)(CLsizei n, const CLenum *bufs);$/;"	t	class:CL_GLFunctions
ptr_glDrawElements	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawElements)(CLenum mode, CLsizei count, CLenum type, const void *indices);$/;"	t	class:CL_GLFunctions
ptr_glDrawPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawPixels)(CLsizei width, CLsizei height, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glDrawRangeElementsEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glDrawRangeElementsEXT)(CLenum mode, CLuint start, CLuint end, CLsizei count, CLenum type, const void *indices);$/;"	t	class:CL_GLFunctions
ptr_glEdgeFlag	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEdgeFlag)(CLboolean flag);$/;"	t	class:CL_GLFunctions
ptr_glEdgeFlagPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEdgeFlagPointer)(CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glEdgeFlagv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEdgeFlagv)(const CLboolean *flag);$/;"	t	class:CL_GLFunctions
ptr_glEnable	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEnable)(CLenum cap);$/;"	t	class:CL_GLFunctions
ptr_glEnableClientState	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEnableClientState)(CLenum array);$/;"	t	class:CL_GLFunctions
ptr_glEnableVertexAttribArrayARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEnableVertexAttribArrayARB)(CLuint index);$/;"	t	class:CL_GLFunctions
ptr_glEnd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEnd)();$/;"	t	class:CL_GLFunctions
ptr_glEndList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEndList)();$/;"	t	class:CL_GLFunctions
ptr_glEndQueryARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEndQueryARB)(CLenum target);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord1d)(CLdouble u);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord1dv)(const CLdouble *u);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord1f)(CLfloat u);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord1fv)(const CLfloat *u);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord2d)(CLdouble u, CLdouble v);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord2dv)(const CLdouble *u);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord2f)(CLfloat u, CLfloat v);$/;"	t	class:CL_GLFunctions
ptr_glEvalCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalCoord2fv)(const CLfloat *u);$/;"	t	class:CL_GLFunctions
ptr_glEvalMesh1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalMesh1)(CLenum mode, CLint i1, CLint i2);$/;"	t	class:CL_GLFunctions
ptr_glEvalMesh2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalMesh2)(CLenum mode, CLint i1, CLint i2, CLint j1, CLint j2);$/;"	t	class:CL_GLFunctions
ptr_glEvalPoint1	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalPoint1)(CLint i);$/;"	t	class:CL_GLFunctions
ptr_glEvalPoint2	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glEvalPoint2)(CLint i, CLint j);$/;"	t	class:CL_GLFunctions
ptr_glFeedbackBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFeedbackBuffer)(CLsizei size, CLenum type, CLfloat *buffer);$/;"	t	class:CL_GLFunctions
ptr_glFinish	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFinish)();$/;"	t	class:CL_GLFunctions
ptr_glFlush	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFlush)();$/;"	t	class:CL_GLFunctions
ptr_glFogCoordPointerEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogCoordPointerEXT)(CLenum, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glFogCoorddEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogCoorddEXT)(CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glFogCoorddvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogCoorddvEXT)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glFogCoordfEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogCoordfEXT)(CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glFogCoordfvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogCoordfvEXT)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glFogf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogf)(CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glFogfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogfv)(CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glFogi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogi)(CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glFogiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFogiv)(CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glFrontFace	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFrontFace)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glFrustum	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glFrustum)(CLdouble left, CLdouble right, CLdouble bottom, CLdouble top, CLdouble zNear, CLdouble zFar);$/;"	t	class:CL_GLFunctions
ptr_glGenBuffersARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGenBuffersARB)(CLsizei n, CLuint *buffers);$/;"	t	class:CL_GLFunctions
ptr_glGenLists	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLuint (CL_GLFUNC *ptr_glGenLists)(CLsizei range);$/;"	t	class:CL_GLFunctions
ptr_glGenQueriesARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGenQueriesARB)(CLsizei n, CLuint *ids);$/;"	t	class:CL_GLFunctions
ptr_glGenTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGenTextures)(CLsizei n, CLuint *textures);$/;"	t	class:CL_GLFunctions
ptr_glGetActiveAttribARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetActiveAttribARB)(CLuint programObj, CLuint index, CLsizei maxLength, CLsizei *length, CLint *size, CLenum *type, char *name);$/;"	t	class:CL_GLFunctions
ptr_glGetActiveUniformARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetActiveUniformARB)(CLuint programObj, CLuint index, CLsizei maxLength, CLsizei *length, CLsizei *size, CLenum *type, CLchar *name);$/;"	t	class:CL_GLFunctions
ptr_glGetAttachedObjectsARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetAttachedObjectsARB)(CLuint containerObj, CLsizei maxCount, CLsizei *count, CLuint *obj);$/;"	t	class:CL_GLFunctions
ptr_glGetAttribLocationARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLint (CL_GLFUNC *ptr_glGetAttribLocationARB)(CLuint programObj, const char *name);$/;"	t	class:CL_GLFunctions
ptr_glGetBooleanv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetBooleanv)(CLenum pname, CLboolean *params);$/;"	t	class:CL_GLFunctions
ptr_glGetBufferParameterivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetBufferParameterivARB)(CLenum target, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetBufferPointervARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetBufferPointervARB)(CLenum target, CLenum pname, void **params);$/;"	t	class:CL_GLFunctions
ptr_glGetBufferSubDataARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetBufferSubDataARB)(CLenum target, CLintptr offset, CLsizeiptr size, void *data);$/;"	t	class:CL_GLFunctions
ptr_glGetClipPlane	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetClipPlane)(CLenum plane, CLdouble *equation);$/;"	t	class:CL_GLFunctions
ptr_glGetColorTableParameterfvSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetColorTableParameterfvSGI)(CLenum target, CLenum pname, CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glGetColorTableParameterivSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetColorTableParameterivSGI)(CLenum target, CLenum pname, CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glGetColorTableSGI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetColorTableSGI)(CLenum target, CLenum format, CLenum type, void* table);$/;"	t	class:CL_GLFunctions
ptr_glGetCompressedTexImageARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetCompressedTexImageARB)(CLenum, CLint, void *);$/;"	t	class:CL_GLFunctions
ptr_glGetConvolutionFilterEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetConvolutionFilterEXT)(CLenum target, CLenum format, CLenum type, void* image);$/;"	t	class:CL_GLFunctions
ptr_glGetConvolutionParameterfvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetConvolutionParameterfvEXT)(CLenum target, CLenum pname, CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glGetConvolutionParameterivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetConvolutionParameterivEXT)(CLenum target, CLenum pname, CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glGetDoublev	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetDoublev)(CLenum pname, CLdouble *params);$/;"	t	class:CL_GLFunctions
ptr_glGetError	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLenum (CL_GLFUNC *ptr_glGetError)();$/;"	t	class:CL_GLFunctions
ptr_glGetFloatv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetFloatv)(CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetHandleARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLuint (CL_GLFUNC *ptr_glGetHandleARB)(CLenum pname);$/;"	t	class:CL_GLFunctions
ptr_glGetHistogramEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetHistogramEXT)(CLenum target, CLboolean reset, CLenum format, CLenum type, void* values);$/;"	t	class:CL_GLFunctions
ptr_glGetHistogramParameterfvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetHistogramParameterfvEXT)(CLenum target, CLenum pname, CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glGetHistogramParameterivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetHistogramParameterivEXT)(CLenum target, CLenum pname, CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glGetInfoLogARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetInfoLogARB)(CLuint obj, CLsizei maxLength, CLsizei *length, CLchar *infoLog);$/;"	t	class:CL_GLFunctions
ptr_glGetIntegerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetIntegerv)(CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetLightfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetLightfv)(CLenum light, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetLightiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetLightiv)(CLenum light, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetMapdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMapdv)(CLenum target, CLenum query, CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glGetMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMapfv)(CLenum target, CLenum query, CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glGetMapiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMapiv)(CLenum target, CLenum query, CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glGetMaterialfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMaterialfv)(CLenum face, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetMaterialiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMaterialiv)(CLenum face, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetMinmaxEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMinmaxEXT)(CLenum target, CLboolean reset, CLenum format, CLenum type, void* values);$/;"	t	class:CL_GLFunctions
ptr_glGetMinmaxParameterfvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMinmaxParameterfvEXT)(CLenum target, CLenum pname, CLfloat* params);$/;"	t	class:CL_GLFunctions
ptr_glGetMinmaxParameterivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetMinmaxParameterivEXT)(CLenum target, CLenum pname, CLint* params);$/;"	t	class:CL_GLFunctions
ptr_glGetObjectParameterfvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetObjectParameterfvARB)(CLuint obj, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetObjectParameterivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetObjectParameterivARB)(CLuint obj, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetPixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetPixelMapfv)(CLenum map, CLfloat *values);$/;"	t	class:CL_GLFunctions
ptr_glGetPixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetPixelMapuiv)(CLenum map, CLuint *values);$/;"	t	class:CL_GLFunctions
ptr_glGetPixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetPixelMapusv)(CLenum map, CLushort *values);$/;"	t	class:CL_GLFunctions
ptr_glGetPointerv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetPointerv)(CLenum pname, void* *params);$/;"	t	class:CL_GLFunctions
ptr_glGetPolygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetPolygonStipple)(CLubyte *mask);$/;"	t	class:CL_GLFunctions
ptr_glGetQueryObjectivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetQueryObjectivARB)(CLuint id, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetQueryObjectuivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetQueryObjectuivARB)(CLuint id, CLenum pname, CLuint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetQueryivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetQueryivARB)(CLenum target, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetSeparableFilterEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetSeparableFilterEXT)(CLenum target, CLenum format, CLenum type, void* row, void* column, void* span);$/;"	t	class:CL_GLFunctions
ptr_glGetShaderSourceARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetShaderSourceARB)(CLuint obj, CLsizei maxLength, CLsizei *length, CLchar *source);$/;"	t	class:CL_GLFunctions
ptr_glGetString	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef const CLubyte *(CL_GLFUNC *ptr_glGetString)(CLenum name);$/;"	t	class:CL_GLFunctions
ptr_glGetTexEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexEnvfv)(CLenum target, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexEnviv)(CLenum target, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexGendv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexGendv)(CLenum coord, CLenum pname, CLdouble *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexGenfv)(CLenum coord, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexGeniv)(CLenum coord, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexImage	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexImage)(CLenum target, CLint level, CLenum format, CLenum type, void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glGetTexLevelParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexLevelParameterfv)(CLenum target, CLint level, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexLevelParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexLevelParameteriv)(CLenum target, CLint level, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexParameterfv)(CLenum target, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetTexParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetTexParameteriv)(CLenum target, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetUniformLocationARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLint (CL_GLFUNC *ptr_glGetUniformLocationARB)(CLuint programObj, const CLchar *name);$/;"	t	class:CL_GLFunctions
ptr_glGetUniformfvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetUniformfvARB)(CLuint programObj, CLint location, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetUniformivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetUniformivARB)(CLuint programObj, CLint location, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glGetVertexAttribPointervARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetVertexAttribPointervARB)(CLuint index, CLenum pname, void **pointer);$/;"	t	class:CL_GLFunctions
ptr_glGetVertexAttribdvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetVertexAttribdvARB)(CLuint index, CLenum pname, CLdouble *params);$/;"	t	class:CL_GLFunctions
ptr_glGetVertexAttribfvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetVertexAttribfvARB)(CLuint index, CLenum pname, CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glGetVertexAttribivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glGetVertexAttribivARB)(CLuint index, CLenum pname, CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glHint	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glHint)(CLenum target, CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glHistogramEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glHistogramEXT)(CLenum target, CLsizei width, CLenum internalformat, CLboolean sink);$/;"	t	class:CL_GLFunctions
ptr_glIndexMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexMask)(CLuint mask);$/;"	t	class:CL_GLFunctions
ptr_glIndexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexPointer)(CLenum type, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glIndexd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexd)(CLdouble c);$/;"	t	class:CL_GLFunctions
ptr_glIndexdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexdv)(const CLdouble *c);$/;"	t	class:CL_GLFunctions
ptr_glIndexf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexf)(CLfloat c);$/;"	t	class:CL_GLFunctions
ptr_glIndexfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexfv)(const CLfloat *c);$/;"	t	class:CL_GLFunctions
ptr_glIndexi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexi)(CLint c);$/;"	t	class:CL_GLFunctions
ptr_glIndexiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexiv)(const CLint *c);$/;"	t	class:CL_GLFunctions
ptr_glIndexs	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexs)(CLshort c);$/;"	t	class:CL_GLFunctions
ptr_glIndexsv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexsv)(const CLshort *c);$/;"	t	class:CL_GLFunctions
ptr_glIndexub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexub)(CLubyte c);$/;"	t	class:CL_GLFunctions
ptr_glIndexubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glIndexubv)(const CLubyte *c);$/;"	t	class:CL_GLFunctions
ptr_glInitNames	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glInitNames)();$/;"	t	class:CL_GLFunctions
ptr_glInterleavedArrays	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glInterleavedArrays)(CLenum format, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glIsBufferARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glIsBufferARB)(CLuint buffer);$/;"	t	class:CL_GLFunctions
ptr_glIsEnabled	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glIsEnabled)(CLenum cap);$/;"	t	class:CL_GLFunctions
ptr_glIsList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glIsList)(CLuint list);$/;"	t	class:CL_GLFunctions
ptr_glIsQueryARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glIsQueryARB)(CLuint id);$/;"	t	class:CL_GLFunctions
ptr_glIsTexture	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glIsTexture)(CLuint texture);$/;"	t	class:CL_GLFunctions
ptr_glLightModelf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightModelf)(CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glLightModelfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightModelfv)(CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glLightModeli	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightModeli)(CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glLightModeliv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightModeliv)(CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glLightf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightf)(CLenum light, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glLightfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightfv)(CLenum light, CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glLighti	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLighti)(CLenum light, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glLightiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLightiv)(CLenum light, CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glLineStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLineStipple)(CLint factor, CLushort pattern);$/;"	t	class:CL_GLFunctions
ptr_glLineWidth	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLineWidth)(CLfloat width);$/;"	t	class:CL_GLFunctions
ptr_glLinkProgramARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLinkProgramARB)(CLuint programObj);$/;"	t	class:CL_GLFunctions
ptr_glListBase	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glListBase)(CLuint base);$/;"	t	class:CL_GLFunctions
ptr_glLoadIdentity	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadIdentity)();$/;"	t	class:CL_GLFunctions
ptr_glLoadMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadMatrixd)(const CLdouble *m);$/;"	t	class:CL_GLFunctions
ptr_glLoadMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadMatrixf)(const CLfloat *m);$/;"	t	class:CL_GLFunctions
ptr_glLoadName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadName)(CLuint name);$/;"	t	class:CL_GLFunctions
ptr_glLoadTransposeMatrixdARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadTransposeMatrixdARB)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glLoadTransposeMatrixfARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLoadTransposeMatrixfARB)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glLogicOp	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glLogicOp)(CLenum opcode);$/;"	t	class:CL_GLFunctions
ptr_glMap1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMap1d)(CLenum target, CLdouble u1, CLdouble u2, CLint stride, CLint order, const CLdouble *points);$/;"	t	class:CL_GLFunctions
ptr_glMap1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMap1f)(CLenum target, CLfloat u1, CLfloat u2, CLint stride, CLint order, const CLfloat *points);$/;"	t	class:CL_GLFunctions
ptr_glMap2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMap2d)(CLenum target, CLdouble u1, CLdouble u2, CLint ustride, CLint uorder, CLdouble v1, CLdouble v2, CLint vstride, CLint vorder, const CLdouble *points);$/;"	t	class:CL_GLFunctions
ptr_glMap2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMap2f)(CLenum target, CLfloat u1, CLfloat u2, CLint ustride, CLint uorder, CLfloat v1, CLfloat v2, CLint vstride, CLint vorder, const CLfloat *points);$/;"	t	class:CL_GLFunctions
ptr_glMapBufferARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMapBufferARB)(CLenum target, CLenum access);$/;"	t	class:CL_GLFunctions
ptr_glMapGrid1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMapGrid1d)(CLint un, CLdouble u1, CLdouble u2);$/;"	t	class:CL_GLFunctions
ptr_glMapGrid1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMapGrid1f)(CLint un, CLfloat u1, CLfloat u2);$/;"	t	class:CL_GLFunctions
ptr_glMapGrid2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMapGrid2d)(CLint un, CLdouble u1, CLdouble u2, CLint vn, CLdouble v1, CLdouble v2);$/;"	t	class:CL_GLFunctions
ptr_glMapGrid2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMapGrid2f)(CLint un, CLfloat u1, CLfloat u2, CLint vn, CLfloat v1, CLfloat v2);$/;"	t	class:CL_GLFunctions
ptr_glMaterialf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMaterialf)(CLenum face, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glMaterialfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMaterialfv)(CLenum face, CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glMateriali	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMateriali)(CLenum face, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glMaterialiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMaterialiv)(CLenum face, CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glMatrixMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMatrixMode)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glMinmaxEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMinmaxEXT)(CLenum target, CLenum internalformat, CLboolean sink);$/;"	t	class:CL_GLFunctions
ptr_glMultMatrixd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultMatrixd)(const CLdouble *m);$/;"	t	class:CL_GLFunctions
ptr_glMultMatrixf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultMatrixf)(const CLfloat *m);$/;"	t	class:CL_GLFunctions
ptr_glMultTransposeMatrixdARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultTransposeMatrixdARB)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glMultTransposeMatrixfARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultTransposeMatrixfARB)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiDrawArraysEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiDrawArraysEXT)(CLenum, CLint *, CLsizei *, CLsizei);$/;"	t	class:CL_GLFunctions
ptr_glMultiDrawElementsEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiDrawElementsEXT)(CLenum, CLsizei const *, CLenum, void const * *, CLsizei);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1dARB)(CLenum, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1dvARB)(CLenum, CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1fARB)(CLenum, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1fvARB)(CLenum, CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1iARB)(CLenum, CLint);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1ivARB)(CLenum, CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1sARB)(CLenum, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord1svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord1svARB)(CLenum, CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2dARB)(CLenum, CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2dvARB)(CLenum, CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2fARB)(CLenum, CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2fvARB)(CLenum, CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2iARB)(CLenum, CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2ivARB)(CLenum, CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2sARB)(CLenum, CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord2svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord2svARB)(CLenum, CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3dARB)(CLenum, CLdouble, CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3dvARB)(CLenum, CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3fARB)(CLenum, CLfloat, CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3fvARB)(CLenum, CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3iARB)(CLenum, CLint, CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3ivARB)(CLenum, CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3sARB)(CLenum, CLshort, CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord3svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord3svARB)(CLenum, CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4dARB)(CLenum, CLdouble, CLdouble, CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4dvARB)(CLenum, CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4fARB)(CLenum, CLfloat, CLfloat, CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4fvARB)(CLenum, CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4iARB)(CLenum, CLint, CLint, CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4ivARB)(CLenum, CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4sARB)(CLenum, CLshort, CLshort, CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glMultiTexCoord4svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glMultiTexCoord4svARB)(CLenum, CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glNewList	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNewList)(CLuint list, CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glNormal3b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3b)(CLbyte nx, CLbyte ny, CLbyte nz);$/;"	t	class:CL_GLFunctions
ptr_glNormal3bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3bv)(const CLbyte *v);$/;"	t	class:CL_GLFunctions
ptr_glNormal3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3d)(CLdouble nx, CLdouble ny, CLdouble nz);$/;"	t	class:CL_GLFunctions
ptr_glNormal3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glNormal3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3f)(CLfloat nx, CLfloat ny, CLfloat nz);$/;"	t	class:CL_GLFunctions
ptr_glNormal3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glNormal3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3i)(CLint nx, CLint ny, CLint nz);$/;"	t	class:CL_GLFunctions
ptr_glNormal3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glNormal3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3s)(CLshort nx, CLshort ny, CLshort nz);$/;"	t	class:CL_GLFunctions
ptr_glNormal3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormal3sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glNormalPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glNormalPointer)(CLenum type, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glOrtho	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glOrtho)(CLdouble left, CLdouble right, CLdouble bottom, CLdouble top, CLdouble zNear, CLdouble zFar);$/;"	t	class:CL_GLFunctions
ptr_glPassThrough	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPassThrough)(CLfloat token);$/;"	t	class:CL_GLFunctions
ptr_glPixelMapfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelMapfv)(CLenum map, CLint mapsize, const CLfloat *values);$/;"	t	class:CL_GLFunctions
ptr_glPixelMapuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelMapuiv)(CLenum map, CLint mapsize, const CLuint *values);$/;"	t	class:CL_GLFunctions
ptr_glPixelMapusv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelMapusv)(CLenum map, CLint mapsize, const CLushort *values);$/;"	t	class:CL_GLFunctions
ptr_glPixelStoref	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelStoref)(CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glPixelStorei	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelStorei)(CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glPixelTransferf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelTransferf)(CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glPixelTransferi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelTransferi)(CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glPixelZoom	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPixelZoom)(CLfloat xfactor, CLfloat yfactor);$/;"	t	class:CL_GLFunctions
ptr_glPointParameterfARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPointParameterfARB)(CLenum, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glPointParameterfvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPointParameterfvARB)(CLenum, CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glPointSize	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPointSize)(CLfloat size);$/;"	t	class:CL_GLFunctions
ptr_glPolygonMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPolygonMode)(CLenum face, CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glPolygonOffset	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPolygonOffset)(CLfloat factor, CLfloat units);$/;"	t	class:CL_GLFunctions
ptr_glPolygonStipple	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPolygonStipple)(const CLubyte *mask);$/;"	t	class:CL_GLFunctions
ptr_glPopAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPopAttrib)();$/;"	t	class:CL_GLFunctions
ptr_glPopClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPopClientAttrib)();$/;"	t	class:CL_GLFunctions
ptr_glPopMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPopMatrix)();$/;"	t	class:CL_GLFunctions
ptr_glPopName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPopName)();$/;"	t	class:CL_GLFunctions
ptr_glPrioritizeTextures	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPrioritizeTextures)(CLsizei n, const CLuint *textures, const CLclampf *priorities);$/;"	t	class:CL_GLFunctions
ptr_glPushAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPushAttrib)(CLbitfield mask);$/;"	t	class:CL_GLFunctions
ptr_glPushClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPushClientAttrib)(CLbitfield mask);$/;"	t	class:CL_GLFunctions
ptr_glPushMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPushMatrix)();$/;"	t	class:CL_GLFunctions
ptr_glPushName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glPushName)(CLuint name);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2d)(CLdouble x, CLdouble y);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2f)(CLfloat x, CLfloat y);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2i)(CLint x, CLint y);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2s)(CLshort x, CLshort y);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos2sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3d)(CLdouble x, CLdouble y, CLdouble z);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3f)(CLfloat x, CLfloat y, CLfloat z);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3i)(CLint x, CLint y, CLint z);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3s)(CLshort x, CLshort y, CLshort z);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos3sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4d)(CLdouble x, CLdouble y, CLdouble z, CLdouble w);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4f)(CLfloat x, CLfloat y, CLfloat z, CLfloat w);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4i)(CLint x, CLint y, CLint z, CLint w);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4s)(CLshort x, CLshort y, CLshort z, CLshort w);$/;"	t	class:CL_GLFunctions
ptr_glRasterPos4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRasterPos4sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glReadBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glReadBuffer)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glReadPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glReadPixels)(CLint x, CLint y, CLsizei width, CLsizei height, CLenum format, CLenum type, void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glRectd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectd)(CLdouble x1, CLdouble y1, CLdouble x2, CLdouble y2);$/;"	t	class:CL_GLFunctions
ptr_glRectdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectdv)(const CLdouble *v1, const CLdouble *v2);$/;"	t	class:CL_GLFunctions
ptr_glRectf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectf)(CLfloat x1, CLfloat y1, CLfloat x2, CLfloat y2);$/;"	t	class:CL_GLFunctions
ptr_glRectfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectfv)(const CLfloat *v1, const CLfloat *v2);$/;"	t	class:CL_GLFunctions
ptr_glRecti	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRecti)(CLint x1, CLint y1, CLint x2, CLint y2);$/;"	t	class:CL_GLFunctions
ptr_glRectiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectiv)(const CLint *v1, const CLint *v2);$/;"	t	class:CL_GLFunctions
ptr_glRects	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRects)(CLshort x1, CLshort y1, CLshort x2, CLshort y2);$/;"	t	class:CL_GLFunctions
ptr_glRectsv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRectsv)(const CLshort *v1, const CLshort *v2);$/;"	t	class:CL_GLFunctions
ptr_glRenderMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLint (CL_GLFUNC *ptr_glRenderMode)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glResetHistogramEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glResetHistogramEXT)(CLenum target);$/;"	t	class:CL_GLFunctions
ptr_glResetMinmaxEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glResetMinmaxEXT)(CLenum target);$/;"	t	class:CL_GLFunctions
ptr_glRotated	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRotated)(CLdouble angle, CLdouble x, CLdouble y, CLdouble z);$/;"	t	class:CL_GLFunctions
ptr_glRotatef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glRotatef)(CLfloat angle, CLfloat x, CLfloat y, CLfloat z);$/;"	t	class:CL_GLFunctions
ptr_glSampleCoverageARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSampleCoverageARB)(CLclampf, CLboolean);$/;"	t	class:CL_GLFunctions
ptr_glScaled	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glScaled)(CLdouble x, CLdouble y, CLdouble z);$/;"	t	class:CL_GLFunctions
ptr_glScalef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glScalef)(CLfloat x, CLfloat y, CLfloat z);$/;"	t	class:CL_GLFunctions
ptr_glScissor	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glScissor)(CLint x, CLint y, CLsizei width, CLsizei height);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3bEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3bEXT)(CLbyte, CLbyte, CLbyte);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3bvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3bvEXT)(CLbyte const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3dEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3dEXT)(CLdouble, CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3dvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3dvEXT)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3fEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3fEXT)(CLfloat, CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3fvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3fvEXT)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3iEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3iEXT)(CLint, CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3ivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3ivEXT)(CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3sEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3sEXT)(CLshort, CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3svEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3svEXT)(CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3ubEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3ubEXT)(CLubyte, CLubyte, CLubyte);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3ubvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3ubvEXT)(CLubyte const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3uiEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3uiEXT)(CLuint, CLuint, CLuint);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3uivEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3uivEXT)(CLuint const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3usEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3usEXT)(CLushort, CLushort, CLushort);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColor3usvEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColor3usvEXT)(CLushort const *);$/;"	t	class:CL_GLFunctions
ptr_glSecondaryColorPointerEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSecondaryColorPointerEXT)(CLint, CLenum, CLsizei, void const *);$/;"	t	class:CL_GLFunctions
ptr_glSelectBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSelectBuffer)(CLsizei size, CLuint *buffer);$/;"	t	class:CL_GLFunctions
ptr_glSeparableFilter2DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glSeparableFilter2DEXT)(CLenum target, CLenum internalformat, CLsizei width, CLsizei height, CLenum format, CLenum type, const void* row, const void* column);$/;"	t	class:CL_GLFunctions
ptr_glShadeModel	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glShadeModel)(CLenum mode);$/;"	t	class:CL_GLFunctions
ptr_glShaderSourceARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glShaderSourceARB)(CLuint shaderObj, CLsizei count, const CLchar* *string, const CLint *length);$/;"	t	class:CL_GLFunctions
ptr_glStencilFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glStencilFunc)(CLenum func, CLint ref, CLuint mask);$/;"	t	class:CL_GLFunctions
ptr_glStencilFuncSeparateATI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glStencilFuncSeparateATI)(CLenum frontfunc, CLenum backfunc, CLint ref, CLuint mask);$/;"	t	class:CL_GLFunctions
ptr_glStencilMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glStencilMask)(CLuint mask);$/;"	t	class:CL_GLFunctions
ptr_glStencilOp	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glStencilOp)(CLenum fail, CLenum zfail, CLenum zpass);$/;"	t	class:CL_GLFunctions
ptr_glStencilOpSeparateATI	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glStencilOpSeparateATI)(CLenum face, CLenum sfail, CLenum dpfail, CLenum dppass);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1d)(CLdouble s);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1f)(CLfloat s);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1i)(CLint s);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1s)(CLshort s);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord1sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord1sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2d)(CLdouble s, CLdouble t);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2f)(CLfloat s, CLfloat t);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2i)(CLint s, CLint t);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2s)(CLshort s, CLshort t);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord2sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3d)(CLdouble s, CLdouble t, CLdouble r);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3f)(CLfloat s, CLfloat t, CLfloat r);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3i)(CLint s, CLint t, CLint r);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3s)(CLshort s, CLshort t, CLshort r);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord3sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4d)(CLdouble s, CLdouble t, CLdouble r, CLdouble q);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4f)(CLfloat s, CLfloat t, CLfloat r, CLfloat q);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4i)(CLint s, CLint t, CLint r, CLint q);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4s)(CLshort s, CLshort t, CLshort r, CLshort q);$/;"	t	class:CL_GLFunctions
ptr_glTexCoord4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoord4sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glTexCoordPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexCoordPointer)(CLint size, CLenum type, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glTexEnvf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexEnvf)(CLenum target, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glTexEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexEnvfv)(CLenum target, CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glTexEnvi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexEnvi)(CLenum target, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glTexEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexEnviv)(CLenum target, CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glTexGend	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGend)(CLenum coord, CLenum pname, CLdouble param);$/;"	t	class:CL_GLFunctions
ptr_glTexGendv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGendv)(CLenum coord, CLenum pname, const CLdouble *params);$/;"	t	class:CL_GLFunctions
ptr_glTexGenf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGenf)(CLenum coord, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glTexGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGenfv)(CLenum coord, CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glTexGeni	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGeni)(CLenum coord, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glTexGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexGeniv)(CLenum coord, CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glTexImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexImage1D)(CLenum target, CLint level, CLint internalformat, CLsizei width, CLint border, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glTexImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexImage2D)(CLenum target, CLint level, CLint internalformat, CLsizei width, CLsizei height, CLint border, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glTexImage3DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexImage3DEXT)(CLenum target, CLint level, CLenum internalformat, CLsizei width, CLsizei height, CLsizei depth, CLint border, CLenum format, CLenum type, const void* pixels);$/;"	t	class:CL_GLFunctions
ptr_glTexParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexParameterf)(CLenum target, CLenum pname, CLfloat param);$/;"	t	class:CL_GLFunctions
ptr_glTexParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexParameterfv)(CLenum target, CLenum pname, const CLfloat *params);$/;"	t	class:CL_GLFunctions
ptr_glTexParameteri	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexParameteri)(CLenum target, CLenum pname, CLint param);$/;"	t	class:CL_GLFunctions
ptr_glTexParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexParameteriv)(CLenum target, CLenum pname, const CLint *params);$/;"	t	class:CL_GLFunctions
ptr_glTexSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexSubImage1D)(CLenum target, CLint level, CLint xoffset, CLsizei width, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glTexSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexSubImage2D)(CLenum target, CLint level, CLint xoffset, CLint yoffset, CLsizei width, CLsizei height, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glTexSubImage3DEXT	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTexSubImage3DEXT)(CLenum target, CLint level, CLint xoffset, CLint yoffset, CLint zoffset, CLsizei width, CLsizei height, CLsizei depth, CLenum format, CLenum type, const void *pixels);$/;"	t	class:CL_GLFunctions
ptr_glTranslated	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTranslated)(CLdouble x, CLdouble y, CLdouble z);$/;"	t	class:CL_GLFunctions
ptr_glTranslatef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glTranslatef)(CLfloat x, CLfloat y, CLfloat z);$/;"	t	class:CL_GLFunctions
ptr_glUniform1fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform1fARB)(CLint location, CLfloat v0);$/;"	t	class:CL_GLFunctions
ptr_glUniform1fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform1fvARB)(CLint location, CLsizei count, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform1iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform1iARB)(CLint location, CLint v0);$/;"	t	class:CL_GLFunctions
ptr_glUniform1ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform1ivARB)(CLint location, CLsizei count, const CLint *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform2fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform2fARB)(CLint location, CLfloat v0, CLfloat v1);$/;"	t	class:CL_GLFunctions
ptr_glUniform2fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform2fvARB)(CLint location, CLsizei count, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform2iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform2iARB)(CLint location, CLint v0, CLint v1);$/;"	t	class:CL_GLFunctions
ptr_glUniform2ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform2ivARB)(CLint location, CLsizei count, const CLint *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform3fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform3fARB)(CLint location, CLfloat v0, CLfloat v1, CLfloat v2);$/;"	t	class:CL_GLFunctions
ptr_glUniform3fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform3fvARB)(CLint location, CLsizei count, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform3iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform3iARB)(CLint location, CLint v0, CLint v1, CLint v2);$/;"	t	class:CL_GLFunctions
ptr_glUniform3ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform3ivARB)(CLint location, CLsizei count, const CLint *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform4fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform4fARB)(CLint location, CLfloat v0, CLfloat v1, CLfloat v2, CLfloat v3);$/;"	t	class:CL_GLFunctions
ptr_glUniform4fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform4fvARB)(CLint location, CLsizei count, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniform4iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform4iARB)(CLint location, CLint v0, CLint v1, CLint v2, CLint v3);$/;"	t	class:CL_GLFunctions
ptr_glUniform4ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniform4ivARB)(CLint location, CLsizei count, const CLint *value);$/;"	t	class:CL_GLFunctions
ptr_glUniformMatrix2fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniformMatrix2fvARB)(CLint location, CLsizei count, CLboolean transpose, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniformMatrix3fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniformMatrix3fvARB)(CLint location, CLsizei count, CLboolean transpose, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUniformMatrix4fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUniformMatrix4fvARB)(CLint location, CLsizei count, CLboolean transpose, const CLfloat *value);$/;"	t	class:CL_GLFunctions
ptr_glUnmapBufferARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef CLboolean (CL_GLFUNC *ptr_glUnmapBufferARB)(CLenum target);$/;"	t	class:CL_GLFunctions
ptr_glUseProgramObjectARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glUseProgramObjectARB)(CLuint programObj);$/;"	t	class:CL_GLFunctions
ptr_glValidateProgramARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glValidateProgramARB)(CLuint programObj);$/;"	t	class:CL_GLFunctions
ptr_glVertex2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2d)(CLdouble x, CLdouble y);$/;"	t	class:CL_GLFunctions
ptr_glVertex2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2f)(CLfloat x, CLfloat y);$/;"	t	class:CL_GLFunctions
ptr_glVertex2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2i)(CLint x, CLint y);$/;"	t	class:CL_GLFunctions
ptr_glVertex2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2s)(CLshort x, CLshort y);$/;"	t	class:CL_GLFunctions
ptr_glVertex2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex2sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3d)(CLdouble x, CLdouble y, CLdouble z);$/;"	t	class:CL_GLFunctions
ptr_glVertex3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3f)(CLfloat x, CLfloat y, CLfloat z);$/;"	t	class:CL_GLFunctions
ptr_glVertex3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3i)(CLint x, CLint y, CLint z);$/;"	t	class:CL_GLFunctions
ptr_glVertex3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3s)(CLshort x, CLshort y, CLshort z);$/;"	t	class:CL_GLFunctions
ptr_glVertex3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex3sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4d)(CLdouble x, CLdouble y, CLdouble z, CLdouble w);$/;"	t	class:CL_GLFunctions
ptr_glVertex4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4dv)(const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4f)(CLfloat x, CLfloat y, CLfloat z, CLfloat w);$/;"	t	class:CL_GLFunctions
ptr_glVertex4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4fv)(const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4i)(CLint x, CLint y, CLint z, CLint w);$/;"	t	class:CL_GLFunctions
ptr_glVertex4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4iv)(const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertex4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4s)(CLshort x, CLshort y, CLshort z, CLshort w);$/;"	t	class:CL_GLFunctions
ptr_glVertex4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertex4sv)(const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1dARB)(CLuint index, CLdouble v0);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1dvARB)(CLuint index, const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1fARB)(CLuint index, CLfloat v0);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1fvARB)(CLuint index, const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1sARB)(CLuint index, CLshort v0);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib1svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib1svARB)(CLuint index, const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2dARB)(CLuint index, CLdouble v0, CLdouble v1);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2dvARB)(CLuint index, const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2fARB)(CLuint index, CLfloat v0, CLfloat v1);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2fvARB)(CLuint index, const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2sARB)(CLuint index, CLshort v0, CLshort v1);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib2svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib2svARB)(CLuint index, const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3dARB)(CLuint index, CLdouble v0, CLdouble v1, CLdouble v2);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3dvARB)(CLuint index, const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3fARB)(CLuint index, CLfloat v0, CLfloat v1, CLfloat v2);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3fvARB)(CLuint index, const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3sARB)(CLuint index, CLshort v0, CLshort v1, CLshort v2);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib3svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib3svARB)(CLuint index, const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NbvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NbvARB)(CLuint index, const CLbyte *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NivARB)(CLuint index, const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NsvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NsvARB)(CLuint index, const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NubARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NubARB)(CLuint index, CLubyte x, CLubyte y, CLubyte z, CLubyte w);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NubvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NubvARB)(CLuint index, const CLubyte *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NuivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NuivARB)(CLuint index, const CLuint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4NusvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4NusvARB)(CLuint index, const CLushort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4bvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4bvARB)(CLuint index, const CLbyte *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4dARB)(CLuint index, CLdouble v0, CLdouble v1, CLdouble v2, CLdouble v3);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4dvARB)(CLuint index, const CLdouble *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4fARB)(CLuint index, CLfloat v0, CLfloat v1, CLfloat v2, CLfloat v3);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4fvARB)(CLuint index, const CLfloat *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4ivARB)(CLuint index, const CLint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4sARB)(CLuint index, CLshort v0, CLshort v1, CLshort v2, CLshort v3);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4svARB)(CLuint index, const CLshort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4ubvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4ubvARB)(CLuint index, const CLubyte *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4uivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4uivARB)(CLuint index, const CLuint *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttrib4usvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttrib4usvARB)(CLuint index, const CLushort *v);$/;"	t	class:CL_GLFunctions
ptr_glVertexAttribPointerARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexAttribPointerARB)(CLuint index, CLint size, CLenum type, CLboolean normalized, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glVertexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glVertexPointer)(CLint size, CLenum type, CLsizei stride, const void *pointer);$/;"	t	class:CL_GLFunctions
ptr_glViewport	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glViewport)(CLint x, CLint y, CLsizei width, CLsizei height);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2dARB)(CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2dvARB)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2fARB)(CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2fvARB)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2iARB)(CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2ivARB)(CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2sARB)(CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos2svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos2svARB)(CLshort const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3dARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3dARB)(CLdouble, CLdouble, CLdouble);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3dvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3dvARB)(CLdouble const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3fARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3fARB)(CLfloat, CLfloat, CLfloat);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3fvARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3fvARB)(CLfloat const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3iARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3iARB)(CLint, CLint, CLint);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3ivARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3ivARB)(CLint const *);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3sARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3sARB)(CLshort, CLshort, CLshort);$/;"	t	class:CL_GLFunctions
ptr_glWindowPos3svARB	/usr/include/ClanLib/GL/opengl_wrap.h	/^	typedef void (CL_GLFUNC *ptr_glWindowPos3svARB)(CLshort const *);$/;"	t	class:CL_GLFunctions
purple	/usr/include/ClanLib/Display/color.h	/^	static CL_Color purple;$/;"	m	class:CL_Color
pushAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPushAttrib pushAttrib;$/;"	m	class:CL_GLFunctions
pushClientAttrib	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPushClientAttrib pushClientAttrib;$/;"	m	class:CL_GLFunctions
pushMatrix	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPushMatrix pushMatrix;$/;"	m	class:CL_GLFunctions
pushName	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glPushName pushName;$/;"	m	class:CL_GLFunctions
quadratic_attenuation	/usr/include/ClanLib/GL/light_source.h	/^	float quadratic_attenuation;$/;"	m	class:CL_LightSource
quit_always	/usr/include/ClanLib/GUI/filedialog.h	/^		quit_always = 1,$/;"	e	enum:CL_FileDialog::Behavior
quit_file_selected	/usr/include/ClanLib/GUI/filedialog.h	/^		quit_file_selected = 2$/;"	e	enum:CL_FileDialog::Behavior
radiobutton	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_RadioButton *radiobutton;$/;"	m	class:CL_RadioButton_Silver
radius	/usr/include/ClanLib/Core/Math/circle.h	/^	double radius;$/;"	m	class:CL_Circlef
radius	/usr/include/ClanLib/Core/Math/circle.h	/^	int radius;$/;"	m	class:CL_Circle
radius	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	float radius;$/;"	m	class:CL_OutlineCircle
rasterPos2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2d rasterPos2d;$/;"	m	class:CL_GLFunctions
rasterPos2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2dv rasterPos2dv;$/;"	m	class:CL_GLFunctions
rasterPos2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2f rasterPos2f;$/;"	m	class:CL_GLFunctions
rasterPos2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2fv rasterPos2fv;$/;"	m	class:CL_GLFunctions
rasterPos2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2i rasterPos2i;$/;"	m	class:CL_GLFunctions
rasterPos2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2iv rasterPos2iv;$/;"	m	class:CL_GLFunctions
rasterPos2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2s rasterPos2s;$/;"	m	class:CL_GLFunctions
rasterPos2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos2sv rasterPos2sv;$/;"	m	class:CL_GLFunctions
rasterPos3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3d rasterPos3d;$/;"	m	class:CL_GLFunctions
rasterPos3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3dv rasterPos3dv;$/;"	m	class:CL_GLFunctions
rasterPos3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3f rasterPos3f;$/;"	m	class:CL_GLFunctions
rasterPos3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3fv rasterPos3fv;$/;"	m	class:CL_GLFunctions
rasterPos3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3i rasterPos3i;$/;"	m	class:CL_GLFunctions
rasterPos3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3iv rasterPos3iv;$/;"	m	class:CL_GLFunctions
rasterPos3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3s rasterPos3s;$/;"	m	class:CL_GLFunctions
rasterPos3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos3sv rasterPos3sv;$/;"	m	class:CL_GLFunctions
rasterPos4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4d rasterPos4d;$/;"	m	class:CL_GLFunctions
rasterPos4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4dv rasterPos4dv;$/;"	m	class:CL_GLFunctions
rasterPos4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4f rasterPos4f;$/;"	m	class:CL_GLFunctions
rasterPos4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4fv rasterPos4fv;$/;"	m	class:CL_GLFunctions
rasterPos4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4i rasterPos4i;$/;"	m	class:CL_GLFunctions
rasterPos4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4iv rasterPos4iv;$/;"	m	class:CL_GLFunctions
rasterPos4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4s rasterPos4s;$/;"	m	class:CL_GLFunctions
rasterPos4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRasterPos4sv rasterPos4sv;$/;"	m	class:CL_GLFunctions
readBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glReadBuffer readBuffer;$/;"	m	class:CL_GLFunctions
readPixels	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glReadPixels readPixels;$/;"	m	class:CL_GLFunctions
rectd	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectd rectd;$/;"	m	class:CL_GLFunctions
rectdv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectdv rectdv;$/;"	m	class:CL_GLFunctions
rectf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectf rectf;$/;"	m	class:CL_GLFunctions
rectfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectfv rectfv;$/;"	m	class:CL_GLFunctions
recti	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRecti recti;$/;"	m	class:CL_GLFunctions
rectiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectiv rectiv;$/;"	m	class:CL_GLFunctions
rects	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRects rects;$/;"	m	class:CL_GLFunctions
rectsv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRectsv rectsv;$/;"	m	class:CL_GLFunctions
red	/usr/include/ClanLib/Display/color.h	/^	float red;$/;"	m	class:CL_Colorf
red	/usr/include/ClanLib/Display/color.h	/^	static CL_Color red;$/;"	m	class:CL_Color
red	/usr/include/ClanLib/Display/surface.h	/^	double red;$/;"	m	struct:CL_Surface_DrawParams2
red	/usr/include/ClanLib/Display/surface.h	/^	double red[4];$/;"	m	struct:CL_Surface_DrawParams1
red_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	unsigned int red_mask;$/;"	m	class:CL_PixelFormat
ref_count	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	unsigned int ref_count;$/;"	m	class:CL_MutexSharedPtr_Generic
ref_count	/usr/include/ClanLib/Core/System/sharedptr.h	/^	unsigned int ref_count;$/;"	m	class:CL_SharedPtr_Generic
ref_count_netstream	/usr/include/ClanLib/Network/NetSession/inputsource_netstream.h	/^	bool ref_count_netstream;$/;"	m	class:CL_InputSource_NetStream
ref_count_netstream	/usr/include/ClanLib/Network/NetSession/outputsource_netstream.h	/^	bool ref_count_netstream;$/;"	m	class:CL_OutputSource_NetStream
ref_count_socket	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	/^	bool ref_count_socket;$/;"	m	class:CL_InputSource_Socket
ref_count_socket	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	/^	bool ref_count_socket;$/;"	m	class:CL_OutputSource_Socket
release	/usr/include/ClanLib/Core/System/sharedptr.h	/^	void release (void) $/;"	f	class:CL_SharedPtr
released	/usr/include/ClanLib/Display/input_event.h	/^		released          = 2,$/;"	e	enum:CL_InputEvent::Type
remove	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_GlyphBuffer &remove(int index)$/;"	f	class:CL_GlyphBuffer
remove_invis_both	/usr/include/ClanLib/Display/glyph_buffer.h	/^		void remove_invis_both(const CL_GlyphBuffer& gb)$/;"	f	struct:CL_GlyphBuffer::Range
renderMode	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRenderMode renderMode;$/;"	m	class:CL_GLFunctions
repeat_count	/usr/include/ClanLib/Display/input_event.h	/^	int repeat_count;$/;"	m	class:CL_InputEvent
repositioned	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	/^	bool repositioned;$/;"	m	class:CL_Menu_Silver
res	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	CL_Resource res;$/;"	m	class:CL_Raw
resetHistogram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glResetHistogramEXT resetHistogram;$/;"	m	class:CL_GLFunctions
resetMinmax	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glResetMinmaxEXT resetMinmax;$/;"	m	class:CL_GLFunctions
resize_handler	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_ComponentResizeHandler *resize_handler;$/;"	m	class:CL_Window_Silver
resource	/usr/include/ClanLib/Display/Collision/collision_outline.h	/^	CL_Resource resource;$/;"	m	class:CL_CollisionOutline
resource	/usr/include/ClanLib/Display/font.h	/^	CL_Resource resource;$/;"	m	class:CL_Font
resource	/usr/include/ClanLib/Display/sprite.h	/^	CL_Resource resource;$/;"	m	class:CL_Sprite
resource	/usr/include/ClanLib/Display/surface.h	/^	CL_Resource resource;$/;"	m	class:CL_Surface
resource	/usr/include/ClanLib/Display/text_styler.h	/^	CL_Resource resource;$/;"	m	class:CL_TextStyler
resource	/usr/include/ClanLib/Sound/soundbuffer.h	/^	CL_Resource resource;$/;"	m	class:CL_SoundBuffer
resources	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_Button_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_CheckBox_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_Frame_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_Image_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_Label_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_ListBox_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_MenuItem_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_MenuNode_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_RadioButton_Silver
resources	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_ResourceManager *resources;$/;"	m	class:CL_RichEdit_Silver
rewind	/usr/include/ClanLib/Sound/soundbuffer_session.h	/^	void rewind() { set_position(0); }$/;"	f	class:CL_SoundBuffer_Session
rgb555	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat rgb555;$/;"	m	class:CL_PixelFormat
rgb565	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat rgb565;$/;"	m	class:CL_PixelFormat
rgb888	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat rgb888;$/;"	m	class:CL_PixelFormat
rgba4444	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat rgba4444;$/;"	m	class:CL_PixelFormat
rgba8888	/usr/include/ClanLib/Display/pixel_format.h	/^	static CL_PixelFormat rgba8888;$/;"	m	class:CL_PixelFormat
richedit	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_RichEdit *richedit;$/;"	m	class:CL_RichEdit_Silver
right	/usr/include/ClanLib/Core/Math/rect.h	/^	float right;$/;"	m	class:CL_Rectf
right	/usr/include/ClanLib/Core/Math/rect.h	/^	int right;$/;"	m	class:CL_Rect
rosybrown	/usr/include/ClanLib/Display/color.h	/^	static CL_Color rosybrown;$/;"	m	class:CL_Color
rot_angle	/usr/include/ClanLib/Display/glyph_buffer.h	/^	float rot_angle;$/;"	m	class:CL_GlyphBuffer
rot_origin	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Origin rot_origin;$/;"	m	class:CL_GlyphBuffer
rot_x	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int rot_x;$/;"	m	class:CL_GlyphBuffer
rot_y	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int rot_y;$/;"	m	class:CL_GlyphBuffer
rotate	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Point rotate($/;"	f	class:CL_Point
rotate	/usr/include/ClanLib/Core/Math/point.h	/^	CL_Pointf rotate($/;"	f	class:CL_Pointf
rotate	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void rotate(float angle)$/;"	f	class:CL_GlyphBuffer
rotate_angle	/usr/include/ClanLib/Display/surface.h	/^	double rotate_angle;$/;"	m	struct:CL_Surface_DrawParams2
rotate_origin	/usr/include/ClanLib/Display/surface.h	/^	CL_Origin rotate_origin;$/;"	m	struct:CL_Surface_DrawParams2
rotate_pitch	/usr/include/ClanLib/Display/surface.h	/^	double rotate_pitch;$/;"	m	struct:CL_Surface_DrawParams2
rotate_x	/usr/include/ClanLib/Display/surface.h	/^	int rotate_x;$/;"	m	struct:CL_Surface_DrawParams2
rotate_y	/usr/include/ClanLib/Display/surface.h	/^	int rotate_y;$/;"	m	struct:CL_Surface_DrawParams2
rotate_yaw	/usr/include/ClanLib/Display/surface.h	/^	double rotate_yaw;$/;"	m	struct:CL_Surface_DrawParams2
rotated	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRotated rotated;$/;"	m	class:CL_GLFunctions
rotatef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glRotatef rotatef;$/;"	m	class:CL_GLFunctions
royalblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color royalblue;$/;"	m	class:CL_Color
run	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^	virtual void run()$/;"	f	class:CL_ThreadFunc_Runnable_v0
run	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	virtual void run()$/;"	f	class:CL_ThreadFunc_Runnable_v1
run	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	virtual void run()$/;"	f	class:CL_ThreadFunc_Runnable_v2
saddlebrown	/usr/include/ClanLib/Display/color.h	/^	static CL_Color saddlebrown;$/;"	m	class:CL_Color
salmon	/usr/include/ClanLib/Display/color.h	/^	static CL_Color salmon;$/;"	m	class:CL_Color
sampleCoverage	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSampleCoverageARB sampleCoverage;$/;"	m	class:CL_GLFunctions
sandybrown	/usr/include/ClanLib/Display/color.h	/^	static CL_Color sandybrown;$/;"	m	class:CL_Color
save	/usr/include/ClanLib/Display/Providers/provider_type_register.h	/^	virtual void save($/;"	f	class:CL_ProviderType_Register
scale_x	/usr/include/ClanLib/Display/glyph_buffer.h	/^	float scale_x;$/;"	m	class:CL_GlyphBuffer
scale_x	/usr/include/ClanLib/Display/surface.h	/^	double scale_x;$/;"	m	struct:CL_Surface_DrawParams2
scale_x	/usr/include/ClanLib/Display/text_styler.h	/^	float scale_x;$/;"	m	class:CL_TextStyler
scale_x_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float> scale_x_effects;$/;"	m	class:CL_GlyphBuffer
scale_y	/usr/include/ClanLib/Display/glyph_buffer.h	/^	float scale_y;$/;"	m	class:CL_GlyphBuffer
scale_y	/usr/include/ClanLib/Display/surface.h	/^	double scale_y;$/;"	m	struct:CL_Surface_DrawParams2
scale_y	/usr/include/ClanLib/Display/text_styler.h	/^	float scale_y;$/;"	m	class:CL_TextStyler
scale_y_effects	/usr/include/ClanLib/Display/glyph_buffer.h	/^	std::map<int, float> scale_y_effects;$/;"	m	class:CL_GlyphBuffer
scaled	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glScaled scaled;$/;"	m	class:CL_GLFunctions
scalef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glScalef scalef;$/;"	m	class:CL_GLFunctions
scissor	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glScissor scissor;$/;"	m	class:CL_GLFunctions
scroll_delta	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	int scroll_delta;$/;"	m	class:CL_ScrollBar_Silver
scrollbar	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_ScrollBar *scrollbar;$/;"	m	class:CL_ListBox_Silver
scrollbar	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_ScrollBar *scrollbar;$/;"	m	class:CL_RichEdit_Silver
scrollbar	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_ScrollBar *scrollbar;$/;"	m	class:CL_ScrollBar_Silver
scrollbar	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_ScrollBar *scrollbar;$/;"	m	class:CL_TreeView_Silver
seagreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color seagreen;$/;"	m	class:CL_Color
seashell	/usr/include/ClanLib/Display/color.h	/^	static CL_Color seashell;$/;"	m	class:CL_Color
secondaryColor3b	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3bEXT secondaryColor3b;$/;"	m	class:CL_GLFunctions
secondaryColor3bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3bvEXT secondaryColor3bv;$/;"	m	class:CL_GLFunctions
secondaryColor3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3dEXT secondaryColor3d;$/;"	m	class:CL_GLFunctions
secondaryColor3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3dvEXT secondaryColor3dv;$/;"	m	class:CL_GLFunctions
secondaryColor3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3fEXT secondaryColor3f;$/;"	m	class:CL_GLFunctions
secondaryColor3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3fvEXT secondaryColor3fv;$/;"	m	class:CL_GLFunctions
secondaryColor3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3iEXT secondaryColor3i;$/;"	m	class:CL_GLFunctions
secondaryColor3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3ivEXT secondaryColor3iv;$/;"	m	class:CL_GLFunctions
secondaryColor3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3sEXT secondaryColor3s;$/;"	m	class:CL_GLFunctions
secondaryColor3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3svEXT secondaryColor3sv;$/;"	m	class:CL_GLFunctions
secondaryColor3ub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3ubEXT secondaryColor3ub;$/;"	m	class:CL_GLFunctions
secondaryColor3ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3ubvEXT secondaryColor3ubv;$/;"	m	class:CL_GLFunctions
secondaryColor3ui	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3uiEXT secondaryColor3ui;$/;"	m	class:CL_GLFunctions
secondaryColor3uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3uivEXT secondaryColor3uiv;$/;"	m	class:CL_GLFunctions
secondaryColor3us	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3usEXT secondaryColor3us;$/;"	m	class:CL_GLFunctions
secondaryColor3usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColor3usvEXT secondaryColor3usv;$/;"	m	class:CL_GLFunctions
secondaryColorPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSecondaryColorPointerEXT secondaryColorPointer;$/;"	m	class:CL_GLFunctions
seek_cur	/usr/include/ClanLib/Core/IOData/inputsource.h	/^		seek_cur,	 \/\/ from current position$/;"	e	enum:CL_InputSource::SeekEnum
seek_end	/usr/include/ClanLib/Core/IOData/inputsource.h	/^		seek_end	 \/\/ from end of index$/;"	e	enum:CL_InputSource::SeekEnum
seek_set	/usr/include/ClanLib/Core/IOData/inputsource.h	/^		seek_set,	 \/\/ from beginning of index$/;"	e	enum:CL_InputSource::SeekEnum
selectBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSelectBuffer selectBuffer;$/;"	m	class:CL_GLFunctions
selected	/usr/include/ClanLib/GUI/listitem.h	/^	bool selected;$/;"	m	class:CL_ListItem
self	/usr/include/ClanLib/Core/System/threadfunc_v0.h	/^	Class *self;$/;"	m	class:CL_ThreadFunc_Runnable_v0
self	/usr/include/ClanLib/Core/System/threadfunc_v1.h	/^	Class *self;$/;"	m	class:CL_ThreadFunc_Runnable_v1
self	/usr/include/ClanLib/Core/System/threadfunc_v2.h	/^	Class *self;$/;"	m	class:CL_ThreadFunc_Runnable_v2
separableFilter2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glSeparableFilter2DEXT separableFilter2D;$/;"	m	class:CL_GLFunctions
set_alignment	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void set_alignment(CL_Origin origin, int x = 0, int y = 0)$/;"	f	class:CL_GlyphBuffer
set_alignment	/usr/include/ClanLib/Display/text_styler.h	/^	void set_alignment(CL_Origin origin, int x = 0, int y = 0)$/;"	f	class:CL_TextStyler
set_alpha	/usr/include/ClanLib/Display/color.h	/^	void set_alpha(unsigned int value) { color = (color & 0x00ffffff) | (value << 24); }$/;"	f	class:CL_Color
set_alpha_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_alpha_mask(unsigned int i) { alpha_mask = i; }$/;"	f	class:CL_PixelFormat
set_blue	/usr/include/ClanLib/Display/color.h	/^	void set_blue(unsigned int value) { color = (color & 0xffffff00) | value; }$/;"	f	class:CL_Color
set_blue_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_blue_mask(unsigned int i) { blue_mask = i; }$/;"	f	class:CL_PixelFormat
set_color	/usr/include/ClanLib/Display/color.h	/^	void set_color(unsigned int red, unsigned int green, unsigned int blue, unsigned int alpha = 255)$/;"	f	class:CL_Color
set_color	/usr/include/ClanLib/Display/sprite.h	/^	void set_color(const CL_Color& c) {set_color(float(c.get_red())\/255.0f,float(c.get_green())\/255.0f,float(c.get_blue())\/255.0f,float(c.get_alpha())\/255.0f);}$/;"	f	class:CL_Sprite
set_color	/usr/include/ClanLib/Display/surface.h	/^	void set_color(const CL_Color& c) {set_color(float(c.get_red())\/255.0f,float(c.get_green())\/255.0f,float(c.get_blue())\/255.0f,float(c.get_alpha())\/255.0f);}$/;"	f	class:CL_Surface
set_colorkey	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_colorkey(unsigned int i) { colorkey = i; }$/;"	f	class:CL_PixelFormat
set_depth	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_depth(int i) { depth = i; }$/;"	f	class:CL_PixelFormat
set_fuzz	/usr/include/ClanLib/Core/Math/vector2.h	/^	void set_fuzz() { FUZZ = 1.0; }$/;"	f	class:CL_Vector2
set_green	/usr/include/ClanLib/Display/color.h	/^	void set_green(unsigned int value) { color = (color & 0xffff00ff) | (value << 8); }$/;"	f	class:CL_Color
set_green_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_green_mask(unsigned int i) { green_mask = i; }$/;"	f	class:CL_PixelFormat
set_looping	/usr/include/ClanLib/Sound/soundprovider_session.h	/^	virtual bool set_looping(bool loop) { return false; }$/;"	f	class:CL_SoundProvider_Session
set_red	/usr/include/ClanLib/Display/color.h	/^	void set_red(unsigned int value) { color = (color & 0xff00ffff) | (value << 16); }$/;"	f	class:CL_Color
set_red_mask	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_red_mask(unsigned int i) { red_mask = i; }$/;"	f	class:CL_PixelFormat
set_rotation_hotspot	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void set_rotation_hotspot(CL_Origin origin, int x = 0, int y = 0)$/;"	f	class:CL_GlyphBuffer
set_scale	/usr/include/ClanLib/Display/glyph_buffer.h	/^	void set_scale(float x, float y)$/;"	f	class:CL_GlyphBuffer
set_scale	/usr/include/ClanLib/Display/text_styler.h	/^	void set_scale(float x, float y)$/;"	f	class:CL_TextStyler
set_size	/usr/include/ClanLib/Core/Math/rect.h	/^	void set_size(const CL_Size &size)$/;"	f	class:CL_Rect
set_size	/usr/include/ClanLib/Core/Math/rect.h	/^	void set_size(const CL_Size &size)$/;"	f	class:CL_Rectf
set_type	/usr/include/ClanLib/Display/pixel_format.h	/^	void set_type(CL_PixelFormatType new_type) { type = new_type; }$/;"	f	class:CL_PixelFormat
sf_16bit_signed	/usr/include/ClanLib/Sound/soundformat.h	/^	sf_16bit_signed$/;"	e	enum:CL_SoundFormat
sf_8bit_signed	/usr/include/ClanLib/Sound/soundformat.h	/^	sf_8bit_signed,$/;"	e	enum:CL_SoundFormat
shadeModel	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glShadeModel shadeModel;$/;"	m	class:CL_GLFunctions
shaderSource	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glShaderSourceARB shaderSource;$/;"	m	class:CL_GLFunctions
show_blank	/usr/include/ClanLib/Display/sprite.h	/^		show_blank, show_last_frame, show_first_frame$/;"	e	enum:CL_Sprite::ShowOnFinish
show_cursor	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	bool show_cursor;$/;"	m	class:CL_InputBox_StyleBase
show_first_frame	/usr/include/ClanLib/Display/sprite.h	/^		show_blank, show_last_frame, show_first_frame$/;"	e	enum:CL_Sprite::ShowOnFinish
show_last_frame	/usr/include/ClanLib/Display/sprite.h	/^		show_blank, show_last_frame, show_first_frame$/;"	e	enum:CL_Sprite::ShowOnFinish
shutdown_receive	/usr/include/ClanLib/Network/Socket/socket.h	/^		shutdown_receive,$/;"	e	enum:CL_Socket::ShutdownHow
shutdown_send	/usr/include/ClanLib/Network/Socket/socket.h	/^		shutdown_send$/;"	e	enum:CL_Socket::ShutdownHow
sienna	/usr/include/ClanLib/Display/color.h	/^	static CL_Color sienna;$/;"	m	class:CL_Color
signal_ref_count	/usr/include/ClanLib/Signals/slot_generic.h	/^	int signal_ref_count;$/;"	m	class:CL_Slot_Generic
signal_timer	/usr/include/ClanLib/Core/System/timer.h	/^	CL_Signal_v0 signal_timer;$/;"	m	class:CL_Timer
silver	/usr/include/ClanLib/Display/color.h	/^	static CL_Color silver;$/;"	m	class:CL_Color
size	/usr/include/ClanLib/GL/program_uniform.h	/^	int size;$/;"	m	class:CL_ProgramUniform
size	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	int size()$/;"	f	class:CL_SlotBuffer_v0
size	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	int size()$/;"	f	class:CL_SlotBuffer_v1
skyblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color skyblue;$/;"	m	class:CL_Color
slateblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color slateblue;$/;"	m	class:CL_Color
slategray	/usr/include/ClanLib/Display/color.h	/^	static CL_Color slategray;$/;"	m	class:CL_Color
slategrey	/usr/include/ClanLib/Display/color.h	/^	static CL_Color slategrey;$/;"	m	class:CL_Color
slot	/usr/include/ClanLib/Signals/slotbuffer_v0.h	/^	CL_Slot slot;$/;"	m	class:CL_SlotBuffer_v0
slot	/usr/include/ClanLib/Signals/slotbuffer_v1.h	/^	CL_Slot slot;$/;"	m	class:CL_SlotBuffer_v1
slot_activity	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	/^	CL_Slot slot_activity;$/;"	m	class:CL_InputBox_Silver
slot_font_change	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_Slot slot_font_change;$/;"	m	class:CL_Label_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_Button_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_CheckBox_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_Image_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_InputBox_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_Label_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_MenuItem_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_RadioButton_Silver
slot_get_preferred_size	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^	CL_Slot slot_get_preferred_size;$/;"	m	class:CL_TreeItem_Silver
slot_input_down	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	CL_Slot slot_input_down;$/;"	m	class:CL_InputBox_StyleBase
slot_input_up	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	CL_Slot slot_input_up;$/;"	m	class:CL_InputBox_StyleBase
slot_mouse_move	/usr/include/ClanLib/GUI/inputbox_stylebase.h	/^	CL_Slot slot_mouse_move;$/;"	m	class:CL_InputBox_StyleBase
slot_paint	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_Button_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_CheckBox_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_Frame_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_Image_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/inputbox_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_InputBox_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/label_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_Label_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_MenuItem_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_ProgressBar_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_RadioButton_Silver
slot_paint	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^	CL_Slot slot_paint;$/;"	m	class:CL_TreeItem_Silver
slot_ref_count	/usr/include/ClanLib/Signals/slot_generic.h	/^	int slot_ref_count;$/;"	m	class:CL_Slot_Generic
slot_resize	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_Slot slot_resize;$/;"	m	class:CL_Frame_Silver
slot_set_options	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Slot slot_set_options;$/;"	m	class:CL_Button_Silver
slot_set_options	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Slot slot_set_options;$/;"	m	class:CL_CheckBox_Silver
slot_set_options	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_Slot slot_set_options;$/;"	m	class:CL_Frame_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_ListBox_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_MenuNode_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_Menu_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_RichEdit_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_ScrollBar_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_TreeView_Silver
slots	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_SlotContainer slots;$/;"	m	class:CL_Window_Silver
slots	/usr/include/ClanLib/Signals/signal_v0.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v0::CL_Signal_v0_Generic
slots	/usr/include/ClanLib/Signals/signal_v1.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v1::CL_Signal_v1_Generic
slots	/usr/include/ClanLib/Signals/signal_v2.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v2::CL_Signal_v2_Generic
slots	/usr/include/ClanLib/Signals/signal_v3.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v3::CL_Signal_v3_Generic
slots	/usr/include/ClanLib/Signals/signal_v4.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v4::CL_Signal_v4_Generic
slots	/usr/include/ClanLib/Signals/signal_v5.h	/^		std::list<Slot> slots;$/;"	m	class:CL_Signal_v5::CL_Signal_v5_Generic
slots	/usr/include/ClanLib/Signals/slot_container.h	/^	std::list<CL_Slot> slots;$/;"	m	class:CL_SlotContainer
snow	/usr/include/ClanLib/Display/color.h	/^	static CL_Color snow;$/;"	m	class:CL_Color
socket	/usr/include/ClanLib/Network/Socket/inputsource_socket.h	/^	CL_Socket_Generic *socket;$/;"	m	class:CL_InputSource_Socket
socket	/usr/include/ClanLib/Network/Socket/outputsource_socket.h	/^	CL_Socket_Generic *socket;$/;"	m	class:CL_OutputSource_Socket
specular	/usr/include/ClanLib/GL/light_source.h	/^	float specular[4];$/;"	m	class:CL_LightSource
spot_cutoff	/usr/include/ClanLib/GL/light_source.h	/^	float spot_cutoff;$/;"	m	class:CL_LightSource
spot_direction	/usr/include/ClanLib/GL/light_source.h	/^	CL_Vector spot_direction;$/;"	m	class:CL_LightSource
spot_exponent	/usr/include/ClanLib/GL/light_source.h	/^	float spot_exponent;$/;"	m	class:CL_LightSource
springgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color springgreen;$/;"	m	class:CL_Color
srcHeight	/usr/include/ClanLib/Display/surface.h	/^	int srcHeight;$/;"	m	struct:CL_Surface_DrawParams2
srcWidth	/usr/include/ClanLib/Display/surface.h	/^	int srcWidth;$/;"	m	struct:CL_Surface_DrawParams2
srcX	/usr/include/ClanLib/Display/surface.h	/^	int srcX;$/;"	m	struct:CL_Surface_DrawParams2
srcX	/usr/include/ClanLib/Display/surface.h	/^	int srcX[4];$/;"	m	struct:CL_Surface_DrawParams1
srcY	/usr/include/ClanLib/Display/surface.h	/^	int srcY;$/;"	m	struct:CL_Surface_DrawParams2
srcY	/usr/include/ClanLib/Display/surface.h	/^	int srcY[4];$/;"	m	struct:CL_Surface_DrawParams1
stack	/usr/include/ClanLib/Core/IOData/inputsource_file.h	/^	std::stack<int> stack;$/;"	m	class:CL_InputSource_File
start	/usr/include/ClanLib/Display/Collision/outline_circle.h	/^	unsigned int start;$/;"	m	class:CL_OutlineCircle
start	/usr/include/ClanLib/Display/glyph_buffer.h	/^		int start;$/;"	m	struct:CL_GlyphBuffer::Range
steelblue	/usr/include/ClanLib/Display/color.h	/^	static CL_Color steelblue;$/;"	m	class:CL_Color
stencilFunc	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glStencilFunc stencilFunc;$/;"	m	class:CL_GLFunctions
stencilFuncSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glStencilFuncSeparateATI stencilFuncSeparate;$/;"	m	class:CL_GLFunctions
stencilMask	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glStencilMask stencilMask;$/;"	m	class:CL_GLFunctions
stencilOp	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glStencilOp stencilOp;$/;"	m	class:CL_GLFunctions
stencilOpSeparate	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glStencilOpSeparateATI stencilOpSeparate;$/;"	m	class:CL_GLFunctions
stencil_always	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_always$/;"	e	enum:CL_StencilFunc
stencil_decr	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_decr,$/;"	e	enum:CL_StencilOp
stencil_equal	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_equal,$/;"	e	enum:CL_StencilFunc
stencil_gequal	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_gequal,$/;"	e	enum:CL_StencilFunc
stencil_greater	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_greater,$/;"	e	enum:CL_StencilFunc
stencil_incr	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_incr,$/;"	e	enum:CL_StencilOp
stencil_invert	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_invert$/;"	e	enum:CL_StencilOp
stencil_keep	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_keep,$/;"	e	enum:CL_StencilOp
stencil_lequal	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_lequal,$/;"	e	enum:CL_StencilFunc
stencil_less	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_less,$/;"	e	enum:CL_StencilFunc
stencil_never	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_never,$/;"	e	enum:CL_StencilFunc
stencil_notequal	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_notequal,$/;"	e	enum:CL_StencilFunc
stencil_replace	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_replace,$/;"	e	enum:CL_StencilOp
stencil_zero	/usr/include/ClanLib/Display/stencil_func.h	/^	stencil_zero,$/;"	e	enum:CL_StencilOp
str	/usr/include/ClanLib/Display/input_event.h	/^	std::string str;$/;"	m	class:CL_InputEvent
str	/usr/include/ClanLib/GUI/listitem.h	/^	std::string str;$/;"	m	class:CL_ListItem
str	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^		std::string str;$/;"	m	struct:CL_RichEdit_Paragraph::Item
str_data	/usr/include/ClanLib/Core/IOData/inputsource_memory.h	/^	std::string str_data;$/;"	m	class:CL_InputSource_Memory
stretch	/usr/include/ClanLib/GUI/image.h	/^		stretch,$/;"	e	enum:CL_Image::Mode
stretch	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^		stretch,$/;"	e	enum:CL_Frame_Silver::Mode
style	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_Button_Silver
style	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_CheckBox_Silver
style	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_Frame_Silver
style	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_ListBox_Silver
style	/usr/include/ClanLib/GUIStyleSilver/menu_node_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_MenuNode_Silver
style	/usr/include/ClanLib/GUIStyleSilver/menu_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_Menu_Silver
style	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_ProgressBar_Silver
style	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_RadioButton_Silver
style	/usr/include/ClanLib/GUIStyleSilver/richedit_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_RichEdit_Silver
style	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_ScrollBar_Silver
style	/usr/include/ClanLib/GUIStyleSilver/treeitem_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_TreeItem_Silver
style	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_TreeView_Silver
style	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_StyleManager_Silver *style;$/;"	m	class:CL_Window_Silver
sub_circles	/usr/include/ClanLib/Display/Collision/contour.h	/^	std::vector<CL_OutlineCircle> sub_circles;$/;"	m	class:CL_Contour
sub_pixel_accuracy	/usr/include/ClanLib/Display/surface.h	/^	bool sub_pixel_accuracy;$/;"	m	struct:CL_Surface_DrawParams1
sub_pixel_accuracy	/usr/include/ClanLib/Display/surface.h	/^	bool sub_pixel_accuracy;$/;"	m	struct:CL_Surface_DrawParams2
sur_background	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	CL_Surface *sur_background;$/;"	m	class:CL_ProgressBar_Silver
sur_checked	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Surface *sur_checked;$/;"	m	class:CL_CheckBox_Silver
sur_checked	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Surface *sur_checked;$/;"	m	class:CL_MenuItem_Silver
sur_checked	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Surface *sur_checked;$/;"	m	class:CL_RadioButton_Silver
sur_checked_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Surface *sur_checked_disabled;$/;"	m	class:CL_CheckBox_Silver
sur_checked_disabled	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Surface *sur_checked_disabled;$/;"	m	class:CL_RadioButton_Silver
sur_disabled	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Surface *sur_disabled;$/;"	m	class:CL_Button_Silver
sur_down	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Surface *sur_down;$/;"	m	class:CL_Button_Silver
sur_foreground	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	CL_Surface *sur_foreground;$/;"	m	class:CL_ProgressBar_Silver
sur_highlighted	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Surface *sur_highlighted;$/;"	m	class:CL_Button_Silver
sur_icon	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Surface *sur_icon;$/;"	m	class:CL_MenuItem_Silver
sur_surface	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^	CL_Surface *sur_surface;$/;"	m	class:CL_Frame_Silver
sur_unchecked	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Surface *sur_unchecked;$/;"	m	class:CL_CheckBox_Silver
sur_unchecked	/usr/include/ClanLib/GUIStyleSilver/menu_item_silver.h	/^	CL_Surface *sur_unchecked;$/;"	m	class:CL_MenuItem_Silver
sur_unchecked	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Surface *sur_unchecked;$/;"	m	class:CL_RadioButton_Silver
sur_unchecked_disabled	/usr/include/ClanLib/GUIStyleSilver/checkbox_silver.h	/^	CL_Surface *sur_unchecked_disabled;$/;"	m	class:CL_CheckBox_Silver
sur_unchecked_disabled	/usr/include/ClanLib/GUIStyleSilver/radiobutton_silver.h	/^	CL_Surface *sur_unchecked_disabled;$/;"	m	class:CL_RadioButton_Silver
sur_up	/usr/include/ClanLib/GUIStyleSilver/button_silver.h	/^	CL_Surface *sur_up;$/;"	m	class:CL_Button_Silver
susp_accum	/usr/include/ClanLib/Core/System/system.h	/^	static unsigned int susp_accum;$/;"	m	class:CL_System
susp_cnt	/usr/include/ClanLib/Core/System/system.h	/^	static unsigned int susp_cnt;$/;"	m	class:CL_System
susp_start	/usr/include/ClanLib/Core/System/system.h	/^	static unsigned int susp_start;$/;"	m	class:CL_System
tablet	/usr/include/ClanLib/Display/input_device.h	/^                tablet,$/;"	e	enum:CL_InputDevice::Type
tan	/usr/include/ClanLib/Display/color.h	/^	static CL_Color tan;$/;"	m	class:CL_Color
tcp	/usr/include/ClanLib/Network/Socket/socket.h	/^		tcp,$/;"	e	enum:CL_Socket::Type
teal	/usr/include/ClanLib/Display/color.h	/^	static CL_Color teal;$/;"	m	class:CL_Color
texCoord1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1d texCoord1d;$/;"	m	class:CL_GLFunctions
texCoord1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1dv texCoord1dv;$/;"	m	class:CL_GLFunctions
texCoord1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1f texCoord1f;$/;"	m	class:CL_GLFunctions
texCoord1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1fv texCoord1fv;$/;"	m	class:CL_GLFunctions
texCoord1i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1i texCoord1i;$/;"	m	class:CL_GLFunctions
texCoord1iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1iv texCoord1iv;$/;"	m	class:CL_GLFunctions
texCoord1s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1s texCoord1s;$/;"	m	class:CL_GLFunctions
texCoord1sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord1sv texCoord1sv;$/;"	m	class:CL_GLFunctions
texCoord2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2d texCoord2d;$/;"	m	class:CL_GLFunctions
texCoord2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2dv texCoord2dv;$/;"	m	class:CL_GLFunctions
texCoord2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2f texCoord2f;$/;"	m	class:CL_GLFunctions
texCoord2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2fv texCoord2fv;$/;"	m	class:CL_GLFunctions
texCoord2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2i texCoord2i;$/;"	m	class:CL_GLFunctions
texCoord2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2iv texCoord2iv;$/;"	m	class:CL_GLFunctions
texCoord2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2s texCoord2s;$/;"	m	class:CL_GLFunctions
texCoord2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord2sv texCoord2sv;$/;"	m	class:CL_GLFunctions
texCoord3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3d texCoord3d;$/;"	m	class:CL_GLFunctions
texCoord3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3dv texCoord3dv;$/;"	m	class:CL_GLFunctions
texCoord3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3f texCoord3f;$/;"	m	class:CL_GLFunctions
texCoord3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3fv texCoord3fv;$/;"	m	class:CL_GLFunctions
texCoord3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3i texCoord3i;$/;"	m	class:CL_GLFunctions
texCoord3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3iv texCoord3iv;$/;"	m	class:CL_GLFunctions
texCoord3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3s texCoord3s;$/;"	m	class:CL_GLFunctions
texCoord3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord3sv texCoord3sv;$/;"	m	class:CL_GLFunctions
texCoord4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4d texCoord4d;$/;"	m	class:CL_GLFunctions
texCoord4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4dv texCoord4dv;$/;"	m	class:CL_GLFunctions
texCoord4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4f texCoord4f;$/;"	m	class:CL_GLFunctions
texCoord4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4fv texCoord4fv;$/;"	m	class:CL_GLFunctions
texCoord4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4i texCoord4i;$/;"	m	class:CL_GLFunctions
texCoord4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4iv texCoord4iv;$/;"	m	class:CL_GLFunctions
texCoord4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4s texCoord4s;$/;"	m	class:CL_GLFunctions
texCoord4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoord4sv texCoord4sv;$/;"	m	class:CL_GLFunctions
texCoordPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexCoordPointer texCoordPointer;$/;"	m	class:CL_GLFunctions
texEnvf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexEnvf texEnvf;$/;"	m	class:CL_GLFunctions
texEnvfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexEnvfv texEnvfv;$/;"	m	class:CL_GLFunctions
texEnvi	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexEnvi texEnvi;$/;"	m	class:CL_GLFunctions
texEnviv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexEnviv texEnviv;$/;"	m	class:CL_GLFunctions
texGend	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGend texGend;$/;"	m	class:CL_GLFunctions
texGendv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGendv texGendv;$/;"	m	class:CL_GLFunctions
texGenf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGenf texGenf;$/;"	m	class:CL_GLFunctions
texGenfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGenfv texGenfv;$/;"	m	class:CL_GLFunctions
texGeni	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGeni texGeni;$/;"	m	class:CL_GLFunctions
texGeniv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexGeniv texGeniv;$/;"	m	class:CL_GLFunctions
texImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexImage1D texImage1D;$/;"	m	class:CL_GLFunctions
texImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexImage2D texImage2D;$/;"	m	class:CL_GLFunctions
texImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexImage3DEXT texImage3D;$/;"	m	class:CL_GLFunctions
texParameterf	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexParameterf texParameterf;$/;"	m	class:CL_GLFunctions
texParameterfv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexParameterfv texParameterfv;$/;"	m	class:CL_GLFunctions
texParameteri	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexParameteri texParameteri;$/;"	m	class:CL_GLFunctions
texParameteriv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexParameteriv texParameteriv;$/;"	m	class:CL_GLFunctions
texSubImage1D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexSubImage1D texSubImage1D;$/;"	m	class:CL_GLFunctions
texSubImage2D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexSubImage2D texSubImage2D;$/;"	m	class:CL_GLFunctions
texSubImage3D	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTexSubImage3DEXT texSubImage3D;$/;"	m	class:CL_GLFunctions
textarea_width	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	int textarea_width;$/;"	m	class:CL_RichEdit_Paragraph
thistle	/usr/include/ClanLib/Display/color.h	/^	static CL_Color thistle;$/;"	m	class:CL_Color
tile	/usr/include/ClanLib/GUI/image.h	/^		tile$/;"	e	enum:CL_Image::Mode
tile	/usr/include/ClanLib/GUIStyleSilver/frame_silver.h	/^		tile$/;"	e	enum:CL_Frame_Silver::Mode
timer_scroll	/usr/include/ClanLib/GUIStyleSilver/scrollbar_silver.h	/^	CL_Timer timer_scroll;$/;"	m	class:CL_ScrollBar_Silver
titlebar_height	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	int titlebar_height;$/;"	m	class:CL_Window_Silver
to	/usr/include/ClanLib/Core/System/clanstring.h	/^	static std::string to(const T& any)$/;"	f	class:CL_String
tomato	/usr/include/ClanLib/Display/color.h	/^	static CL_Color tomato;$/;"	m	class:CL_Color
top	/usr/include/ClanLib/Core/Math/rect.h	/^	float top;$/;"	m	class:CL_Rectf
top	/usr/include/ClanLib/Core/Math/rect.h	/^	int top;$/;"	m	class:CL_Rect
top_left	/usr/include/ClanLib/Display/gradient.h	/^	CL_Color top_left;$/;"	m	class:CL_Gradient
top_right	/usr/include/ClanLib/Display/gradient.h	/^	CL_Color top_right;$/;"	m	class:CL_Gradient
total_height	/usr/include/ClanLib/GUI/richedit_paragraph.h	/^	int total_height;$/;"	m	class:CL_RichEdit_Paragraph
trans_origin	/usr/include/ClanLib/Display/glyph_buffer.h	/^	CL_Origin trans_origin;$/;"	m	class:CL_GlyphBuffer
trans_origin	/usr/include/ClanLib/Display/text_styler.h	/^	CL_Origin trans_origin;$/;"	m	class:CL_TextStyler
trans_x	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int trans_x;$/;"	m	class:CL_GlyphBuffer
trans_x	/usr/include/ClanLib/Display/text_styler.h	/^	int trans_x;$/;"	m	class:CL_TextStyler
trans_y	/usr/include/ClanLib/Display/glyph_buffer.h	/^	int trans_y;$/;"	m	class:CL_GlyphBuffer
trans_y	/usr/include/ClanLib/Display/text_styler.h	/^	int trans_y;$/;"	m	class:CL_TextStyler
translate_origin	/usr/include/ClanLib/Display/surface.h	/^	CL_Origin translate_origin;$/;"	m	struct:CL_Surface_DrawParams2
translate_x	/usr/include/ClanLib/Display/surface.h	/^	int translate_x;$/;"	m	struct:CL_Surface_DrawParams2
translate_y	/usr/include/ClanLib/Display/surface.h	/^	int translate_y;$/;"	m	struct:CL_Surface_DrawParams2
translated	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTranslated translated;$/;"	m	class:CL_GLFunctions
translatef	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glTranslatef translatef;$/;"	m	class:CL_GLFunctions
treeview	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	CL_TreeView *treeview;$/;"	m	class:CL_TreeView_Silver
turquoise	/usr/include/ClanLib/Display/color.h	/^	static CL_Color turquoise;$/;"	m	class:CL_Color
type	/usr/include/ClanLib/Display/input_event.h	/^	Type type;$/;"	m	class:CL_InputEvent
type	/usr/include/ClanLib/Display/pixel_format.h	/^	CL_PixelFormatType type;$/;"	m	class:CL_PixelFormat
type	/usr/include/ClanLib/GL/program_uniform.h	/^	int type;$/;"	m	class:CL_ProgramUniform
type	/usr/include/ClanLib/GUI/component_type.h	/^		EDatatype type;$/;"	m	struct:CL_ComponentType::SOptionType
types	/usr/include/ClanLib/Display/Providers/provider_factory.h	/^	static std::map<std::string, CL_ProviderType *> types;$/;"	m	class:CL_ProviderFactory
types	/usr/include/ClanLib/Sound/SoundProviders/soundprovider_factory.h	/^	static std::map<std::string, CL_SoundProviderType *> types;$/;"	m	class:CL_SoundProviderFactory
udp	/usr/include/ClanLib/Network/Socket/socket.h	/^		udp$/;"	e	enum:CL_Socket::Type
uniform1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform1fARB uniform1f;$/;"	m	class:CL_GLFunctions
uniform1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform1fvARB uniform1fv;$/;"	m	class:CL_GLFunctions
uniform1i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform1iARB uniform1i;$/;"	m	class:CL_GLFunctions
uniform1iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform1ivARB uniform1iv;$/;"	m	class:CL_GLFunctions
uniform2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform2fARB uniform2f;$/;"	m	class:CL_GLFunctions
uniform2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform2fvARB uniform2fv;$/;"	m	class:CL_GLFunctions
uniform2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform2iARB uniform2i;$/;"	m	class:CL_GLFunctions
uniform2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform2ivARB uniform2iv;$/;"	m	class:CL_GLFunctions
uniform3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform3fARB uniform3f;$/;"	m	class:CL_GLFunctions
uniform3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform3fvARB uniform3fv;$/;"	m	class:CL_GLFunctions
uniform3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform3iARB uniform3i;$/;"	m	class:CL_GLFunctions
uniform3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform3ivARB uniform3iv;$/;"	m	class:CL_GLFunctions
uniform4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform4fARB uniform4f;$/;"	m	class:CL_GLFunctions
uniform4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform4fvARB uniform4fv;$/;"	m	class:CL_GLFunctions
uniform4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform4iARB uniform4i;$/;"	m	class:CL_GLFunctions
uniform4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniform4ivARB uniform4iv;$/;"	m	class:CL_GLFunctions
uniformMatrix2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniformMatrix2fvARB uniformMatrix2fv;$/;"	m	class:CL_GLFunctions
uniformMatrix3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniformMatrix3fvARB uniformMatrix3fv;$/;"	m	class:CL_GLFunctions
uniformMatrix4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUniformMatrix4fvARB uniformMatrix4fv;$/;"	m	class:CL_GLFunctions
uniquify	/usr/include/ClanLib/Core/System/lazycopyptr.h	/^	void uniquify() {if (ptr.get_ref_count() > 1) ptr = CL_SharedPtr<T, U>((T*)(ptr->clone()));}$/;"	f	class:CL_LazyCopyPtr
unknown	/usr/include/ClanLib/Display/input_device.h	/^                unknown$/;"	e	enum:CL_InputDevice::Type
unmapBuffer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUnmapBufferARB unmapBuffer;$/;"	m	class:CL_GLFunctions
up	/usr/include/ClanLib/GL/viewpoint.h	/^	CL_Vector up;$/;"	m	class:CL_Viewpoint
useProgram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glUseProgramObjectARB useProgram;$/;"	m	class:CL_GLFunctions
user_data	/usr/include/ClanLib/GUI/listitem.h	/^	int user_data;$/;"	m	class:CL_ListItem
user_data	/usr/include/ClanLib/Signals/slot_v0.h	/^	UserData user_data;$/;"	m	class:CL_UserDataFunctionSlot_v0
user_data	/usr/include/ClanLib/Signals/slot_v0.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v0
user_data	/usr/include/ClanLib/Signals/slot_v1.h	/^	UserData user_data;$/;"	m	class:CL_UserDataFunctionSlot_v1
user_data	/usr/include/ClanLib/Signals/slot_v1.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v1
user_data	/usr/include/ClanLib/Signals/slot_v2.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v2
user_data	/usr/include/ClanLib/Signals/slot_v3.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v3
user_data	/usr/include/ClanLib/Signals/slot_v4.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v4
user_data	/usr/include/ClanLib/Signals/slot_v5.h	/^	UserData user_data;$/;"	m	class:CL_UserDataMethodSlot_v5
validateProgram	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glValidateProgramARB validateProgram;$/;"	m	class:CL_GLFunctions
value	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	bool value;$/;"	m	class:CL_Boolean
value	/usr/include/ClanLib/Core/Resources/resourcetype_boolean.h	/^	bool value;$/;"	m	class:CL_ResourceData_Boolean
value	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^	float value;$/;"	m	class:CL_Float
value	/usr/include/ClanLib/Core/Resources/resourcetype_float.h	/^	float value;$/;"	m	class:CL_ResourceData_Float
value	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	int value;$/;"	m	class:CL_Integer
value	/usr/include/ClanLib/Core/Resources/resourcetype_integer.h	/^	int value;$/;"	m	class:CL_ResourceData_Integer
value	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	std::vector<unsigned char> value;$/;"	m	class:CL_ResourceData_Raw
value	/usr/include/ClanLib/Core/Resources/resourcetype_string.h	/^	std::string value;$/;"	m	class:CL_ResourceData_String
verify	/usr/include/ClanLib/Display/glyph_buffer.h	67;"	d
vertex2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2d vertex2d;$/;"	m	class:CL_GLFunctions
vertex2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2dv vertex2dv;$/;"	m	class:CL_GLFunctions
vertex2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2f vertex2f;$/;"	m	class:CL_GLFunctions
vertex2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2fv vertex2fv;$/;"	m	class:CL_GLFunctions
vertex2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2i vertex2i;$/;"	m	class:CL_GLFunctions
vertex2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2iv vertex2iv;$/;"	m	class:CL_GLFunctions
vertex2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2s vertex2s;$/;"	m	class:CL_GLFunctions
vertex2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex2sv vertex2sv;$/;"	m	class:CL_GLFunctions
vertex3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3d vertex3d;$/;"	m	class:CL_GLFunctions
vertex3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3dv vertex3dv;$/;"	m	class:CL_GLFunctions
vertex3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3f vertex3f;$/;"	m	class:CL_GLFunctions
vertex3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3fv vertex3fv;$/;"	m	class:CL_GLFunctions
vertex3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3i vertex3i;$/;"	m	class:CL_GLFunctions
vertex3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3iv vertex3iv;$/;"	m	class:CL_GLFunctions
vertex3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3s vertex3s;$/;"	m	class:CL_GLFunctions
vertex3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex3sv vertex3sv;$/;"	m	class:CL_GLFunctions
vertex4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4d vertex4d;$/;"	m	class:CL_GLFunctions
vertex4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4dv vertex4dv;$/;"	m	class:CL_GLFunctions
vertex4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4f vertex4f;$/;"	m	class:CL_GLFunctions
vertex4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4fv vertex4fv;$/;"	m	class:CL_GLFunctions
vertex4i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4i vertex4i;$/;"	m	class:CL_GLFunctions
vertex4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4iv vertex4iv;$/;"	m	class:CL_GLFunctions
vertex4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4s vertex4s;$/;"	m	class:CL_GLFunctions
vertex4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertex4sv vertex4sv;$/;"	m	class:CL_GLFunctions
vertexAttrib1d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1dARB vertexAttrib1d;$/;"	m	class:CL_GLFunctions
vertexAttrib1dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1dvARB vertexAttrib1dv;$/;"	m	class:CL_GLFunctions
vertexAttrib1f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1fARB vertexAttrib1f;$/;"	m	class:CL_GLFunctions
vertexAttrib1fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1fvARB vertexAttrib1fv;$/;"	m	class:CL_GLFunctions
vertexAttrib1s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1sARB vertexAttrib1s;$/;"	m	class:CL_GLFunctions
vertexAttrib1sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib1svARB vertexAttrib1sv;$/;"	m	class:CL_GLFunctions
vertexAttrib2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2dARB vertexAttrib2d;$/;"	m	class:CL_GLFunctions
vertexAttrib2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2dvARB vertexAttrib2dv;$/;"	m	class:CL_GLFunctions
vertexAttrib2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2fARB vertexAttrib2f;$/;"	m	class:CL_GLFunctions
vertexAttrib2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2fvARB vertexAttrib2fv;$/;"	m	class:CL_GLFunctions
vertexAttrib2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2sARB vertexAttrib2s;$/;"	m	class:CL_GLFunctions
vertexAttrib2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib2svARB vertexAttrib2sv;$/;"	m	class:CL_GLFunctions
vertexAttrib3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3dARB vertexAttrib3d;$/;"	m	class:CL_GLFunctions
vertexAttrib3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3dvARB vertexAttrib3dv;$/;"	m	class:CL_GLFunctions
vertexAttrib3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3fARB vertexAttrib3f;$/;"	m	class:CL_GLFunctions
vertexAttrib3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3fvARB vertexAttrib3fv;$/;"	m	class:CL_GLFunctions
vertexAttrib3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3sARB vertexAttrib3s;$/;"	m	class:CL_GLFunctions
vertexAttrib3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib3svARB vertexAttrib3sv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nbv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NbvARB vertexAttrib4Nbv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Niv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NivARB vertexAttrib4Niv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nsv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NsvARB vertexAttrib4Nsv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nub	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NubARB vertexAttrib4Nub;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NubvARB vertexAttrib4Nubv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nuiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NuivARB vertexAttrib4Nuiv;$/;"	m	class:CL_GLFunctions
vertexAttrib4Nusv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4NusvARB vertexAttrib4Nusv;$/;"	m	class:CL_GLFunctions
vertexAttrib4bv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4bvARB vertexAttrib4bv;$/;"	m	class:CL_GLFunctions
vertexAttrib4d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4dARB vertexAttrib4d;$/;"	m	class:CL_GLFunctions
vertexAttrib4dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4dvARB vertexAttrib4dv;$/;"	m	class:CL_GLFunctions
vertexAttrib4f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4fARB vertexAttrib4f;$/;"	m	class:CL_GLFunctions
vertexAttrib4fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4fvARB vertexAttrib4fv;$/;"	m	class:CL_GLFunctions
vertexAttrib4iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4ivARB vertexAttrib4iv;$/;"	m	class:CL_GLFunctions
vertexAttrib4s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4sARB vertexAttrib4s;$/;"	m	class:CL_GLFunctions
vertexAttrib4sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4svARB vertexAttrib4sv;$/;"	m	class:CL_GLFunctions
vertexAttrib4ubv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4ubvARB vertexAttrib4ubv;$/;"	m	class:CL_GLFunctions
vertexAttrib4uiv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4uivARB vertexAttrib4uiv;$/;"	m	class:CL_GLFunctions
vertexAttrib4usv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttrib4usvARB vertexAttrib4usv;$/;"	m	class:CL_GLFunctions
vertexAttribPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexAttribPointerARB vertexAttribPointer;$/;"	m	class:CL_GLFunctions
vertexPointer	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glVertexPointer vertexPointer;$/;"	m	class:CL_GLFunctions
vertex_A	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	CL_DelauneyTriangulator_Vertex *vertex_A;$/;"	m	class:CL_DelauneyTriangulator_Triangle
vertex_B	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	CL_DelauneyTriangulator_Vertex *vertex_B;$/;"	m	class:CL_DelauneyTriangulator_Triangle
vertex_C	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	CL_DelauneyTriangulator_Vertex *vertex_C;$/;"	m	class:CL_DelauneyTriangulator_Triangle
viewport	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glViewport viewport;$/;"	m	class:CL_GLFunctions
violet	/usr/include/ClanLib/Display/color.h	/^	static CL_Color violet;$/;"	m	class:CL_Color
virtual_callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	VirtualCallback virtual_callback;$/;"	m	class:CL_FunctionSlot_v0
virtual_callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	VirtualCallback virtual_callback;$/;"	m	class:CL_MethodSlot_v0
virtual_callback	/usr/include/ClanLib/Signals/slot_v0.h	/^	VirtualCallback virtual_callback;$/;"	m	class:CL_UserDataMethodSlot_v0
visible_scrollbar	/usr/include/ClanLib/GUIStyleSilver/listbox_silver.h	/^	bool visible_scrollbar;$/;"	m	class:CL_ListBox_Silver
visible_scrollbar	/usr/include/ClanLib/GUIStyleSilver/treeview_silver.h	/^	bool visible_scrollbar;$/;"	m	class:CL_TreeView_Silver
w	/usr/include/ClanLib/Core/Math/cl_vector.h	/^	float w;$/;"	m	class:CL_Vector
wheat	/usr/include/ClanLib/Display/color.h	/^	static CL_Color wheat;$/;"	m	class:CL_Color
white	/usr/include/ClanLib/Display/color.h	/^	static CL_Color white;$/;"	m	class:CL_Color
whitesmoke	/usr/include/ClanLib/Display/color.h	/^	static CL_Color whitesmoke;$/;"	m	class:CL_Color
width	/usr/include/ClanLib/Core/Math/size.h	/^	float width;$/;"	m	class:CL_Sizef
width	/usr/include/ClanLib/Core/Math/size.h	/^	int width;$/;"	m	class:CL_Size
window	/usr/include/ClanLib/GUIStyleSilver/window_silver.h	/^	CL_Window *window;$/;"	m	class:CL_Window_Silver
windowPos2d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2dARB windowPos2d;$/;"	m	class:CL_GLFunctions
windowPos2dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2dvARB windowPos2dv;$/;"	m	class:CL_GLFunctions
windowPos2f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2fARB windowPos2f;$/;"	m	class:CL_GLFunctions
windowPos2fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2fvARB windowPos2fv;$/;"	m	class:CL_GLFunctions
windowPos2i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2iARB windowPos2i;$/;"	m	class:CL_GLFunctions
windowPos2iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2ivARB windowPos2iv;$/;"	m	class:CL_GLFunctions
windowPos2s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2sARB windowPos2s;$/;"	m	class:CL_GLFunctions
windowPos2sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos2svARB windowPos2sv;$/;"	m	class:CL_GLFunctions
windowPos3d	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3dARB windowPos3d;$/;"	m	class:CL_GLFunctions
windowPos3dv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3dvARB windowPos3dv;$/;"	m	class:CL_GLFunctions
windowPos3f	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3fARB windowPos3f;$/;"	m	class:CL_GLFunctions
windowPos3fv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3fvARB windowPos3fv;$/;"	m	class:CL_GLFunctions
windowPos3i	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3iARB windowPos3i;$/;"	m	class:CL_GLFunctions
windowPos3iv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3ivARB windowPos3iv;$/;"	m	class:CL_GLFunctions
windowPos3s	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3sARB windowPos3s;$/;"	m	class:CL_GLFunctions
windowPos3sv	/usr/include/ClanLib/GL/opengl_wrap.h	/^	ptr_glWindowPos3svARB windowPos3sv;$/;"	m	class:CL_GLFunctions
x	/usr/include/ClanLib/Core/Math/cl_vector.h	/^	float x;$/;"	m	class:CL_Vector
x	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	double x;$/;"	m	class:CL_DelauneyTriangulator_Vertex
x	/usr/include/ClanLib/Core/Math/point.h	/^	float x;$/;"	m	class:CL_Pointf
x	/usr/include/ClanLib/Core/Math/point.h	/^	int x;$/;"	m	class:CL_Point
x	/usr/include/ClanLib/Core/Math/vector2.h	/^	float x, y;$/;"	m	class:CL_Vector2
x1	/usr/include/ClanLib/Core/Math/quad.h	/^	int x1;$/;"	m	class:CL_Quad
x2	/usr/include/ClanLib/Core/Math/quad.h	/^	int x2;$/;"	m	class:CL_Quad
x3	/usr/include/ClanLib/Core/Math/quad.h	/^	int x3;$/;"	m	class:CL_Quad
x4	/usr/include/ClanLib/Core/Math/quad.h	/^	int x4;$/;"	m	class:CL_Quad
y	/usr/include/ClanLib/Core/Math/cl_vector.h	/^	float y;$/;"	m	class:CL_Vector
y	/usr/include/ClanLib/Core/Math/delauney_triangulator.h	/^	double y;$/;"	m	class:CL_DelauneyTriangulator_Vertex
y	/usr/include/ClanLib/Core/Math/point.h	/^	float y;$/;"	m	class:CL_Pointf
y	/usr/include/ClanLib/Core/Math/point.h	/^	int y;$/;"	m	class:CL_Point
y	/usr/include/ClanLib/Core/Math/vector2.h	/^	float x, y;$/;"	m	class:CL_Vector2
y1	/usr/include/ClanLib/Core/Math/quad.h	/^	int y1;$/;"	m	class:CL_Quad
y2	/usr/include/ClanLib/Core/Math/quad.h	/^	int y2;$/;"	m	class:CL_Quad
y3	/usr/include/ClanLib/Core/Math/quad.h	/^	int y3;$/;"	m	class:CL_Quad
y4	/usr/include/ClanLib/Core/Math/quad.h	/^	int y4;$/;"	m	class:CL_Quad
yellow	/usr/include/ClanLib/Display/color.h	/^	static CL_Color yellow;$/;"	m	class:CL_Color
yellowgreen	/usr/include/ClanLib/Display/color.h	/^	static CL_Color yellowgreen;$/;"	m	class:CL_Color
z	/usr/include/ClanLib/Core/Math/cl_vector.h	/^	float z;$/;"	m	class:CL_Vector
~CL_Clonable	/usr/include/ClanLib/Core/System/clonable.h	/^	virtual ~CL_Clonable() {}$/;"	f	class:CL_Clonable
~CL_ComponentStyle	/usr/include/ClanLib/GUI/component_style.h	/^	virtual ~CL_ComponentStyle() { return; }$/;"	f	class:CL_ComponentStyle
~CL_Contour	/usr/include/ClanLib/Display/Collision/contour.h	/^	~CL_Contour() {};$/;"	f	class:CL_Contour
~CL_GlyphBuffer	/usr/include/ClanLib/Display/glyph_buffer.h	/^	virtual ~CL_GlyphBuffer() {;}$/;"	f	class:CL_GlyphBuffer
~CL_Image_Silver	/usr/include/ClanLib/GUIStyleSilver/image_silver.h	/^	virtual ~CL_Image_Silver() {}$/;"	f	class:CL_Image_Silver
~CL_InputSource	/usr/include/ClanLib/Core/IOData/inputsource.h	/^	virtual ~CL_InputSource() { return; }$/;"	f	class:CL_InputSource
~CL_InputSourceProvider	/usr/include/ClanLib/Core/IOData/inputsource_provider.h	/^	virtual ~CL_InputSourceProvider() { return; }$/;"	f	class:CL_InputSourceProvider
~CL_LibraryFactory	/usr/include/ClanLib/Core/System/cl_library.h	/^inline CL_LibraryFactory::~CL_LibraryFactory() {}$/;"	f	class:CL_LibraryFactory
~CL_LibraryManager	/usr/include/ClanLib/Core/System/cl_library.h	/^inline CL_LibraryManager::~CL_LibraryManager() {}$/;"	f	class:CL_LibraryManager
~CL_ListItem	/usr/include/ClanLib/GUI/listitem.h	/^	virtual ~CL_ListItem(){}$/;"	f	class:CL_ListItem
~CL_MutexSection	/usr/include/ClanLib/Core/System/mutex.h	/^	virtual ~CL_MutexSection()$/;"	f	class:CL_MutexSection
~CL_MutexSharedPtr	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	~CL_MutexSharedPtr() { decrement(); }$/;"	f	class:CL_MutexSharedPtr
~CL_MutexSharedPtr_Deleter	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	~CL_MutexSharedPtr_Deleter() { delete this->ptr; }$/;"	f	class:CL_MutexSharedPtr_Deleter
~CL_MutexSharedPtr_Generic	/usr/include/ClanLib/Core/System/mutexsharedptr.h	/^	virtual ~CL_MutexSharedPtr_Generic() { return; }$/;"	f	class:CL_MutexSharedPtr_Generic
~CL_OutlineProvider	/usr/include/ClanLib/Display/Collision/outline_provider.h	/^	virtual ~CL_OutlineProvider() {}; $/;"	f	class:CL_OutlineProvider
~CL_OutputSource	/usr/include/ClanLib/Core/IOData/outputsource.h	/^	virtual ~CL_OutputSource() { return; }$/;"	f	class:CL_OutputSource
~CL_OutputSourceProvider	/usr/include/ClanLib/Core/IOData/outputsource_provider.h	/^	virtual ~CL_OutputSourceProvider() { return; }$/;"	f	class:CL_OutputSourceProvider
~CL_OwningPtr	/usr/include/ClanLib/Core/System/owningptr.h	/^		~CL_OwningPtr() {delete ptr;}$/;"	f	class:CL_OwningPtr
~CL_ProgressBar_Silver	/usr/include/ClanLib/GUIStyleSilver/progressbar_silver.h	/^	virtual ~CL_ProgressBar_Silver() {};$/;"	f	class:CL_ProgressBar_Silver
~CL_Raw	/usr/include/ClanLib/Core/Resources/resourcetype_raw.h	/^	~CL_Raw()$/;"	f	class:CL_Raw
~CL_Runnable	/usr/include/ClanLib/Core/System/thread.h	/^	virtual ~CL_Runnable() { return; }$/;"	f	class:CL_Runnable
~CL_SharedPtr	/usr/include/ClanLib/Core/System/sharedptr.h	/^	~CL_SharedPtr() { decrement(); }$/;"	f	class:CL_SharedPtr
~CL_SharedPtr_Deleter	/usr/include/ClanLib/Core/System/sharedptr.h	/^	~CL_SharedPtr_Deleter() { delete this->ptr; }$/;"	f	class:CL_SharedPtr_Deleter
~CL_SharedPtr_Generic	/usr/include/ClanLib/Core/System/sharedptr.h	/^	virtual ~CL_SharedPtr_Generic() { return; }$/;"	f	class:CL_SharedPtr_Generic
~CL_Signal	/usr/include/ClanLib/Signals/signal.h	/^	virtual ~CL_Signal() { return; }$/;"	f	class:CL_Signal
~CL_Signal_v0	/usr/include/ClanLib/Signals/signal_v0.h	/^	~CL_Signal_v0()$/;"	f	class:CL_Signal_v0
~CL_Signal_v0_Generic	/usr/include/ClanLib/Signals/signal_v0.h	/^		~CL_Signal_v0_Generic()$/;"	f	class:CL_Signal_v0::CL_Signal_v0_Generic
~CL_Signal_v1	/usr/include/ClanLib/Signals/signal_v1.h	/^	~CL_Signal_v1()$/;"	f	class:CL_Signal_v1
~CL_Signal_v1_Generic	/usr/include/ClanLib/Signals/signal_v1.h	/^		~CL_Signal_v1_Generic()$/;"	f	class:CL_Signal_v1::CL_Signal_v1_Generic
~CL_Signal_v2	/usr/include/ClanLib/Signals/signal_v2.h	/^	~CL_Signal_v2()$/;"	f	class:CL_Signal_v2
~CL_Signal_v2_Generic	/usr/include/ClanLib/Signals/signal_v2.h	/^		~CL_Signal_v2_Generic()$/;"	f	class:CL_Signal_v2::CL_Signal_v2_Generic
~CL_Signal_v3	/usr/include/ClanLib/Signals/signal_v3.h	/^	~CL_Signal_v3()$/;"	f	class:CL_Signal_v3
~CL_Signal_v3_Generic	/usr/include/ClanLib/Signals/signal_v3.h	/^		~CL_Signal_v3_Generic()$/;"	f	class:CL_Signal_v3::CL_Signal_v3_Generic
~CL_Signal_v4	/usr/include/ClanLib/Signals/signal_v4.h	/^	~CL_Signal_v4()$/;"	f	class:CL_Signal_v4
~CL_Signal_v4_Generic	/usr/include/ClanLib/Signals/signal_v4.h	/^		~CL_Signal_v4_Generic()$/;"	f	class:CL_Signal_v4::CL_Signal_v4_Generic
~CL_Signal_v5	/usr/include/ClanLib/Signals/signal_v5.h	/^	~CL_Signal_v5()$/;"	f	class:CL_Signal_v5
~CL_Signal_v5_Generic	/usr/include/ClanLib/Signals/signal_v5.h	/^		~CL_Signal_v5_Generic()$/;"	f	class:CL_Signal_v5::CL_Signal_v5_Generic
~CL_TextStyler	/usr/include/ClanLib/Display/text_styler.h	/^	virtual ~CL_TextStyler() {resource.unload();}$/;"	f	class:CL_TextStyler
~CL_XMLToken	/usr/include/ClanLib/Core/XML/xml_token.h	/^	virtual ~CL_XMLToken() {};$/;"	f	class:CL_XMLToken
